.. index:: pair: class; cv::AlignExposures
.. _doxid-df/d56/classcv_1_1_align_exposures:

class cv::AlignExposures
========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

The base class for algorithms that align images of the same scene with different exposures. :ref:`More...<details-df/d56/classcv_1_1_align_exposures>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <photo.hpp>
	
	class AlignExposures: public :ref:`cv::Algorithm<doxid-d1/d41/classcv_1_1_algorithm>`
	{
	public:
		// methods
	
		virtual
		void
		:ref:`process<doxid-df/d56/classcv_1_1_align_exposures_1aa2379b2fb9629d779b6a54ad1cabfc1c>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` src,
			std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>& dst,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` times,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` response
			) = 0;
	};

	// direct descendants

	class :ref:`AlignMTB<doxid-d6/d15/classcv_1_1_align_m_t_b>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-df/d56/classcv_1_1_align_exposures:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

The base class for algorithms that align images of the same scene with different exposures.

Methods
-------

.. index:: pair: function; process
.. _doxid-df/d56/classcv_1_1_align_exposures_1aa2379b2fb9629d779b6a54ad1cabfc1c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	process(
		:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` src,
		std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>& dst,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` times,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` response
		) = 0

Aligns images.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- vector of input images

	*
		- dst

		- vector of aligned images

	*
		- times

		- vector of exposure time values for each image

	*
		- response

		- 256x1 matrix with inverse camera response function for each pixel value, it should have the same number of channels as images.

