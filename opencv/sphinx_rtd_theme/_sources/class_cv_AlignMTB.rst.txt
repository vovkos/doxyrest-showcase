.. index:: pair: class; cv::AlignMTB
.. _doxid-d6/d15/classcv_1_1_align_m_t_b:

class cv::AlignMTB
==================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This algorithm converts images to median threshold bitmaps (1 for pixels brighter than median luminance and 0 otherwise) and than aligns the resulting bitmaps using bit operations. :ref:`More...<details-d6/d15/classcv_1_1_align_m_t_b>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <photo.hpp>
	
	class AlignMTB: public :ref:`cv::AlignExposures<doxid-df/d56/classcv_1_1_align_exposures>`
	{
	public:
		// methods
	
		virtual
		:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`
		:ref:`calculateShift<doxid-d6/d15/classcv_1_1_align_m_t_b_1a49782cba1b954472ade1d1ff1b8341bb>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img0,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img1
			) = 0;
	
		virtual
		void
		:ref:`computeBitmaps<doxid-d6/d15/classcv_1_1_align_m_t_b_1a05dfd95e34ecb2c02b179d0a9d790b22>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` tb,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` eb
			) = 0;
	
		virtual
		bool
		:target:`getCut<doxid-d6/d15/classcv_1_1_align_m_t_b_1a533eaca648580b495f4604e530ac6adc>`() const = 0;
	
		virtual
		int
		:target:`getExcludeRange<doxid-d6/d15/classcv_1_1_align_m_t_b_1a7c78880b2f990a72f1d485b04e36d423>`() const = 0;
	
		virtual
		int
		:target:`getMaxBits<doxid-d6/d15/classcv_1_1_align_m_t_b_1a5336816f21e36ac9ed2cde3ccd5030fd>`() const = 0;
	
		virtual
		void
		:ref:`process<doxid-d6/d15/classcv_1_1_align_m_t_b_1a5c3570cfd647cd86550aaf94bbe2d5cf>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` src,
			std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>& dst,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` times,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` response
			) = 0;
	
		virtual
		void
		:ref:`process<doxid-d6/d15/classcv_1_1_align_m_t_b_1a37b3417d844f362d781f34155cbcb201>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` src,
			std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>& dst
			) = 0;
	
		virtual
		void
		:target:`setCut<doxid-d6/d15/classcv_1_1_align_m_t_b_1a7558c6509092d713c29ac92cffcc1355>`(bool value) = 0;
	
		virtual
		void
		:target:`setExcludeRange<doxid-d6/d15/classcv_1_1_align_m_t_b_1aeed184da3483a94c8a25351555d41b6a>`(int exclude_range) = 0;
	
		virtual
		void
		:target:`setMaxBits<doxid-d6/d15/classcv_1_1_align_m_t_b_1a6f55841ed6e1f9482483595008250560>`(int max_bits) = 0;
	
		virtual
		void
		:ref:`shiftMat<doxid-d6/d15/classcv_1_1_align_m_t_b_1a9718fe1a611b341eb1063245c9d327e3>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			const :ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>` shift
			) = 0;
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`process<doxid-df/d56/classcv_1_1_align_exposures_1aa2379b2fb9629d779b6a54ad1cabfc1c>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` src,
			std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>& dst,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` times,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` response
			) = 0;

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d6/d15/classcv_1_1_align_m_t_b:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This algorithm converts images to median threshold bitmaps (1 for pixels brighter than median luminance and 0 otherwise) and than aligns the resulting bitmaps using bit operations.

It is invariant to exposure, so exposure values and camera response are not necessary.

In this implementation new image regions are filled with zeros.

For more information see :ref:`[90] <doxid-d0/de3/citelist_1CITEREF_GW03>`.

Methods
-------

.. index:: pair: function; calculateShift
.. _doxid-d6/d15/classcv_1_1_align_m_t_b_1a49782cba1b954472ade1d1ff1b8341bb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`
	calculateShift(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img0,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img1
		) = 0

Calculates shift between two images, i. e. how to shift the second image to correspond it with the first.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- img0

		- first image

	*
		- img1

		- second image

.. index:: pair: function; computeBitmaps
.. _doxid-d6/d15/classcv_1_1_align_m_t_b_1a05dfd95e34ecb2c02b179d0a9d790b22:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	computeBitmaps(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` tb,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` eb
		) = 0

Computes median threshold and exclude bitmaps of given image.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- img

		- input image

	*
		- tb

		- median threshold bitmap

	*
		- eb

		- exclude bitmap

.. index:: pair: function; process
.. _doxid-d6/d15/classcv_1_1_align_m_t_b_1a5c3570cfd647cd86550aaf94bbe2d5cf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	process(
		:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` src,
		std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>& dst,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` times,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` response
		) = 0

Aligns images.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- vector of input images

	*
		- dst

		- vector of aligned images

	*
		- times

		- vector of exposure time values for each image

	*
		- response

		- 256x1 matrix with inverse camera response function for each pixel value, it should have the same number of channels as images.

.. index:: pair: function; process
.. _doxid-d6/d15/classcv_1_1_align_m_t_b_1a37b3417d844f362d781f34155cbcb201:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	process(
		:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` src,
		std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>& dst
		) = 0

Short version of process, that doesn't take extra arguments.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- vector of input images

	*
		- dst

		- vector of aligned images

.. index:: pair: function; shiftMat
.. _doxid-d6/d15/classcv_1_1_align_m_t_b_1a9718fe1a611b341eb1063245c9d327e3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	shiftMat(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		const :ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>` shift
		) = 0

Helper function, that shift :ref:`Mat <doxid-db/de6/classcv_1_1_mat>` filling new regions with zeros.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- input image

	*
		- dst

		- result image

	*
		- shift

		- shift value

