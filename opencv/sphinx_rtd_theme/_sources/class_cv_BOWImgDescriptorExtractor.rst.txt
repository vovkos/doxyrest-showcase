.. index:: pair: class; cv::BOWImgDescriptorExtractor
.. _doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor:

class cv::BOWImgDescriptorExtractor
===================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Class to compute an image descriptor using the *bag of visual words*. :ref:`More...<details-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <features2d.hpp>
	
	class BOWImgDescriptorExtractor
	{
	public:
		// construction
	
		:ref:`BOWImgDescriptorExtractor<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a1fd114a5108edb9d33674d8433ff12ec>`(
			const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorExtractor<doxid-da/d9b/group__features2d_1gadd5cf7c76865f14468cfdd9cc08eb990>`>& dextractor,
			const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>& dmatcher
			);
	
		:ref:`BOWImgDescriptorExtractor<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1aa37f98c0c292cfb0e9ec23ef4fbb11c1>`(const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>& dmatcher);

		// methods
	
		void
		:ref:`compute<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1ac4e1019795995a9395aded0a9c1c3ed6>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
			std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` imgDescriptor,
			std::vector<std::vector<int>>* pointIdxsOfClusters = 0,
			:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`* descriptors = 0
			);
	
		void
		:ref:`compute<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1ad6fd3ce0bbe507644c0979178f2384f4>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` keypointDescriptors,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` imgDescriptor,
			std::vector<std::vector<int>>* pointIdxsOfClusters = 0
			);
	
		void
		:target:`compute2<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a2c3540b57b4f74b4e87778e3cb338bb0>`(
			const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& image,
			std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
			:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& imgDescriptor
			);
	
		int
		:ref:`descriptorSize<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a0f41a68e3326e1bffd2f32aa64a9871d>`() const;
	
		int
		:ref:`descriptorType<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a4abb4c684a25f843b2f033f2bc7f52eb>`() const;
	
		const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`&
		:ref:`getVocabulary<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a4fdfe378202ce308eb36a4692c4f6f38>`() const;
	
		void
		:ref:`setVocabulary<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a9d8425d78fc4e81991a80e471d6089e6>`(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& vocabulary);

	protected:
		// fields
	
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorExtractor<doxid-da/d9b/group__features2d_1gadd5cf7c76865f14468cfdd9cc08eb990>`> :target:`dextractor<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1acd0f100ac2f377432931062ce02f16cb>`;
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`> :target:`dmatcher<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a43311e57fce860293560e05a7e933424>`;
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>` :target:`vocabulary<doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1ab5753a53d4f4c6e2c18b61e1b4559b98>`;
	};
.. _details-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Class to compute an image descriptor using the *bag of visual words*.

Such a computation consists of the following steps:

#. Compute descriptors for a given image and its keypoints set.

#. Find the nearest visual words from the vocabulary for each keypoint descriptor.

#. Compute the bag-of-words image descriptor as is a normalized histogram of vocabulary words encountered in the image. The i-th bin of the histogram is a frequency of i-th word of the vocabulary in the given image.

Construction
------------

.. index:: pair: function; BOWImgDescriptorExtractor
.. _doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a1fd114a5108edb9d33674d8433ff12ec:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	BOWImgDescriptorExtractor(
		const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorExtractor<doxid-da/d9b/group__features2d_1gadd5cf7c76865f14468cfdd9cc08eb990>`>& dextractor,
		const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>& dmatcher
		)

The constructor.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dextractor

		- Descriptor extractor that is used to compute descriptors for an input image and its keypoints.

	*
		- dmatcher

		- Descriptor matcher that is used to find the nearest word of the trained vocabulary for each keypoint descriptor of the image.

.. index:: pair: function; BOWImgDescriptorExtractor
.. _doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1aa37f98c0c292cfb0e9ec23ef4fbb11c1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	BOWImgDescriptorExtractor(const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>& dmatcher)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

Methods
-------

.. index:: pair: function; compute
.. _doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1ac4e1019795995a9395aded0a9c1c3ed6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	compute(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` imgDescriptor,
		std::vector<std::vector<int>>* pointIdxsOfClusters = 0,
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`* descriptors = 0
		)

Computes an image descriptor using the set visual vocabulary.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- image

		- Image, for which the descriptor is computed.

	*
		- keypoints

		- Keypoints detected in the input image.

	*
		- imgDescriptor

		- Computed output image descriptor.

	*
		- pointIdxsOfClusters

		- Indices of keypoints that belong to the cluster. This means that pointIdxsOfClusters[i] are keypoint indices that belong to the i -th cluster (word of vocabulary) returned if it is non-zero.

	*
		- descriptors

		- Descriptors of the image keypoints that are returned if they are non-zero.

.. index:: pair: function; compute
.. _doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1ad6fd3ce0bbe507644c0979178f2384f4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	compute(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` keypointDescriptors,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` imgDescriptor,
		std::vector<std::vector<int>>* pointIdxsOfClusters = 0
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- keypointDescriptors

		- Computed descriptors to match with vocabulary.

	*
		- imgDescriptor

		- Computed output image descriptor.

	*
		- pointIdxsOfClusters

		- Indices of keypoints that belong to the cluster. This means that pointIdxsOfClusters[i] are keypoint indices that belong to the i -th cluster (word of vocabulary) returned if it is non-zero.

.. index:: pair: function; descriptorSize
.. _doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a0f41a68e3326e1bffd2f32aa64a9871d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	descriptorSize() const

Returns an image descriptor size if the vocabulary is set. Otherwise, it returns 0.

.. index:: pair: function; descriptorType
.. _doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a4abb4c684a25f843b2f033f2bc7f52eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	descriptorType() const

Returns an image descriptor type.

.. index:: pair: function; getVocabulary
.. _doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a4fdfe378202ce308eb36a4692c4f6f38:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`&
	getVocabulary() const

Returns the set vocabulary.

.. index:: pair: function; setVocabulary
.. _doxid-d7/d64/classcv_1_1_b_o_w_img_descriptor_extractor_1a9d8425d78fc4e81991a80e471d6089e6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setVocabulary(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& vocabulary)

Sets a visual vocabulary.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- vocabulary

		- Vocabulary (can be trained using the inheritor of :ref:`BOWTrainer <doxid-dc/d26/classcv_1_1_b_o_w_trainer>`). Each row of the vocabulary is a visual word (cluster center).

