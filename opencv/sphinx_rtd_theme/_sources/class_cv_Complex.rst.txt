.. index:: pair: class; cv::Complex
.. _doxid-da/d75/classcv_1_1_complex:

template class cv::Complex
==========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

A complex number class. :ref:`More...<details-da/d75/classcv_1_1_complex>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <types.hpp>
	
	template <typename _Tp>
	class Complex
	{
	public:
		// fields
	
		_Tp :target:`im<doxid-da/d75/classcv_1_1_complex_1a7bdb5493cb787a4e644a51744c5dfbba>`;
		_Tp :target:`re<doxid-da/d75/classcv_1_1_complex_1ac4cd4a983c71a573eaeaa8bbbda02495>`;

		// construction
	
		:ref:`Complex<doxid-da/d75/classcv_1_1_complex_1af3bec7e8907947043569bf8a366a84f0>`();
	
		:target:`Complex<doxid-da/d75/classcv_1_1_complex_1ad7d6fe6d84cff0cd7ad5e46dccdb5c1b>`(
			_Tp _re,
			_Tp _im = 0
			);

		// methods
	
		Complex
		:ref:`conj<doxid-da/d75/classcv_1_1_complex_1a6e911d2fb0bedec658406fc135f9d1a6>`() const;
	
		template <typename T2>
		:ref:`operator Complex< T2 ><doxid-da/d75/classcv_1_1_complex_1a4a96b4e23292e84682ff67435018c93c>`() const;
	};
.. _details-da/d75/classcv_1_1_complex:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

A complex number class.

The template class is similar and compatible with std::complex, however it provides slightly more convenient access to the real and imaginary parts using through the simple field access, as opposite to std::complex::real() and std::complex::imag().

Construction
------------

.. index:: pair: function; Complex
.. _doxid-da/d75/classcv_1_1_complex_1af3bec7e8907947043569bf8a366a84f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Complex()

constructors

Methods
-------

.. index:: pair: function; conj
.. _doxid-da/d75/classcv_1_1_complex_1a6e911d2fb0bedec658406fc135f9d1a6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Complex
	conj() const

conjugation

.. index:: pair: function; operator Complex< T2 >
.. _doxid-da/d75/classcv_1_1_complex_1a4a96b4e23292e84682ff67435018c93c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T2>
	operator Complex< T2 >() const

conversion to another data type

