.. index:: pair: class; cv::DescriptorMatcher
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher:

class cv::DescriptorMatcher
===========================

.. toctree::
	:hidden:

	class_cv_DescriptorMatcher_DescriptorCollection.rst

Overview
~~~~~~~~

Abstract base class for matching keypoint descriptors. :ref:`More...<details-d4/d64/classcv_1_1_descriptor_matcher>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <features2d.hpp>
	
	class DescriptorMatcher: public :ref:`cv::Algorithm<doxid-d1/d41/classcv_1_1_algorithm>`
	{
	public:
		// enums
	
		enum
		{
		    :target:`FLANNBASED<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eaf73d671c6860c24f44b2880a77fadcdc>`            = 1,
		    :target:`BRUTEFORCE<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eaddf99aae344c73b63d77764440711b76>`            = 2,
		    :target:`BRUTEFORCE_L1<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eac4f170ff27df2f2cadabd75c129ec468>`         = 3,
		    :target:`BRUTEFORCE_HAMMING<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972ea7362dae849e477ed4b1bc862c8ebb5c4>`    = 4,
		    :target:`BRUTEFORCE_HAMMINGLUT<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eae93477eddb9309e995b78a4eb677b9fe>` = 5,
		    :target:`BRUTEFORCE_SL2<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eaf88193b09daf077fec5015a9906a67e8>`        = 6,
		};

		// classes
	
		class :ref:`DescriptorCollection<doxid-d6/d0e/classcv_1_1_descriptor_matcher_1_1_descriptor_collection>`;

		// methods
	
		virtual
		void
		:ref:`add<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a623a2b07755cf7fb1c79554af73cdbb0>`(:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` descriptors);
	
		virtual
		void
		:ref:`clear<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a83f51ddad6342a77777706d45e182ed4>`();
	
		virtual
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<DescriptorMatcher>
		:ref:`clone<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a8d0dfab3c560c3edada03155c97ed8a9>`(bool emptyTrainData = false) const = 0;
	
		virtual
		bool
		:ref:`empty<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a0f2322bf61c76795b279b531a8f1e146>`() const;
	
		const std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>&
		:ref:`getTrainDescriptors<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa6950934cbf83d774152d426dd82261b>`() const;
	
		virtual
		bool
		:ref:`isMaskSupported<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a3cc074710ccb466a662815969e14cf5e>`() const = 0;
	
		void
		:ref:`knnMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a378f35c9b1a5dfa4022839a45cdf0e89>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) const;
	
		void
		:ref:`knnMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa880f9353cdf185ccf3013e08210483a>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			);
	
		void
		:ref:`match<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a0f046f47b68ec7074391e1e85c750cba>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
			std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>& matches,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`()
			) const;
	
		void
		:ref:`match<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a695c0aceafc907c024c24a0b5cdff758>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>& matches,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`()
			);
	
		void
		:ref:`radiusMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a56b8dcd6fc600f8f2a23212f6e4c5082>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) const;
	
		void
		:ref:`radiusMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aec313028966f30f5b011a3e976f62c09>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			);
	
		void
		:target:`read<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aba10146926505e6b90377f24489e336c>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& fileName);
	
		virtual
		void
		:ref:`read<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a198238db0f6ab3337db3c42df34dcf34>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`train<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a80e9fd98de5908f5348c17696eeb1a32>`();
	
		void
		:target:`write<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a9e848d967aaed6930da407f338ca17ba>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& fileName) const;
	
		virtual
		void
		:ref:`write<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a3f83c9ea51e1155ebe43689a9a4d8a73>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<DescriptorMatcher>
		:ref:`create<doxid-d4/d64/classcv_1_1_descriptor_matcher_1ab5dc5036569ecc8d47565007fa518257>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& descriptorMatcherType);
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<DescriptorMatcher>
		:target:`create<doxid-d4/d64/classcv_1_1_descriptor_matcher_1af76545ce331f954592e3cf0ed05b8fe7>`(int matcherType);

	protected:
		// fields
	
		std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`> :ref:`trainDescCollection<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a6c1d27bb1cea2a46e0a5c7d297368edd>`;
		std::vector<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`> :target:`utrainDescCollection<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a66bd1ba0753ab3ebb792e7b4bf5af2ab>`;

		// methods
	
		void
		:target:`checkMasks<doxid-d4/d64/classcv_1_1_descriptor_matcher_1acbcaa368465fd3924c8bb70851a98944>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks,
			int queryDescriptorsCount
			) const;
	
		virtual
		void
		:ref:`knnMatchImpl<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a38f18a66b3498fa5c960e29ed0056d44>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) = 0;
	
		virtual
		void
		:target:`radiusMatchImpl<doxid-d4/d64/classcv_1_1_descriptor_matcher_1afc03bcd8e385f4b3684b7a7d42810ff6>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) = 0;
	
		static
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
		:target:`clone_op<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a7aa961c11ccdc6a9b1495f5aaf83d251>`(:ref:`Mat<doxid-db/de6/classcv_1_1_mat>` m);
	
		static
		bool
		:target:`isMaskedOut<doxid-d4/d64/classcv_1_1_descriptor_matcher_1acf9d628dd4c52e6ff00eb92801fd0921>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks,
			int queryIdx
			);
	
		static
		bool
		:target:`isPossibleMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aaeca71427249a189e35e77066f25fc8b>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask,
			int queryIdx,
			int trainIdx
			);
	};

	// direct descendants

	class :ref:`BFMatcher<doxid-d9/d49/classcv_1_1_b_f_matcher>`;
	class :ref:`FlannBasedMatcher<doxid-de/d48/classcv_1_1_flann_based_matcher>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d4/d64/classcv_1_1_descriptor_matcher:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Abstract base class for matching keypoint descriptors.

It has two groups of match methods: for matching descriptors of an image with another image or with an image set.

Fields
------

.. index:: pair: variable; trainDescCollection
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a6c1d27bb1cea2a46e0a5c7d297368edd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`> trainDescCollection

Collection of descriptors from train images.

Methods
-------

.. index:: pair: function; add
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a623a2b07755cf7fb1c79554af73cdbb0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	add(:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` descriptors)

Adds descriptors to train a CPU(trainDescCollectionis) or GPU(utrainDescCollectionis) descriptor collection.

If the collection is not empty, the new descriptors are added to existing train descriptors.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- descriptors

		- Descriptors to add. Each descriptors[i] is a set of descriptors from the same train image.

.. index:: pair: function; clear
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a83f51ddad6342a77777706d45e182ed4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	clear()

Clears the train descriptor collections.

.. index:: pair: function; clone
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a8d0dfab3c560c3edada03155c97ed8a9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<DescriptorMatcher>
	clone(bool emptyTrainData = false) const = 0

Clones the matcher.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- emptyTrainData

		- If emptyTrainData is false, the method creates a deep copy of the object, that is, copies both parameters and train data. If emptyTrainData is true, the method creates an object copy with the current parameters but with empty train data.

.. index:: pair: function; empty
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a0f2322bf61c76795b279b531a8f1e146:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	empty() const

Returns true if there are no train descriptors in the both collections.

.. index:: pair: function; getTrainDescriptors
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa6950934cbf83d774152d426dd82261b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>&
	getTrainDescriptors() const

Returns a constant link to the train descriptor collection trainDescCollection .

.. index:: pair: function; isMaskSupported
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a3cc074710ccb466a662815969e14cf5e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isMaskSupported() const = 0

Returns true if the descriptor matcher supports masking permissible matches.

.. index:: pair: function; knnMatch
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a378f35c9b1a5dfa4022839a45cdf0e89:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	knnMatch(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
		std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
		int k,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		bool compactResult = false
		) const

Finds the k best matches for each descriptor from a query set.

These extended variants of :ref:`DescriptorMatcher::match <doxid-d4/d64/classcv_1_1_descriptor_matcher_1a0f046f47b68ec7074391e1e85c750cba>` methods find several best matches for each query descriptor. The matches are returned in the distance increasing order. See :ref:`DescriptorMatcher::match <doxid-d4/d64/classcv_1_1_descriptor_matcher_1a0f046f47b68ec7074391e1e85c750cba>` for the details about query and train descriptors.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- queryDescriptors

		- Query set of descriptors.

	*
		- trainDescriptors

		- Train set of descriptors. This set is not added to the train descriptors collection stored in the class object.

	*
		- mask

		- Mask specifying permissible matches between an input query and train matrices of descriptors.

	*
		- matches

		- Matches. Each matches[i] is k or less matches for the same query descriptor.

	*
		- k

		- Count of best matches found per each query descriptor or less if a query descriptor has less than k possible matches in total.

	*
		- compactResult

		- Parameter used when the mask (or masks) is not empty. If compactResult is false, the matches vector has the same size as queryDescriptors rows. If compactResult is true, the matches vector does not contain matches for fully masked-out query descriptors.

.. index:: pair: function; knnMatch
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa880f9353cdf185ccf3013e08210483a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	knnMatch(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
		std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
		int k,
		:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		bool compactResult = false
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- queryDescriptors

		- Query set of descriptors.

	*
		- matches

		- Matches. Each matches[i] is k or less matches for the same query descriptor.

	*
		- k

		- Count of best matches found per each query descriptor or less if a query descriptor has less than k possible matches in total.

	*
		- masks

		- Set of masks. Each masks[i] specifies permissible matches between the input query descriptors and stored train descriptors from the i-th image trainDescCollection[i].

	*
		- compactResult

		- Parameter used when the mask (or masks) is not empty. If compactResult is false, the matches vector has the same size as queryDescriptors rows. If compactResult is true, the matches vector does not contain matches for fully masked-out query descriptors.

.. index:: pair: function; match
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a0f046f47b68ec7074391e1e85c750cba:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	match(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
		std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>& matches,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`()
		) const

Finds the best match for each descriptor from a query set.

In the first variant of this method, the train descriptors are passed as an input argument. In the second variant of the method, train descriptors collection that was set by :ref:`DescriptorMatcher::add <doxid-d4/d64/classcv_1_1_descriptor_matcher_1a623a2b07755cf7fb1c79554af73cdbb0>` is used. Optional mask (or masks) can be passed to specify which query and training descriptors can be matched. Namely, queryDescriptors[i] can be matched with trainDescriptors[j] only if mask.at<uchar>(i,j) is non-zero.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- queryDescriptors

		- Query set of descriptors.

	*
		- trainDescriptors

		- Train set of descriptors. This set is not added to the train descriptors collection stored in the class object.

	*
		- matches

		- Matches. If a query descriptor is masked out in mask , no match is added for this descriptor. So, matches size may be smaller than the query descriptors count.

	*
		- mask

		- Mask specifying permissible matches between an input query and train matrices of descriptors.

.. index:: pair: function; match
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a695c0aceafc907c024c24a0b5cdff758:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	match(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
		std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>& matches,
		:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`()
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- queryDescriptors

		- Query set of descriptors.

	*
		- matches

		- Matches. If a query descriptor is masked out in mask , no match is added for this descriptor. So, matches size may be smaller than the query descriptors count.

	*
		- masks

		- Set of masks. Each masks[i] specifies permissible matches between the input query descriptors and stored train descriptors from the i-th image trainDescCollection[i].

.. index:: pair: function; radiusMatch
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a56b8dcd6fc600f8f2a23212f6e4c5082:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	radiusMatch(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
		std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
		float maxDistance,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		bool compactResult = false
		) const

For each query descriptor, finds the training descriptors not farther than the specified distance.

For each query descriptor, the methods find such training descriptors that the distance between the query descriptor and the training descriptor is equal or smaller than maxDistance. Found matches are returned in the distance increasing order.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- queryDescriptors

		- Query set of descriptors.

	*
		- trainDescriptors

		- Train set of descriptors. This set is not added to the train descriptors collection stored in the class object.

	*
		- matches

		- Found matches.

	*
		- compactResult

		- Parameter used when the mask (or masks) is not empty. If compactResult is false, the matches vector has the same size as queryDescriptors rows. If compactResult is true, the matches vector does not contain matches for fully masked-out query descriptors.

	*
		- maxDistance

		- Threshold for the distance between matched descriptors. Distance means here metric distance (e.g. :ref:`Hamming <doxid-d1/d33/structcv_1_1_hamming>` distance), not the distance between coordinates (which is measured in Pixels)!

	*
		- mask

		- Mask specifying permissible matches between an input query and train matrices of descriptors.

.. index:: pair: function; radiusMatch
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1aec313028966f30f5b011a3e976f62c09:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	radiusMatch(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
		std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
		float maxDistance,
		:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		bool compactResult = false
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- queryDescriptors

		- Query set of descriptors.

	*
		- matches

		- Found matches.

	*
		- maxDistance

		- Threshold for the distance between matched descriptors. Distance means here metric distance (e.g. :ref:`Hamming <doxid-d1/d33/structcv_1_1_hamming>` distance), not the distance between coordinates (which is measured in Pixels)!

	*
		- masks

		- Set of masks. Each masks[i] specifies permissible matches between the input query descriptors and stored train descriptors from the i-th image trainDescCollection[i].

	*
		- compactResult

		- Parameter used when the mask (or masks) is not empty. If compactResult is false, the matches vector has the same size as queryDescriptors rows. If compactResult is true, the matches vector does not contain matches for fully masked-out query descriptors.

.. index:: pair: function; read
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a198238db0f6ab3337db3c42df34dcf34:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	read(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn)

Reads algorithm parameters from a file storage.

.. index:: pair: function; train
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a80e9fd98de5908f5348c17696eeb1a32:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	train()

Trains a descriptor matcher.

Trains a descriptor matcher (for example, the flann index). In all methods to match, the method :ref:`train() <doxid-d4/d64/classcv_1_1_descriptor_matcher_1a80e9fd98de5908f5348c17696eeb1a32>` is run every time before matching. Some descriptor matchers (for example, BruteForceMatcher) have an empty implementation of this method. Other matchers really train their inner structures (for example, :ref:`FlannBasedMatcher <doxid-de/d48/classcv_1_1_flann_based_matcher>` trains :ref:`flann::Index <doxid-d5/d88/classcv_1_1flann_1_1_index>`).

.. index:: pair: function; write
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a3f83c9ea51e1155ebe43689a9a4d8a73:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	write(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const

Stores algorithm parameters in a file storage.

.. index:: pair: function; create
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1ab5dc5036569ecc8d47565007fa518257:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<DescriptorMatcher>
	create(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& descriptorMatcherType)

Creates a descriptor matcher of a given type with the default parameters (using default constructor).



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- descriptorMatcherType

		- 
		  Descriptor matcher type. Now the following matcher types are supported:
		  
		  * ``BruteForce`` (it uses :ref:`L2 <doxid-dd/dff/structcv_1_1_l2>`)
		  
		  * ``BruteForce-L1``
		  
		  * ``BruteForce-Hamming``
		  
		  * ``BruteForce-Hamming(2)``
		  
		  * ``FlannBased``

.. index:: pair: function; knnMatchImpl
.. _doxid-d4/d64/classcv_1_1_descriptor_matcher_1a38f18a66b3498fa5c960e29ed0056d44:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	knnMatchImpl(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
		std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
		int k,
		:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		bool compactResult = false
		) = 0

In fact the matching is implemented only by the following two methods. These methods suppose that the class object has been trained already. Public match methods call these methods after calling :ref:`train() <doxid-d4/d64/classcv_1_1_descriptor_matcher_1a80e9fd98de5908f5348c17696eeb1a32>`.

