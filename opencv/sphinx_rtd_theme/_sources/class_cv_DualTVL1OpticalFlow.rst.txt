.. index:: pair: class; cv::DualTVL1OpticalFlow
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow:

class cv::DualTVL1OpticalFlow
=============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

"Dual TV L1" Optical Flow :ref:`Algorithm <doxid-d1/d41/classcv_1_1_algorithm>`. :ref:`More...<details-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <tracking.hpp>
	
	class DualTVL1OpticalFlow: public :ref:`cv::DenseOpticalFlow<doxid-d9/d8c/classcv_1_1_dense_optical_flow>`
	{
	public:
		// methods
	
		virtual
		double
		:ref:`getEpsilon<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a0d3aaac31e944c8f3b0f183308edb4bf>`() const = 0;
	
		virtual
		double
		:ref:`getGamma<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a96653da2712e1b2e4fd510d9db5dea10>`() const = 0;
	
		virtual
		int
		:ref:`getInnerIterations<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a81c2a9f613ddad76020c6e64a76ba007>`() const = 0;
	
		virtual
		double
		:ref:`getLambda<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1accb3b319657600ce834ce004842521cf>`() const = 0;
	
		virtual
		int
		:ref:`getMedianFiltering<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a5b5474af88fae8ec5f8fd9c16c4cba9d>`() const = 0;
	
		virtual
		int
		:ref:`getOuterIterations<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a2332996d6a9da5a036955978cbabf8b8>`() const = 0;
	
		virtual
		int
		:ref:`getScalesNumber<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a36b2dc550e6943384517dbeb14b6e5d8>`() const = 0;
	
		virtual
		double
		:ref:`getScaleStep<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a849d5113a4131d4cf13fe942595001d3>`() const = 0;
	
		virtual
		double
		:ref:`getTau<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a66612aa88c0816a278d50df131414df5>`() const = 0;
	
		virtual
		double
		:ref:`getTheta<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ae24604c8785a05665c5b8ac536187b00>`() const = 0;
	
		virtual
		bool
		:ref:`getUseInitialFlow<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1afc79dc66f0bd81202815a9fb52f59796>`() const = 0;
	
		virtual
		int
		:ref:`getWarpingsNumber<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ac3452101ba76ce6b1000241315529658>`() const = 0;
	
		virtual
		void
		:ref:`setEpsilon<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a0c29ffd1495eeb2378bc8f0818ea89ff>`(double val) = 0;
	
		virtual
		void
		:ref:`setGamma<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a2a503566a622446510c0ec942907cea2>`(double val) = 0;
	
		virtual
		void
		:ref:`setInnerIterations<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a20f6fa300a64735eb973cf770da1ddc7>`(int val) = 0;
	
		virtual
		void
		:ref:`setLambda<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a5b764d1335ddda122222a3132f7c6cf4>`(double val) = 0;
	
		virtual
		void
		:ref:`setMedianFiltering<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a1313b90e53d6960a5bfda3c2d805468d>`(int val) = 0;
	
		virtual
		void
		:ref:`setOuterIterations<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1adca68b234f1253cfecec1df06f2d4352>`(int val) = 0;
	
		virtual
		void
		:ref:`setScalesNumber<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a0a5deedfaded016ead92e3c46a67a190>`(int val) = 0;
	
		virtual
		void
		:ref:`setScaleStep<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a6ab6c3536df18913b9af8642d1ebda0d>`(double val) = 0;
	
		virtual
		void
		:ref:`setTau<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ac1e5deb30cc34b6f71ee9e555ea666c3>`(double val) = 0;
	
		virtual
		void
		:ref:`setTheta<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a1b2ebccc5eb674cab130d1ead7f52478>`(double val) = 0;
	
		virtual
		void
		:ref:`setUseInitialFlow<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ae09ec7a8cd3f37c7fcc9bd42aae60ea4>`(bool val) = 0;
	
		virtual
		void
		:ref:`setWarpingsNumber<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a33cd47bd54ff4381c7cdbebb6de5520e>`(int val) = 0;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<DualTVL1OpticalFlow>
		:ref:`create<doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a382eeb0d23bf9b91ecd2c4e07e1dacd1>`(
			double tau = 0.25,
			double lambda = 0.15,
			double theta = 0.3,
			int nscales = 5,
			int warps = 5,
			double epsilon = 0.01,
			int innnerIterations = 30,
			int outerIterations = 10,
			double scaleStep = 0.8,
			double gamma = 0.0,
			int medianFiltering = 5,
			bool useInitialFlow = false
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`calc<doxid-d9/d8c/classcv_1_1_dense_optical_flow_1a20037021dec04e9006149204ad610d04>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` I0,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` I1,
			:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` flow
			) = 0;
	
		virtual
		void
		:ref:`collectGarbage<doxid-d9/d8c/classcv_1_1_dense_optical_flow_1ada50da5295433ded930ddf32f681b80e>`() = 0;

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

"Dual TV L1" Optical Flow :ref:`Algorithm <doxid-d1/d41/classcv_1_1_algorithm>`.

The class implements the "Dual TV L1" optical flow algorithm described in :ref:`[95] <doxid-d0/de3/citelist_1CITEREF_Zach2007>` and :ref:`[75] <doxid-d0/de3/citelist_1CITEREF_Javier2012>`. Here are important members of the class that control the algorithm, which you can set after constructing the class instance:

* member double tau Time step of the numerical scheme.

* member double lambda Weight parameter for the data term, attachment parameter. This is the most relevant parameter, which determines the smoothness of the output. The smaller this parameter is, the smoother the solutions we obtain. It depends on the range of motions of the images, so its value should be adapted to each image sequence.

* member double theta Weight parameter for (u - v)\^2, tightness parameter. It serves as a link between the attachment and the regularization terms. In theory, it should have a small value in order to maintain both parts in correspondence. The method is stable for a large range of values of this parameter.

* member int nscales Number of scales used to create the pyramid of images.

* member int warps Number of warpings per scale. Represents the number of times that I1(x+u0) and grad( I1(x+u0) ) are computed per scale. This is a parameter that assures the stability of the method. It also affects the running time, so it is a compromise between speed and accuracy.

* member double epsilon Stopping criterion threshold used in the numerical scheme, which is a trade-off between precision and running time. A small value will yield more accurate solutions at the expense of a slower convergence.

* member int iterations Stopping criterion iterations number used in the numerical scheme.

C. Zach, T. Pock and H. Bischof, "A Duality Based Approach for Realtime TV-L1 Optical Flow". Javier Sanchez, Enric Meinhardt-Llopis and Gabriele Facciolo. "TV-L1 Optical Flow Estimation".

Methods
-------

.. index:: pair: function; getEpsilon
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a0d3aaac31e944c8f3b0f183308edb4bf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getEpsilon() const = 0

Stopping criterion threshold used in the numerical scheme, which is a trade-off between precision and running time.



.. rubric:: See also:

:ref:`setEpsilon <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a0c29ffd1495eeb2378bc8f0818ea89ff>`

.. index:: pair: function; getGamma
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a96653da2712e1b2e4fd510d9db5dea10:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getGamma() const = 0

coefficient for additional illumination variation term



.. rubric:: See also:

:ref:`setGamma <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a2a503566a622446510c0ec942907cea2>`

.. index:: pair: function; getInnerIterations
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a81c2a9f613ddad76020c6e64a76ba007:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getInnerIterations() const = 0

Inner iterations (between outlier filtering) used in the numerical scheme.



.. rubric:: See also:

:ref:`setInnerIterations <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a20f6fa300a64735eb973cf770da1ddc7>`

.. index:: pair: function; getLambda
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1accb3b319657600ce834ce004842521cf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getLambda() const = 0

Weight parameter for the data term, attachment parameter.



.. rubric:: See also:

:ref:`setLambda <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a5b764d1335ddda122222a3132f7c6cf4>`

.. index:: pair: function; getMedianFiltering
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a5b5474af88fae8ec5f8fd9c16c4cba9d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getMedianFiltering() const = 0

Median filter kernel size (1 = no filter) (3 or 5)



.. rubric:: See also:

:ref:`setMedianFiltering <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a1313b90e53d6960a5bfda3c2d805468d>`

.. index:: pair: function; getOuterIterations
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a2332996d6a9da5a036955978cbabf8b8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getOuterIterations() const = 0

Outer iterations (number of inner loops) used in the numerical scheme.



.. rubric:: See also:

:ref:`setOuterIterations <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1adca68b234f1253cfecec1df06f2d4352>`

.. index:: pair: function; getScalesNumber
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a36b2dc550e6943384517dbeb14b6e5d8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getScalesNumber() const = 0

Number of scales used to create the pyramid of images.



.. rubric:: See also:

:ref:`setScalesNumber <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a0a5deedfaded016ead92e3c46a67a190>`

.. index:: pair: function; getScaleStep
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a849d5113a4131d4cf13fe942595001d3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getScaleStep() const = 0

Step between scales (<1)



.. rubric:: See also:

:ref:`setScaleStep <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a6ab6c3536df18913b9af8642d1ebda0d>`

.. index:: pair: function; getTau
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a66612aa88c0816a278d50df131414df5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getTau() const = 0

Time step of the numerical scheme.



.. rubric:: See also:

:ref:`setTau <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ac1e5deb30cc34b6f71ee9e555ea666c3>`

.. index:: pair: function; getTheta
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ae24604c8785a05665c5b8ac536187b00:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getTheta() const = 0

Weight parameter for (u - v)^2, tightness parameter.



.. rubric:: See also:

:ref:`setTheta <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a1b2ebccc5eb674cab130d1ead7f52478>`

.. index:: pair: function; getUseInitialFlow
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1afc79dc66f0bd81202815a9fb52f59796:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	getUseInitialFlow() const = 0

Use initial flow.



.. rubric:: See also:

:ref:`setUseInitialFlow <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ae09ec7a8cd3f37c7fcc9bd42aae60ea4>`

.. index:: pair: function; getWarpingsNumber
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ac3452101ba76ce6b1000241315529658:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getWarpingsNumber() const = 0

Number of warpings per scale.



.. rubric:: See also:

:ref:`setWarpingsNumber <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a33cd47bd54ff4381c7cdbebb6de5520e>`

.. index:: pair: function; setEpsilon
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a0c29ffd1495eeb2378bc8f0818ea89ff:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setEpsilon(double val) = 0

Stopping criterion threshold used in the numerical scheme, which is a trade-off between precision and running time.



.. rubric:: See also:

:ref:`getEpsilon <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a0d3aaac31e944c8f3b0f183308edb4bf>`

.. index:: pair: function; setGamma
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a2a503566a622446510c0ec942907cea2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setGamma(double val) = 0

coefficient for additional illumination variation term



.. rubric:: See also:

:ref:`getGamma <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a96653da2712e1b2e4fd510d9db5dea10>`

.. index:: pair: function; setInnerIterations
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a20f6fa300a64735eb973cf770da1ddc7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setInnerIterations(int val) = 0

Inner iterations (between outlier filtering) used in the numerical scheme.



.. rubric:: See also:

:ref:`getInnerIterations <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a81c2a9f613ddad76020c6e64a76ba007>`

.. index:: pair: function; setLambda
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a5b764d1335ddda122222a3132f7c6cf4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setLambda(double val) = 0

Weight parameter for the data term, attachment parameter.



.. rubric:: See also:

:ref:`getLambda <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1accb3b319657600ce834ce004842521cf>`

.. index:: pair: function; setMedianFiltering
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a1313b90e53d6960a5bfda3c2d805468d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setMedianFiltering(int val) = 0

Median filter kernel size (1 = no filter) (3 or 5)



.. rubric:: See also:

:ref:`getMedianFiltering <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a5b5474af88fae8ec5f8fd9c16c4cba9d>`

.. index:: pair: function; setOuterIterations
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1adca68b234f1253cfecec1df06f2d4352:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setOuterIterations(int val) = 0

Outer iterations (number of inner loops) used in the numerical scheme.



.. rubric:: See also:

:ref:`getOuterIterations <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a2332996d6a9da5a036955978cbabf8b8>`

.. index:: pair: function; setScalesNumber
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a0a5deedfaded016ead92e3c46a67a190:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setScalesNumber(int val) = 0

Number of scales used to create the pyramid of images.



.. rubric:: See also:

:ref:`getScalesNumber <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a36b2dc550e6943384517dbeb14b6e5d8>`

.. index:: pair: function; setScaleStep
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a6ab6c3536df18913b9af8642d1ebda0d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setScaleStep(double val) = 0

Step between scales (<1)



.. rubric:: See also:

:ref:`getScaleStep <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a849d5113a4131d4cf13fe942595001d3>`

.. index:: pair: function; setTau
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ac1e5deb30cc34b6f71ee9e555ea666c3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setTau(double val) = 0

Time step of the numerical scheme.



.. rubric:: See also:

:ref:`getTau <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a66612aa88c0816a278d50df131414df5>`

.. index:: pair: function; setTheta
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a1b2ebccc5eb674cab130d1ead7f52478:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setTheta(double val) = 0

Weight parameter for (u - v)^2, tightness parameter.



.. rubric:: See also:

:ref:`getTheta <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ae24604c8785a05665c5b8ac536187b00>`

.. index:: pair: function; setUseInitialFlow
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ae09ec7a8cd3f37c7fcc9bd42aae60ea4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setUseInitialFlow(bool val) = 0

Use initial flow.



.. rubric:: See also:

:ref:`getUseInitialFlow <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1afc79dc66f0bd81202815a9fb52f59796>`

.. index:: pair: function; setWarpingsNumber
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a33cd47bd54ff4381c7cdbebb6de5520e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setWarpingsNumber(int val) = 0

Number of warpings per scale.



.. rubric:: See also:

:ref:`getWarpingsNumber <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1ac3452101ba76ce6b1000241315529658>`

.. index:: pair: function; create
.. _doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow_1a382eeb0d23bf9b91ecd2c4e07e1dacd1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<DualTVL1OpticalFlow>
	create(
		double tau = 0.25,
		double lambda = 0.15,
		double theta = 0.3,
		int nscales = 5,
		int warps = 5,
		double epsilon = 0.01,
		int innnerIterations = 30,
		int outerIterations = 10,
		double scaleStep = 0.8,
		double gamma = 0.0,
		int medianFiltering = 5,
		bool useInitialFlow = false
		)

Creates instance of :ref:`cv::DualTVL1OpticalFlow <doxid-d0/d96/classcv_1_1_dual_t_v_l1_optical_flow>`.

