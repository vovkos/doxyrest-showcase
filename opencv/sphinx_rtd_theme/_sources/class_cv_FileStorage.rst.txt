.. index:: pair: class; cv::FileStorage
.. _doxid-d9/df9/classcv_1_1_file_storage:

class cv::FileStorage
=====================

.. toctree::
	:hidden:

	enum_cv_FileStorage_Mode.rst

Overview
~~~~~~~~

XML/YAML/JSON file storage class that encapsulates all the information necessary for writing or reading data to/from a file. :ref:`More...<details-d9/df9/classcv_1_1_file_storage>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <persistence.hpp>
	
	class FileStorage
	{
	public:
		// enums
	
		enum
		{
		    :target:`UNDEFINED<doxid-d9/df9/classcv_1_1_file_storage_1af499c2ad2f8d7f5e1c2b5b6bccb4c072a3e7f9ab4d3076f3fd61612e8b171930c>`      = 0,
		    :target:`VALUE_EXPECTED<doxid-d9/df9/classcv_1_1_file_storage_1af499c2ad2f8d7f5e1c2b5b6bccb4c072a11b72f7c235089aebd2abdd72c0f7be9>` = 1,
		    :target:`NAME_EXPECTED<doxid-d9/df9/classcv_1_1_file_storage_1af499c2ad2f8d7f5e1c2b5b6bccb4c072aa3546928fd78831aca18525dc8cc472e>`  = 2,
		    :target:`INSIDE_MAP<doxid-d9/df9/classcv_1_1_file_storage_1af499c2ad2f8d7f5e1c2b5b6bccb4c072a5f72e3ef09a40bb337ce1729a5df2767>`     = 4,
		};
	
		enum :ref:`Mode<doxid-d9/df9/classcv_1_1_file_storage_1a973e41cb75ef6230412a567723b7482d>`;

		// fields
	
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>` :ref:`elname<doxid-d9/df9/classcv_1_1_file_storage_1ace749deaf5654a22cf0a9a5d98c0e94d>`;
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`CvFileStorage<doxid-d2/df8/group__core__c_1ga84556d1bb6f1b8b02c04c60246747a7e>`> :ref:`fs<doxid-d9/df9/classcv_1_1_file_storage_1a65be9e2a284fcbbedc305851fc29d786>`;
		int :ref:`state<doxid-d9/df9/classcv_1_1_file_storage_1aa53ac52fa536aeabba795a2164a11337>`;
		std::vector<char> :ref:`structs<doxid-d9/df9/classcv_1_1_file_storage_1a2d19ec626696dddbffa2049cd9c4092d>`;

		// construction
	
		:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage_1a29bcb12ede10d87a0fcbf89a88b092af>`();
	
		:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage_1a1ec279bad5259c5d41cb2ad1af48f85d>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& source,
			int flags,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& encoding = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage_1a854782fc7b3f905d85cf0d924fe28335>`(
			:ref:`CvFileStorage<doxid-d2/df8/group__core__c_1ga84556d1bb6f1b8b02c04c60246747a7e>`* fs,
			bool owning = true
			);

		// methods
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a26447446dd3fa0644684a045e16399fe>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			int value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1aebc12a5356bcba8393d9f1fbf901065b>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			float value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a598e853f2001864e2c709d7726ad29b7>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			double value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a63a75e0be408d41f9dea527a1c960286>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a403766cfd06a4c7fc56f3a6187fabc35>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a9d8021889a9984dee8c7913fde569cff>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`& value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1aa3350ac5d6c131f210e1360ce8da55e8>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1acb263ed4b7d8e1b2da9f0819ca521e36>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>& value
			);
	
		void
		:target:`writeScalar<doxid-d9/df9/classcv_1_1_file_storage_1ae8c1ed7775a9692dd5a04e7b9c257332>`(
			FileStorage& fs,
			int value
			);
	
		void
		:target:`writeScalar<doxid-d9/df9/classcv_1_1_file_storage_1ad3dab4054c2a10a45238fd10d11f280e>`(
			FileStorage& fs,
			float value
			);
	
		void
		:target:`writeScalar<doxid-d9/df9/classcv_1_1_file_storage_1ac4ec3e0ff8321cd7a2b312e275d1b7ba>`(
			FileStorage& fs,
			double value
			);
	
		void
		:target:`writeScalar<doxid-d9/df9/classcv_1_1_file_storage_1a2a8da1ead8d174f9244b5e8593ebd1d8>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& value
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a24430b807ccd2cf002058961cd2e3263>`(
			FileStorage& fs,
			const _Tp& value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a9588e05768869430821699ae6b1eb28d>`(
			FileStorage& fs,
			const int& value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1ac229241c6dd16bb343de5aeee197db03>`(
			FileStorage& fs,
			const float& value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1aa0e3cc864beb06182c8c2826a8d0cdb8>`(
			FileStorage& fs,
			const double& value
			);
	
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a058d1227fa81fbf9ffc926d1a2485f3d>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& value
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1aa627e4c875c46d7830fb6d0ac1431e00>`(
			FileStorage& fs,
			const :ref:`Point_<doxid-d9/d87/classcv_1_1_point__>`<_Tp>& pt
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1ad2ecdf5485d88536eb7c97662a428a4e>`(
			FileStorage& fs,
			const :ref:`Point3_<doxid-d4/d29/classcv_1_1_point3__>`<_Tp>& pt
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a9700290bb5ec6b5c890bc0d251855f61>`(
			FileStorage& fs,
			const :ref:`Size_<doxid-dd/da0/classcv_1_1_size__>`<_Tp>& sz
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a843319acfe360410e8cfcff1749aa5b0>`(
			FileStorage& fs,
			const :ref:`Complex<doxid-da/d75/classcv_1_1_complex>`<_Tp>& c
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1abff24d9b3462a4d368e864b09c62de46>`(
			FileStorage& fs,
			const :ref:`Rect_<doxid-d6/db0/classcv_1_1_rect__>`<_Tp>& r
			);
	
		template <
			typename _Tp,
			int cn
			>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a5d8a4afcb9a84c5705605b6456f0bf4a>`(
			FileStorage& fs,
			const :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<_Tp, cn>& v
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a54bf874d535dfc61b08fff99e7b5e8ab>`(
			FileStorage& fs,
			const :ref:`Scalar_<doxid-d7/d13/classcv_1_1_scalar__>`<_Tp>& s
			);
	
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a4aa5530a1a6c8e15491b3a4032aa89f7>`(
			FileStorage& fs,
			const :ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`& kpt
			);
	
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a4fc191fb60c9b61b26bd09bbd439291e>`(
			FileStorage& fs,
			const :ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`& m
			);
	
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1acb53272996fd5a25ca077aeb5385a9a3>`(
			FileStorage& fs,
			const :ref:`Range<doxid-d7/d65/classcv_1_1_range>`& r
			);
	
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1ab4ca3bf63b23e1f9ab088d2a383d6520>`(
			FileStorage& fs,
			const std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& vec
			);
	
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a9ee06c06b4d4e7e6839d3edfe2666a89>`(
			FileStorage& fs,
			const std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>& vec
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1af710db7aa40918f5429ba8e78622d08f>`(
			FileStorage& fs,
			const std::vector<_Tp>& vec
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a04c8f9337b9d9821114f951faee80bae>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`Point_<doxid-d9/d87/classcv_1_1_point__>`<_Tp>& pt
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a550f8a4931274589cdc5a3796c2eef48>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`Point3_<doxid-d4/d29/classcv_1_1_point3__>`<_Tp>& pt
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a84453625335849d8ec1a0df6c865b0cb>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`Size_<doxid-dd/da0/classcv_1_1_size__>`<_Tp>& sz
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1ace7fc76da8b2a634a5c83183700f0bbb>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`Complex<doxid-da/d75/classcv_1_1_complex>`<_Tp>& c
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a43c8a8a86952cff8b062e18c9f3e72cc>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`Rect_<doxid-d6/db0/classcv_1_1_rect__>`<_Tp>& r
			);
	
		template <
			typename _Tp,
			int cn
			>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a893a9ed023837feb61f7fe804d21cb40>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<_Tp, cn>& v
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a6f13874950203b1bbbe4ec4fee5eb6a1>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`Scalar_<doxid-d7/d13/classcv_1_1_scalar__>`<_Tp>& s
			);
	
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1addda29520f80f53e144a5e15b57ec98d>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`Range<doxid-d7/d65/classcv_1_1_range>`& r
			);
	
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a8a165417e0d901bc629fed093ec65411>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`& r
			);
	
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a537acad1c637d1e68665096525521285>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`& r
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1a6e3ddba0ac9a82d6f7817f9db1aa2556>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const std::vector<_Tp>& vec
			);
	
		template <typename _Tp>
		static
		void
		:target:`write<doxid-d9/df9/classcv_1_1_file_storage_1af9feef3fb24eb47d9a665056977d1183>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const std::vector<std::vector<_Tp>>& vec
			);
	
		template <typename _Tp>
		static
		FileStorage&
		:ref:`operator<<<doxid-d9/df9/classcv_1_1_file_storage_1a84431fd1b5075275f5c3407dc58b36ae>`(
			FileStorage& fs,
			const _Tp& value
			);
	
		static
		FileStorage&
		:ref:`operator<<<doxid-d9/df9/classcv_1_1_file_storage_1acdfed1145ad6cc92e20975596c7b8bed>`(
			FileStorage& fs,
			const char* str
			);
	
		static
		FileStorage&
		:ref:`operator<<<doxid-d9/df9/classcv_1_1_file_storage_1ae1a501b3d13d8fd3de1b7299926a02cd>`(
			FileStorage& fs,
			char* value
			);
	
		:ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`
		:ref:`getFirstTopLevelNode<doxid-d9/df9/classcv_1_1_file_storage_1a7153604af73ca7de43b977eedd1bbe09>`() const;
	
		virtual
		bool
		:ref:`isOpened<doxid-d9/df9/classcv_1_1_file_storage_1aa952c31f4e632595cd5ac107913f4fd1>`() const;
	
		virtual
		bool
		:ref:`open<doxid-d9/df9/classcv_1_1_file_storage_1a14c2c18dc2e29999d03d52a0c24bd91c>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			int flags,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& encoding = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		:ref:`CvFileStorage<doxid-d2/df8/group__core__c_1ga84556d1bb6f1b8b02c04c60246747a7e>`*
		:ref:`operator*<doxid-d9/df9/classcv_1_1_file_storage_1ad5984e232bf908e10c82a0b6411e969c>`();
	
		const :ref:`CvFileStorage<doxid-d2/df8/group__core__c_1ga84556d1bb6f1b8b02c04c60246747a7e>`*
		:ref:`operator*<doxid-d9/df9/classcv_1_1_file_storage_1a1aac31068eedbed2e5474498f2be35f5>`() const;
	
		:ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`
		:ref:`operator[]<doxid-d9/df9/classcv_1_1_file_storage_1adc7eff268ab95c664657a03e72ed85a5>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& nodename) const;
	
		:ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`
		:ref:`operator[]<doxid-d9/df9/classcv_1_1_file_storage_1a532f6a27dd57d0f640c6a5a9acddac88>`(const char* nodename) const;
	
		virtual
		void
		:ref:`release<doxid-d9/df9/classcv_1_1_file_storage_1ad23d5415a06fb4bc97bfa034589b376e>`();
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`releaseAndGetString<doxid-d9/df9/classcv_1_1_file_storage_1a5341a9e09e1b797faf6b7ec40bd558fd>`();
	
		:ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`
		:ref:`root<doxid-d9/df9/classcv_1_1_file_storage_1a504146889949abfe445f87beab4204fd>`(int streamidx = 0) const;
	
		void
		:ref:`write<doxid-d9/df9/classcv_1_1_file_storage_1af9597d58d64dff5cc998344bc4b1c1f0>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			double val
			);
	
		void
		:ref:`write<doxid-d9/df9/classcv_1_1_file_storage_1a0466680193c966dbeef4e508aebfe8aa>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& val
			);
	
		void
		:ref:`write<doxid-d9/df9/classcv_1_1_file_storage_1adda6a02fc810c9f3d61115bbf8f1e070>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` val
			);
	
		void
		:ref:`writeComment<doxid-d9/df9/classcv_1_1_file_storage_1a143eb62cf2c063095c005c0ac77a8823>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& comment,
			bool append = false
			);
	
		void
		:ref:`writeObj<doxid-d9/df9/classcv_1_1_file_storage_1a5226a10d7cb953beaae45381fbd71873>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
			const void* obj
			);
	
		void
		:ref:`writeRaw<doxid-d9/df9/classcv_1_1_file_storage_1a5f12cb8b2f78e7a9708cd03c69133732>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& fmt,
			const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* vec,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` len
			);
	
		static
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultObjectName<doxid-d9/df9/classcv_1_1_file_storage_1ac49dded8d2d452a65bfc5fb3e3b96ec8>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename);
	
		FileStorage&
		:ref:`operator<<<doxid-d9/df9/classcv_1_1_file_storage_1a5d64e1a22e8e659de99a027f66bf26bc>`(
			FileStorage& fs,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& str
			);
	};
.. _details-d9/df9/classcv_1_1_file_storage:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

XML/YAML/JSON file storage class that encapsulates all the information necessary for writing or reading data to/from a file.

Fields
------

.. index:: pair: variable; elname
.. _doxid-d9/df9/classcv_1_1_file_storage_1ace749deaf5654a22cf0a9a5d98c0e94d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`String<doxid-dc/d0e/classcv_1_1_string>` elname

the currently written element

.. index:: pair: variable; fs
.. _doxid-d9/df9/classcv_1_1_file_storage_1a65be9e2a284fcbbedc305851fc29d786:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`CvFileStorage<doxid-d2/df8/group__core__c_1ga84556d1bb6f1b8b02c04c60246747a7e>`> fs

the underlying C :ref:`FileStorage <doxid-d9/df9/classcv_1_1_file_storage>` structure

.. index:: pair: variable; state
.. _doxid-d9/df9/classcv_1_1_file_storage_1aa53ac52fa536aeabba795a2164a11337:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int state

the writer state

.. index:: pair: variable; structs
.. _doxid-d9/df9/classcv_1_1_file_storage_1a2d19ec626696dddbffa2049cd9c4092d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::vector<char> structs

the stack of written structures

Construction
------------

.. index:: pair: function; FileStorage
.. _doxid-d9/df9/classcv_1_1_file_storage_1a29bcb12ede10d87a0fcbf89a88b092af:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	FileStorage()

The constructors.

The full constructor opens the file. Alternatively you can use the default constructor and then call :ref:`FileStorage::open <doxid-d9/df9/classcv_1_1_file_storage_1a14c2c18dc2e29999d03d52a0c24bd91c>`.

.. index:: pair: function; FileStorage
.. _doxid-d9/df9/classcv_1_1_file_storage_1a1ec279bad5259c5d41cb2ad1af48f85d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	FileStorage(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& source,
		int flags,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& encoding = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- source

		- Name of the file to open or the text string to read the data from. Extension of the file (.xml, .yml/.yaml, or .json) determines its format (XML, YAML or JSON respectively). Also you can append .gz to work with compressed files, for example myHugeMatrix.xml.gz. If both :ref:`FileStorage::WRITE <doxid-d9/df9/classcv_1_1_file_storage_1a973e41cb75ef6230412a567723b7482da747a241cefee7b8af34c3d804c864ad6>` and :ref:`FileStorage::MEMORY <doxid-d9/df9/classcv_1_1_file_storage_1a973e41cb75ef6230412a567723b7482dabdde7670c9c7e472f8445932ea7cbbf7>` flags are specified, source is used just to specify the output file format (e.g. mydata.xml, .yml etc.).

	*
		- flags

		- Mode of operation. See :ref:`FileStorage::Mode <doxid-d9/df9/classcv_1_1_file_storage_1a973e41cb75ef6230412a567723b7482d>`

	*
		- encoding

		- Encoding of the file. Note that UTF-16 XML encoding is not supported currently and you should use 8-bit encoding instead of it.

.. index:: pair: function; FileStorage
.. _doxid-d9/df9/classcv_1_1_file_storage_1a854782fc7b3f905d85cf0d924fe28335:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	FileStorage(
		:ref:`CvFileStorage<doxid-d2/df8/group__core__c_1ga84556d1bb6f1b8b02c04c60246747a7e>`* fs,
		bool owning = true
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

Methods
-------

.. index:: pair: function; operator<<
.. _doxid-d9/df9/classcv_1_1_file_storage_1a84431fd1b5075275f5c3407dc58b36ae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename _Tp>
	static
	FileStorage&
	operator<<(
		FileStorage& fs,
		const _Tp& value
		)

Writes data to a file storage.

.. index:: pair: function; operator<<
.. _doxid-d9/df9/classcv_1_1_file_storage_1acdfed1145ad6cc92e20975596c7b8bed:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	FileStorage&
	operator<<(
		FileStorage& fs,
		const char* str
		)

Writes data to a file storage.

.. index:: pair: function; operator<<
.. _doxid-d9/df9/classcv_1_1_file_storage_1ae1a501b3d13d8fd3de1b7299926a02cd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	FileStorage&
	operator<<(
		FileStorage& fs,
		char* value
		)

Writes data to a file storage.

.. index:: pair: function; getFirstTopLevelNode
.. _doxid-d9/df9/classcv_1_1_file_storage_1a7153604af73ca7de43b977eedd1bbe09:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`
	getFirstTopLevelNode() const

Returns the first element of the top-level mapping.



.. rubric:: Returns:

The first element of the top-level mapping.

.. index:: pair: function; isOpened
.. _doxid-d9/df9/classcv_1_1_file_storage_1aa952c31f4e632595cd5ac107913f4fd1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isOpened() const

Checks whether the file is opened.



.. rubric:: Returns:

true if the object is associated with the current file and false otherwise. It is a good practice to call this method after you tried to open a file.

.. index:: pair: function; open
.. _doxid-d9/df9/classcv_1_1_file_storage_1a14c2c18dc2e29999d03d52a0c24bd91c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	open(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
		int flags,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& encoding = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
		)

Opens a file.

See description of parameters in :ref:`FileStorage::FileStorage <doxid-d9/df9/classcv_1_1_file_storage_1a29bcb12ede10d87a0fcbf89a88b092af>`. The method calls :ref:`FileStorage::release <doxid-d9/df9/classcv_1_1_file_storage_1ad23d5415a06fb4bc97bfa034589b376e>` before opening the file.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Name of the file to open or the text string to read the data from. Extension of the file (.xml, .yml/.yaml or .json) determines its format (XML, YAML or JSON respectively). Also you can append .gz to work with compressed files, for example myHugeMatrix.xml.gz. If both :ref:`FileStorage::WRITE <doxid-d9/df9/classcv_1_1_file_storage_1a973e41cb75ef6230412a567723b7482da747a241cefee7b8af34c3d804c864ad6>` and :ref:`FileStorage::MEMORY <doxid-d9/df9/classcv_1_1_file_storage_1a973e41cb75ef6230412a567723b7482dabdde7670c9c7e472f8445932ea7cbbf7>` flags are specified, source is used just to specify the output file format (e.g. mydata.xml, .yml etc.). A file name can also contain parameters. You can use this format, "\*?base64" (e.g. "file.json?base64" (case sensitive)), as an alternative to :ref:`FileStorage::BASE64 <doxid-d9/df9/classcv_1_1_file_storage_1a973e41cb75ef6230412a567723b7482daef5eb4ad351f31273667949b65e4e6c2>` flag.

	*
		- flags

		- Mode of operation. One of :ref:`FileStorage::Mode <doxid-d9/df9/classcv_1_1_file_storage_1a973e41cb75ef6230412a567723b7482d>`

	*
		- encoding

		- Encoding of the file. Note that UTF-16 XML encoding is not supported currently and you should use 8-bit encoding instead of it.

.. index:: pair: function; operator*
.. _doxid-d9/df9/classcv_1_1_file_storage_1ad5984e232bf908e10c82a0b6411e969c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`CvFileStorage<doxid-d2/df8/group__core__c_1ga84556d1bb6f1b8b02c04c60246747a7e>`*
	operator*()

Returns the obsolete C :ref:`FileStorage <doxid-d9/df9/classcv_1_1_file_storage>` structure.



.. rubric:: Returns:

Pointer to the underlying C :ref:`FileStorage <doxid-d9/df9/classcv_1_1_file_storage>` structure

.. index:: pair: function; operator*
.. _doxid-d9/df9/classcv_1_1_file_storage_1a1aac31068eedbed2e5474498f2be35f5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const :ref:`CvFileStorage<doxid-d2/df8/group__core__c_1ga84556d1bb6f1b8b02c04c60246747a7e>`*
	operator*() const

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; operator[]
.. _doxid-d9/df9/classcv_1_1_file_storage_1adc7eff268ab95c664657a03e72ed85a5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`
	operator[](const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& nodename) const

Returns the specified element of the top-level mapping.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- nodename

		- Name of the file node.



.. rubric:: Returns:

:ref:`Node <doxid-d2/dc3/classcv_1_1_node>` with the given name.

.. index:: pair: function; operator[]
.. _doxid-d9/df9/classcv_1_1_file_storage_1a532f6a27dd57d0f640c6a5a9acddac88:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`
	operator[](const char* nodename) const

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; release
.. _doxid-d9/df9/classcv_1_1_file_storage_1ad23d5415a06fb4bc97bfa034589b376e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	release()

Closes the file and releases all the memory buffers.

Call this method after all I/O operations with the storage are finished.

.. index:: pair: function; releaseAndGetString
.. _doxid-d9/df9/classcv_1_1_file_storage_1a5341a9e09e1b797faf6b7ec40bd558fd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
	releaseAndGetString()

Closes the file and releases all the memory buffers.

Call this method after all I/O operations with the storage are finished. If the storage was opened for writing data and :ref:`FileStorage::WRITE <doxid-d9/df9/classcv_1_1_file_storage_1a973e41cb75ef6230412a567723b7482da747a241cefee7b8af34c3d804c864ad6>` was specified

.. index:: pair: function; root
.. _doxid-d9/df9/classcv_1_1_file_storage_1a504146889949abfe445f87beab4204fd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`
	root(int streamidx = 0) const

Returns the top-level mapping.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- streamidx

		- Zero-based index of the stream. In most cases there is only one stream in the file. However, YAML supports multiple streams and so there can be several.



.. rubric:: Returns:

The top-level mapping.

.. index:: pair: function; write
.. _doxid-d9/df9/classcv_1_1_file_storage_1af9597d58d64dff5cc998344bc4b1c1f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	write(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
		double val
		)

Simplified writing API to use with bindings.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- name

		- Name of the written object

	*
		- val

		- Value of the written object

.. index:: pair: function; write
.. _doxid-d9/df9/classcv_1_1_file_storage_1a0466680193c966dbeef4e508aebfe8aa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	write(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& val
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; write
.. _doxid-d9/df9/classcv_1_1_file_storage_1adda6a02fc810c9f3d61115bbf8f1e070:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	write(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` val
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; writeComment
.. _doxid-d9/df9/classcv_1_1_file_storage_1a143eb62cf2c063095c005c0ac77a8823:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	writeComment(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& comment,
		bool append = false
		)

Writes a comment.

The function writes a comment into file storage. The comments are skipped when the storage is read.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- comment

		- The written comment, single-line or multi-line

	*
		- append

		- If true, the function tries to put the comment at the end of current line. Else if the comment is multi-line, or if it does not fit at the end of the current line, the comment starts a new line.

.. index:: pair: function; writeObj
.. _doxid-d9/df9/classcv_1_1_file_storage_1a5226a10d7cb953beaae45381fbd71873:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	writeObj(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& name,
		const void* obj
		)

Writes the registered C structure (:ref:`CvMat <doxid-d6/dda/struct_cv_mat>`, :ref:`CvMatND <doxid-d7/d5c/struct_cv_mat_n_d>`, :ref:`CvSeq <doxid-dd/d74/struct_cv_seq>`).



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- name

		- Name of the written object.

	*
		- obj

		- Pointer to the object.



.. rubric:: See also:

ocvWrite for details.

.. index:: pair: function; writeRaw
.. _doxid-d9/df9/classcv_1_1_file_storage_1a5f12cb8b2f78e7a9708cd03c69133732:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	writeRaw(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& fmt,
		const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* vec,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` len
		)

Writes multiple numbers.

Writes one or more numbers of the specified format to the currently written structure. Usually it is more convenient to use operator ``<<`` instead of this method.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- fmt

		- Specification of each array element, see :ref:`format specification <doxid-d4/da4/group__core__xml_1format_spec>`

	*
		- vec

		- Pointer to the written array.

	*
		- len

		- Number of the uchar elements to write.

.. index:: pair: function; getDefaultObjectName
.. _doxid-d9/df9/classcv_1_1_file_storage_1ac49dded8d2d452a65bfc5fb3e3b96ec8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
	getDefaultObjectName(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename)

Returns the normalized object name for the specified name of a file.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Name of a file



.. rubric:: Returns:

The normalized object name.

.. index:: pair: function; operator<<
.. _doxid-d9/df9/classcv_1_1_file_storage_1a5d64e1a22e8e659de99a027f66bf26bc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	FileStorage&
	operator<<(
		FileStorage& fs,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& str
		)

Writes string to a file storage.

