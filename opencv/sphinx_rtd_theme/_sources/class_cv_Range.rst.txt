.. index:: pair: class; cv::Range
.. _doxid-d7/d65/classcv_1_1_range:

class cv::Range
===============

.. toctree::
	:hidden:

Overview
~~~~~~~~

Template class specifying a continuous subsequence (slice) of a sequence. :ref:`More...<details-d7/d65/classcv_1_1_range>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <types.hpp>
	
	class Range
	{
	public:
		// fields
	
		int :target:`end<doxid-d7/d65/classcv_1_1_range_1aba16789fec81858a31c9685d399b62fc>`;
		int :target:`start<doxid-d7/d65/classcv_1_1_range_1ad7ce51f1d8797236c97bec49d2b25522>`;

		// construction
	
		:target:`Range<doxid-d7/d65/classcv_1_1_range_1aafab1fe471bac7c314dcd0d678ac4e2d>`();
	
		:target:`Range<doxid-d7/d65/classcv_1_1_range_1abfd8e210d1dfcbdf4e34224a621a6236>`(
			int _start,
			int _end
			);

		// methods
	
		bool
		:target:`empty<doxid-d7/d65/classcv_1_1_range_1af17854e9243042f39ae1c7a5ef5f7600>`() const;
	
		int
		:target:`size<doxid-d7/d65/classcv_1_1_range_1a202fc148a0ad8df135215ecf1781a0b8>`() const;
	
		static
		Range
		:target:`all<doxid-d7/d65/classcv_1_1_range_1af5a0207f6f98a69077db8e77898abc0f>`();
	};
.. _details-d7/d65/classcv_1_1_range:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Template class specifying a continuous subsequence (slice) of a sequence.

The class is used to specify a row or a column span in a matrix (:ref:`Mat <doxid-db/de6/classcv_1_1_mat>`) and for many other purposes. Range(a,b) is basically the same as a:b in Matlab or a..b in Python. As in Python, start is an inclusive left boundary of the range and end is an exclusive right boundary of the range. Such a half-opened interval is usually denoted as :math:`[start,end)`.

The static method :ref:`Range::all() <doxid-d7/d65/classcv_1_1_range_1af5a0207f6f98a69077db8e77898abc0f>` returns a special variable that means "the whole sequence" or "the
whole range", just like " : " in Matlab or " ... " in Python. All the methods and functions in OpenCV that take :ref:`Range <doxid-d7/d65/classcv_1_1_range>` support this special :ref:`Range::all() <doxid-d7/d65/classcv_1_1_range_1af5a0207f6f98a69077db8e77898abc0f>` value. But, of course, in case of your own custom processing, you will probably have to check and handle it explicitly:

.. ref-code-block:: cpp

	void my_function(..., const Range& r, ....)
	{
	    if(r == Range::all()) {
	        // process all the data
	    }
	    else {
	        // process [r.start, r.end)
	    }
	}

