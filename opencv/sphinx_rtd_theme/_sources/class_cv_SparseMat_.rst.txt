.. index:: pair: class; cv::SparseMat_
.. _doxid-df/d90/classcv_1_1_sparse_mat__:

template class cv::SparseMat\_
==============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Template sparse n-dimensional array class derived from :ref:`SparseMat <doxid-d5/d29/classcv_1_1_sparse_mat>`. :ref:`More...<details-df/d90/classcv_1_1_sparse_mat__>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <mat.hpp>
	
	template <typename _Tp>
	class SparseMat_: public :ref:`cv::SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`
	{
	public:
		// typedefs
	
		typedef :ref:`SparseMatConstIterator_<doxid-db/d01/classcv_1_1_sparse_mat_const_iterator__>`<_Tp> :target:`const_iterator<doxid-df/d90/classcv_1_1_sparse_mat___1a60cda480e8a3854c706d9f56a119c8fd>`;
		typedef :ref:`SparseMatIterator_<doxid-d1/d10/classcv_1_1_sparse_mat_iterator__>`<_Tp> :target:`iterator<doxid-df/d90/classcv_1_1_sparse_mat___1aad69108f160c710a9e39e540790cd630>`;

		// construction
	
		:ref:`SparseMat_<doxid-df/d90/classcv_1_1_sparse_mat___1a359e83f7b4372d439ad31a84e72cd12d>`();
	
		:ref:`SparseMat_<doxid-df/d90/classcv_1_1_sparse_mat___1adb611458d46e670dcaf099f1fceddf9c>`(
			int dims,
			const int* _sizes
			);
	
		:ref:`SparseMat_<doxid-df/d90/classcv_1_1_sparse_mat___1ab0e9b029a622c637e17f8288d968f25c>`(const :ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`& m);
		:ref:`SparseMat_<doxid-df/d90/classcv_1_1_sparse_mat___1a773ae7065a51b5440d0d9c8b87b7eba3>`(const SparseMat_& m);
		:ref:`SparseMat_<doxid-df/d90/classcv_1_1_sparse_mat___1a0938540b46ceeca038f396f019b1e3c4>`(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& m);

		// methods
	
		:ref:`SparseMatIterator_<doxid-d1/d10/classcv_1_1_sparse_mat_iterator__>`<_Tp>
		:ref:`begin<doxid-df/d90/classcv_1_1_sparse_mat___1ac61edef7ba582a9ad7e9884e19ae41ab>`();
	
		:ref:`SparseMatConstIterator_<doxid-db/d01/classcv_1_1_sparse_mat_const_iterator__>`<_Tp>
		:ref:`begin<doxid-df/d90/classcv_1_1_sparse_mat___1aa3151e36d0d71c7b61447469d718dc69>`() const;
	
		int
		:ref:`channels<doxid-df/d90/classcv_1_1_sparse_mat___1af35ce086f94ecec24480d84010834737>`() const;
	
		SparseMat_
		:ref:`clone<doxid-df/d90/classcv_1_1_sparse_mat___1a17b0f13e770facc1122c1c74a767929e>`() const;
	
		void
		:ref:`create<doxid-df/d90/classcv_1_1_sparse_mat___1a18a20736ff3a669e99e041d1c4fa7110>`(
			int dims,
			const int* _sizes
			);
	
		int
		:ref:`depth<doxid-df/d90/classcv_1_1_sparse_mat___1adebe30e83d0c876a63de558ca3ab5435>`() const;
	
		:ref:`SparseMatIterator_<doxid-d1/d10/classcv_1_1_sparse_mat_iterator__>`<_Tp>
		:ref:`end<doxid-df/d90/classcv_1_1_sparse_mat___1a0d918c7287fdff2d82738667d066fabc>`();
	
		:ref:`SparseMatConstIterator_<doxid-db/d01/classcv_1_1_sparse_mat_const_iterator__>`<_Tp>
		:ref:`end<doxid-df/d90/classcv_1_1_sparse_mat___1a7091eccbc3eed537f5ab12944ac61b3e>`() const;
	
		_Tp
		:ref:`operator()<doxid-df/d90/classcv_1_1_sparse_mat___1ad7c0f0164b060df2179b3e9f1d1566a8>`(
			int i0,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		_Tp
		:ref:`operator()<doxid-df/d90/classcv_1_1_sparse_mat___1a89b99bb281a9747b54e94be670f6a010>`(
			int i0,
			int i1,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		_Tp
		:ref:`operator()<doxid-df/d90/classcv_1_1_sparse_mat___1ab4ffea87933a1bffcadd0db260c36846>`(
			int i0,
			int i1,
			int i2,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		_Tp
		:ref:`operator()<doxid-df/d90/classcv_1_1_sparse_mat___1ae68f3e59954cc03297b2d0e6e8ba9014>`(
			const int* idx,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		SparseMat_&
		:ref:`operator=<doxid-df/d90/classcv_1_1_sparse_mat___1aa9ea60ee22d3ba75ccb16365eda3f096>`(const :ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`& m);
	
		SparseMat_&
		:ref:`operator=<doxid-df/d90/classcv_1_1_sparse_mat___1a3a90de6441880eae3ba875a0fed2700e>`(const SparseMat_& m);
	
		SparseMat_&
		:ref:`operator=<doxid-df/d90/classcv_1_1_sparse_mat___1aebaca1182543e7e71ee5c4f73a088c90>`(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& m);
	
		_Tp&
		:ref:`ref<doxid-df/d90/classcv_1_1_sparse_mat___1a17c4339e51120f3f31a21f2d8145aa4a>`(
			int i0,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		_Tp&
		:ref:`ref<doxid-df/d90/classcv_1_1_sparse_mat___1ab5627691b3f57c2f8be0a0c0a27178e7>`(
			int i0,
			int i1,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		_Tp&
		:ref:`ref<doxid-df/d90/classcv_1_1_sparse_mat___1aecb8e3bf1734c3c0ee967f3149aebe03>`(
			int i0,
			int i1,
			int i2,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		_Tp&
		:ref:`ref<doxid-df/d90/classcv_1_1_sparse_mat___1ae7872bd52762f694af7f76251770de3e>`(
			const int* idx,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		int
		:ref:`type<doxid-df/d90/classcv_1_1_sparse_mat___1abcd902283fa4eb7556499d0729196b30>`() const;
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// typedefs
	
		typedef :ref:`SparseMatConstIterator<doxid-db/dc8/classcv_1_1_sparse_mat_const_iterator>` :ref:`const_iterator<doxid-d5/d29/classcv_1_1_sparse_mat_1a4f7803d5c41eef808081903167d3a263>`;
		typedef :ref:`SparseMatIterator<doxid-dd/d91/classcv_1_1_sparse_mat_iterator>` :ref:`iterator<doxid-d5/d29/classcv_1_1_sparse_mat_1aa766accd9ac415bea90019010f58cac6>`;

		// enums
	
		enum
		{
		    :ref:`MAGIC_VAL<doxid-d5/d29/classcv_1_1_sparse_mat_1ab5d2eb8ba04b98045a8b26243312e3a1a14d02d4adbcb5fa71d1922ceda241e8a>`  =0x42FD0000,
		    :ref:`MAX_DIM<doxid-d5/d29/classcv_1_1_sparse_mat_1ab5d2eb8ba04b98045a8b26243312e3a1abe1aff4cd2b540afd5a3f4ffca3bd9a2>`    =32,
		    :ref:`HASH_SCALE<doxid-d5/d29/classcv_1_1_sparse_mat_1ab5d2eb8ba04b98045a8b26243312e3a1a28ca477c8ed1afabd0da753827149eeb>` =0x5bd1e995,
		    :ref:`HASH_BIT<doxid-d5/d29/classcv_1_1_sparse_mat_1ab5d2eb8ba04b98045a8b26243312e3a1a79cfd2c6ddc2c192623e8426429d27d1>`   =0x80000000,
		};

		// structs
	
		struct :ref:`Hdr<doxid-d5/d62/structcv_1_1_sparse_mat_1_1_hdr>`;
		struct :ref:`Node<doxid-d9/d77/structcv_1_1_sparse_mat_1_1_node>`;

		// fields
	
		int :ref:`flags<doxid-d5/d29/classcv_1_1_sparse_mat_1ad5f261bc8c1330e4e516684861410cd2>`;
		:ref:`Hdr<doxid-d5/d62/structcv_1_1_sparse_mat_1_1_hdr>`* :ref:`hdr<doxid-d5/d29/classcv_1_1_sparse_mat_1a3741ff43acd46b31aace23dee092d85a>`;

		// methods
	
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`*
		:ref:`ptr<doxid-d5/d29/classcv_1_1_sparse_mat_1a810b96cf23e3cc816e7f99473b81b513>`(
			int i0,
			bool createMissing,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`*
		:ref:`ptr<doxid-d5/d29/classcv_1_1_sparse_mat_1a14e7bb6106e6b4608ddbbc394bbf585e>`(
			int i0,
			int i1,
			bool createMissing,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`*
		:ref:`ptr<doxid-d5/d29/classcv_1_1_sparse_mat_1afa0e9b6331a781f1d746e77582bee8a8>`(
			int i0,
			int i1,
			int i2,
			bool createMissing,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`*
		:ref:`ptr<doxid-d5/d29/classcv_1_1_sparse_mat_1a5425bac965f62767f50c7e68a7c452a0>`(
			const int* idx,
			bool createMissing,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		template <typename _Tp>
		_Tp&
		:ref:`ref<doxid-d5/d29/classcv_1_1_sparse_mat_1a0e1e95540e8cc75976bb4be97dc2203e>`(
			int i0,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		template <typename _Tp>
		_Tp&
		:ref:`ref<doxid-d5/d29/classcv_1_1_sparse_mat_1a565a2111e6223af3d3e7d7af2db7588b>`(
			int i0,
			int i1,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		template <typename _Tp>
		_Tp&
		:ref:`ref<doxid-d5/d29/classcv_1_1_sparse_mat_1a8123bdba2899184e4946c82b2ddaa541>`(
			int i0,
			int i1,
			int i2,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		template <typename _Tp>
		_Tp&
		:ref:`ref<doxid-d5/d29/classcv_1_1_sparse_mat_1a31eeb43c5070301db9cba23bdb45ee11>`(
			const int* idx,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		template <typename _Tp>
		_Tp
		:ref:`value<doxid-d5/d29/classcv_1_1_sparse_mat_1a64d526ae50a7aceb49b2c5ba3528c859>`(
			int i0,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		template <typename _Tp>
		_Tp
		:ref:`value<doxid-d5/d29/classcv_1_1_sparse_mat_1a50920170695fb08a34b4dbfd272b352d>`(
			int i0,
			int i1,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		template <typename _Tp>
		_Tp
		:ref:`value<doxid-d5/d29/classcv_1_1_sparse_mat_1a34720d97d1db6e1f57ab229fddb5281f>`(
			int i0,
			int i1,
			int i2,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		template <typename _Tp>
		_Tp
		:ref:`value<doxid-d5/d29/classcv_1_1_sparse_mat_1af112d88b293cd922392043fd57bb8398>`(
			const int* idx,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		template <typename _Tp>
		const _Tp*
		:ref:`find<doxid-d5/d29/classcv_1_1_sparse_mat_1af31f0f8c0f55db0640aa8081a593f64e>`(
			int i0,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		template <typename _Tp>
		const _Tp*
		:ref:`find<doxid-d5/d29/classcv_1_1_sparse_mat_1a782dd472d4a859a13dc77fca7e4ef8a6>`(
			int i0,
			int i1,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		template <typename _Tp>
		const _Tp*
		:ref:`find<doxid-d5/d29/classcv_1_1_sparse_mat_1aca75a3e5266b78bafcd01dffe75e563d>`(
			int i0,
			int i1,
			int i2,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		template <typename _Tp>
		const _Tp*
		:ref:`find<doxid-d5/d29/classcv_1_1_sparse_mat_1a6a68ed5f9b65fa36c3d209c0dafa24a8>`(
			const int* idx,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			) const;
	
		:ref:`SparseMatIterator<doxid-dd/d91/classcv_1_1_sparse_mat_iterator>`
		:ref:`begin<doxid-d5/d29/classcv_1_1_sparse_mat_1ad3913621631f1f3bd6a3a3ef6e667570>`();
	
		template <typename _Tp>
		:ref:`SparseMatIterator_<doxid-d1/d10/classcv_1_1_sparse_mat_iterator__>`<_Tp>
		:ref:`begin<doxid-d5/d29/classcv_1_1_sparse_mat_1af371f2cb6952b62ec7ad3b82538d9363>`();
	
		:ref:`SparseMatConstIterator<doxid-db/dc8/classcv_1_1_sparse_mat_const_iterator>`
		:ref:`begin<doxid-d5/d29/classcv_1_1_sparse_mat_1a106056c6a53a49929da7c52c24945165>`() const;
	
		template <typename _Tp>
		:ref:`SparseMatConstIterator_<doxid-db/d01/classcv_1_1_sparse_mat_const_iterator__>`<_Tp>
		:ref:`begin<doxid-d5/d29/classcv_1_1_sparse_mat_1ad02b25e131308553618b710e22ca8af1>`() const;
	
		void
		:ref:`addref<doxid-d5/d29/classcv_1_1_sparse_mat_1a8d1d03d3c19ccd8cd5653b3b7375bb68>`();
	
		void
		:ref:`assignTo<doxid-d5/d29/classcv_1_1_sparse_mat_1ae102ac11f15a875d9b689575d585d21f>`(
			:ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`& m,
			int type = -1
			) const;
	
		int
		:ref:`channels<doxid-d5/d29/classcv_1_1_sparse_mat_1acb6b3b831a74b2071f8741ee873e925f>`() const;
	
		void
		:ref:`clear<doxid-d5/d29/classcv_1_1_sparse_mat_1a2fa705d84961513f6e0b0066ec245a8e>`();
	
		:ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`
		:ref:`clone<doxid-d5/d29/classcv_1_1_sparse_mat_1a291307d646c7e9e76607b8a49ab4d6ea>`() const;
	
		void
		:ref:`convertTo<doxid-d5/d29/classcv_1_1_sparse_mat_1a577ea9bbc02ffcf195df6d96f9c9650c>`(
			:ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`& m,
			int rtype,
			double alpha = 1
			) const;
	
		void
		:ref:`convertTo<doxid-d5/d29/classcv_1_1_sparse_mat_1a668825b1d0bb87a075cc2382692093b7>`(
			:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& m,
			int rtype,
			double alpha = 1,
			double beta = 0
			) const;
	
		void
		:ref:`copyTo<doxid-d5/d29/classcv_1_1_sparse_mat_1a18d9fb50fa768fd20e9f11b003906133>`(:ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`& m) const;
	
		void
		:ref:`copyTo<doxid-d5/d29/classcv_1_1_sparse_mat_1a6b077b6ec96d3aa588ef32e63cd7f7f5>`(:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& m) const;
	
		void
		:ref:`create<doxid-d5/d29/classcv_1_1_sparse_mat_1adf2713a5ec1fb025c9ff4014a53e68c6>`(
			int dims,
			const int* _sizes,
			int _type
			);
	
		int
		:ref:`depth<doxid-d5/d29/classcv_1_1_sparse_mat_1ae40e39e851f00341f1df57cb482429dc>`() const;
	
		int
		:ref:`dims<doxid-d5/d29/classcv_1_1_sparse_mat_1a1779da985ecb9cd570e0dd71a49b6aca>`() const;
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`elemSize<doxid-d5/d29/classcv_1_1_sparse_mat_1af42f343f4f3d5bc974db1eca57417150>`() const;
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`elemSize1<doxid-d5/d29/classcv_1_1_sparse_mat_1a3564e3c77b19ac1104dbe924973dd288>`() const;
	
		:ref:`SparseMatIterator<doxid-dd/d91/classcv_1_1_sparse_mat_iterator>`
		:ref:`end<doxid-d5/d29/classcv_1_1_sparse_mat_1a71cef837db3fd9aabef3abb57ae19a1b>`();
	
		:ref:`SparseMatConstIterator<doxid-db/dc8/classcv_1_1_sparse_mat_const_iterator>`
		:ref:`end<doxid-d5/d29/classcv_1_1_sparse_mat_1a4d3e2d01ec6a363488097ae2b0b3c124>`() const;
	
		template <typename _Tp>
		:ref:`SparseMatIterator_<doxid-d1/d10/classcv_1_1_sparse_mat_iterator__>`<_Tp>
		:ref:`end<doxid-d5/d29/classcv_1_1_sparse_mat_1a4fe2ca854bcafa54cb371146523c7e36>`();
	
		template <typename _Tp>
		:ref:`SparseMatConstIterator_<doxid-db/d01/classcv_1_1_sparse_mat_const_iterator__>`<_Tp>
		:ref:`end<doxid-d5/d29/classcv_1_1_sparse_mat_1ac004c4119d6e77bfa95e803d9a7dd5fd>`() const;
	
		void
		:ref:`erase<doxid-d5/d29/classcv_1_1_sparse_mat_1ad4ff041a2a3771613847b94c761ab1f4>`(
			int i0,
			int i1,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		void
		:ref:`erase<doxid-d5/d29/classcv_1_1_sparse_mat_1ab00d2c0c7bff3c631d1ac43fe1be45cd>`(
			int i0,
			int i1,
			int i2,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		void
		:ref:`erase<doxid-d5/d29/classcv_1_1_sparse_mat_1a6f64485a3f47ba79847a3fdf349b9943>`(
			const int* idx,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
			);
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`hash<doxid-d5/d29/classcv_1_1_sparse_mat_1ae882e4ed31b4cc76b19cd67d84e854b1>`(int i0) const;
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`hash<doxid-d5/d29/classcv_1_1_sparse_mat_1aa9aba486fd7e4fc2b1c80bc54844ac23>`(
			int i0,
			int i1
			) const;
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`hash<doxid-d5/d29/classcv_1_1_sparse_mat_1a681b6dafd842a95589cb82ed790279c9>`(
			int i0,
			int i1,
			int i2
			) const;
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`hash<doxid-d5/d29/classcv_1_1_sparse_mat_1a5c4f02569b2b2f183903112435a13f83>`(const int* idx) const;
	
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`*
		:ref:`newNode<doxid-d5/d29/classcv_1_1_sparse_mat_1acfbf3c27ab6d5f90e4d37b1654f90f0a>`(
			const int* idx,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` hashval
			);
	
		:ref:`Node<doxid-d9/d77/structcv_1_1_sparse_mat_1_1_node>`*
		:ref:`node<doxid-d5/d29/classcv_1_1_sparse_mat_1a499f156a1dc912aae86f1d725fbb9b77>`(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` nidx);
	
		const :ref:`Node<doxid-d9/d77/structcv_1_1_sparse_mat_1_1_node>`*
		:ref:`node<doxid-d5/d29/classcv_1_1_sparse_mat_1ab3e934620dcbc6248a09e2b8a5760b3f>`(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` nidx) const;
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`nzcount<doxid-d5/d29/classcv_1_1_sparse_mat_1ad0cd6ef01802341dda3e8b75af5933f0>`() const;
	
		:ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`&
		:ref:`operator=<doxid-d5/d29/classcv_1_1_sparse_mat_1a144c0f1ec1d3ffc20305bc4d1747b741>`(const :ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`& m);
	
		:ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`&
		:ref:`operator=<doxid-d5/d29/classcv_1_1_sparse_mat_1a9e634f2d73a077444df4395e50821129>`(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& m);
	
		void
		:ref:`release<doxid-d5/d29/classcv_1_1_sparse_mat_1a3f4c162afd8cc809d23bd0fe9b38ead7>`();
	
		void
		:ref:`removeNode<doxid-d5/d29/classcv_1_1_sparse_mat_1a5adcb69ee679da35f74ea3a78594a692>`(
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` hidx,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` nidx,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` previdx
			);
	
		void
		:ref:`resizeHashTab<doxid-d5/d29/classcv_1_1_sparse_mat_1af86523883daef3f618a7ec38fe049edc>`(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` newsize);
	
		const int*
		:ref:`size<doxid-d5/d29/classcv_1_1_sparse_mat_1a65eac830987646a4792815ad4e717c3e>`() const;
	
		int
		:ref:`size<doxid-d5/d29/classcv_1_1_sparse_mat_1a4fe9c986b3cf0240c68ce985df334c17>`(int i) const;
	
		int
		:ref:`type<doxid-d5/d29/classcv_1_1_sparse_mat_1a3331bffc1409d61631d223169a950b25>`() const;
	
		template <typename _Tp>
		_Tp&
		:ref:`value<doxid-d5/d29/classcv_1_1_sparse_mat_1a0ede1a78ef553729dd33f039c1ed50f5>`(:ref:`Node<doxid-d9/d77/structcv_1_1_sparse_mat_1_1_node>`* n);
	
		template <typename _Tp>
		const _Tp&
		:ref:`value<doxid-d5/d29/classcv_1_1_sparse_mat_1a39e257c6ec922968175136de3f572d2f>`(const :ref:`Node<doxid-d9/d77/structcv_1_1_sparse_mat_1_1_node>`* n) const;

.. _details-df/d90/classcv_1_1_sparse_mat__:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Template sparse n-dimensional array class derived from :ref:`SparseMat <doxid-d5/d29/classcv_1_1_sparse_mat>`.

:ref:`SparseMat\_ <doxid-df/d90/classcv_1_1_sparse_mat__>` is a thin wrapper on top of :ref:`SparseMat <doxid-d5/d29/classcv_1_1_sparse_mat>` created in the same way as :ref:`Mat\_ <doxid-d9/de0/classcv_1_1_mat__>`. It simplifies notation of some operations:

.. ref-code-block:: cpp

	int sz[] = {10, 20, 30};
	SparseMat_<double> M(3, sz);
	...
	M.ref(1, 2, 3) = M(4, 5, 6) + M(7, 8, 9);

Construction
------------

.. index:: pair: function; SparseMat_
.. _doxid-df/d90/classcv_1_1_sparse_mat___1a359e83f7b4372d439ad31a84e72cd12d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SparseMat_()

the default constructor

.. index:: pair: function; SparseMat_
.. _doxid-df/d90/classcv_1_1_sparse_mat___1adb611458d46e670dcaf099f1fceddf9c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SparseMat_(
		int dims,
		const int* _sizes
		)

the full constructor equivelent to SparseMat(dims, _sizes, DataType<_Tp>::type)

.. index:: pair: function; SparseMat_
.. _doxid-df/d90/classcv_1_1_sparse_mat___1ab0e9b029a622c637e17f8288d968f25c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SparseMat_(const :ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`& m)

the copy constructor. If :ref:`DataType\<_Tp>.type <doxid-da/da2/classcv_1_1_data_type_1a75c11182df1b37ccefe728f513811a2fa33b31a814b0954c1185147a372a39390>`!= m.type(), the m elements are converted

.. index:: pair: function; SparseMat_
.. _doxid-df/d90/classcv_1_1_sparse_mat___1a773ae7065a51b5440d0d9c8b87b7eba3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SparseMat_(const SparseMat_& m)

the copy constructor. This is O(1) operation - no data is copied

.. index:: pair: function; SparseMat_
.. _doxid-df/d90/classcv_1_1_sparse_mat___1a0938540b46ceeca038f396f019b1e3c4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SparseMat_(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& m)

converts dense matrix to the sparse form

Methods
-------

.. index:: pair: function; begin
.. _doxid-df/d90/classcv_1_1_sparse_mat___1ac61edef7ba582a9ad7e9884e19ae41ab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SparseMatIterator_<doxid-d1/d10/classcv_1_1_sparse_mat_iterator__>`<_Tp>
	begin()

returns sparse matrix iterator pointing to the first sparse matrix element

.. index:: pair: function; begin
.. _doxid-df/d90/classcv_1_1_sparse_mat___1aa3151e36d0d71c7b61447469d718dc69:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SparseMatConstIterator_<doxid-db/d01/classcv_1_1_sparse_mat_const_iterator__>`<_Tp>
	begin() const

returns read-only sparse matrix iterator pointing to the first sparse matrix element

.. index:: pair: function; channels
.. _doxid-df/d90/classcv_1_1_sparse_mat___1af35ce086f94ecec24480d84010834737:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	channels() const

returns the number of channels in each matrix element

.. index:: pair: function; clone
.. _doxid-df/d90/classcv_1_1_sparse_mat___1a17b0f13e770facc1122c1c74a767929e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SparseMat_
	clone() const

makes full copy of the matrix. All the elements are duplicated

.. index:: pair: function; create
.. _doxid-df/d90/classcv_1_1_sparse_mat___1a18a20736ff3a669e99e041d1c4fa7110:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	create(
		int dims,
		const int* _sizes
		)

equivalent to cv::SparseMat::create(dims, _sizes, DataType<_Tp>::type)

.. index:: pair: function; depth
.. _doxid-df/d90/classcv_1_1_sparse_mat___1adebe30e83d0c876a63de558ca3ab5435:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	depth() const

returns depth of the matrix elements

.. index:: pair: function; end
.. _doxid-df/d90/classcv_1_1_sparse_mat___1a0d918c7287fdff2d82738667d066fabc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SparseMatIterator_<doxid-d1/d10/classcv_1_1_sparse_mat_iterator__>`<_Tp>
	end()

returns sparse matrix iterator pointing to the element following the last sparse matrix element

.. index:: pair: function; end
.. _doxid-df/d90/classcv_1_1_sparse_mat___1a7091eccbc3eed537f5ab12944ac61b3e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`SparseMatConstIterator_<doxid-db/d01/classcv_1_1_sparse_mat_const_iterator__>`<_Tp>
	end() const

returns read-only sparse matrix iterator pointing to the element following the last sparse matrix element

.. index:: pair: function; operator()
.. _doxid-df/d90/classcv_1_1_sparse_mat___1ad7c0f0164b060df2179b3e9f1d1566a8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	_Tp
	operator()(
		int i0,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
		) const

equivalent to SparseMat::value<_Tp>(i0, hashval)

.. index:: pair: function; operator()
.. _doxid-df/d90/classcv_1_1_sparse_mat___1a89b99bb281a9747b54e94be670f6a010:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	_Tp
	operator()(
		int i0,
		int i1,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
		) const

equivalent to SparseMat::value<_Tp>(i0, i1, hashval)

.. index:: pair: function; operator()
.. _doxid-df/d90/classcv_1_1_sparse_mat___1ab4ffea87933a1bffcadd0db260c36846:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	_Tp
	operator()(
		int i0,
		int i1,
		int i2,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
		) const

equivalent to SparseMat::value<_Tp>(i0, i1, i2, hashval)

.. index:: pair: function; operator()
.. _doxid-df/d90/classcv_1_1_sparse_mat___1ae68f3e59954cc03297b2d0e6e8ba9014:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	_Tp
	operator()(
		const int* idx,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
		) const

equivalent to SparseMat::value<_Tp>(idx, hashval)

.. index:: pair: function; operator=
.. _doxid-df/d90/classcv_1_1_sparse_mat___1aa9ea60ee22d3ba75ccb16365eda3f096:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SparseMat_&
	operator=(const :ref:`SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`& m)

converts the old-style sparse matrix to the C++ class. All the elements are copied

the assignment operator. If :ref:`DataType\<_Tp>.type <doxid-da/da2/classcv_1_1_data_type_1a75c11182df1b37ccefe728f513811a2fa33b31a814b0954c1185147a372a39390>`!= m.type(), the m elements are converted

.. index:: pair: function; operator=
.. _doxid-df/d90/classcv_1_1_sparse_mat___1a3a90de6441880eae3ba875a0fed2700e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SparseMat_&
	operator=(const SparseMat_& m)

the assignment operator. This is O(1) operation - no data is copied

.. index:: pair: function; operator=
.. _doxid-df/d90/classcv_1_1_sparse_mat___1aebaca1182543e7e71ee5c4f73a088c90:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SparseMat_&
	operator=(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& m)

converts dense matrix to the sparse form

.. index:: pair: function; ref
.. _doxid-df/d90/classcv_1_1_sparse_mat___1a17c4339e51120f3f31a21f2d8145aa4a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	_Tp&
	ref(
		int i0,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
		)

equivalent to SparseMat::ref<_Tp>(i0, hashval)

.. index:: pair: function; ref
.. _doxid-df/d90/classcv_1_1_sparse_mat___1ab5627691b3f57c2f8be0a0c0a27178e7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	_Tp&
	ref(
		int i0,
		int i1,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
		)

equivalent to SparseMat::ref<_Tp>(i0, i1, hashval)

.. index:: pair: function; ref
.. _doxid-df/d90/classcv_1_1_sparse_mat___1aecb8e3bf1734c3c0ee967f3149aebe03:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	_Tp&
	ref(
		int i0,
		int i1,
		int i2,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
		)

equivalent to SparseMat::ref<_Tp>(i0, i1, i2, hashval)

.. index:: pair: function; ref
.. _doxid-df/d90/classcv_1_1_sparse_mat___1ae7872bd52762f694af7f76251770de3e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	_Tp&
	ref(
		const int* idx,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`* hashval = 0
		)

equivalent to SparseMat::ref<_Tp>(idx, hashval)

.. index:: pair: function; type
.. _doxid-df/d90/classcv_1_1_sparse_mat___1abcd902283fa4eb7556499d0729196b30:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	type() const

converts sparse matrix to the old-style :ref:`CvSparseMat <doxid-d3/d6a/struct_cv_sparse_mat>`. All the elements are copied

returns type of the matrix elements

