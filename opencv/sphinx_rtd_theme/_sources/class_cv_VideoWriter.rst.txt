.. index:: pair: class; cv::VideoWriter
.. _doxid-d6/d16/classcv_1_1_video_writer:

class cv::VideoWriter
=====================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Video writer class. :ref:`More...<details-d6/d16/classcv_1_1_video_writer>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <videoio.hpp>
	
	class VideoWriter
	{
	public:
		// construction
	
		:ref:`VideoWriter<doxid-d6/d16/classcv_1_1_video_writer_1ad59c61d8881ba2b2da22cff5487465b5>`();
	
		:ref:`VideoWriter<doxid-d6/d16/classcv_1_1_video_writer_1ac3478f6257454209fa99249cc03a5c59>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			int fourcc,
			double fps,
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` frameSize,
			bool isColor = true
			);
	
		:ref:`VideoWriter<doxid-d6/d16/classcv_1_1_video_writer_1a2af138fdd02d8167a42c25e4775e337d>`(
			int apiPreference,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			int fourcc,
			double fps,
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` frameSize,
			bool isColor = true
			);

		// methods
	
		virtual
		double
		:ref:`get<doxid-d6/d16/classcv_1_1_video_writer_1a284e798e95847789024954abeec945d5>`(int propId) const;
	
		virtual
		bool
		:ref:`isOpened<doxid-d6/d16/classcv_1_1_video_writer_1a9a40803e5f671968ac9efa877c984d75>`() const;
	
		virtual
		bool
		:ref:`open<doxid-d6/d16/classcv_1_1_video_writer_1a0901c353cd5ea05bba455317dab81130>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			int fourcc,
			double fps,
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` frameSize,
			bool isColor = true
			);
	
		bool
		:ref:`open<doxid-d6/d16/classcv_1_1_video_writer_1a68fa0aa494b0c030768c277bf0171029>`(
			int apiPreference,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			int fourcc,
			double fps,
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` frameSize,
			bool isColor = true
			);
	
		virtual
		VideoWriter&
		:ref:`operator<<<doxid-d6/d16/classcv_1_1_video_writer_1a674a3009537b05a655ad483acd8e09eb>`(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& image);
	
		virtual
		void
		:ref:`release<doxid-d6/d16/classcv_1_1_video_writer_1a667f737e56d5ba6b0533c6c7bf941140>`();
	
		virtual
		bool
		:ref:`set<doxid-d6/d16/classcv_1_1_video_writer_1a7ba668f440d8af5e1a92df58b2475816>`(
			int propId,
			double value
			);
	
		virtual
		void
		:ref:`write<doxid-d6/d16/classcv_1_1_video_writer_1a3115b679d612a6a0b5864a0c88ed4b39>`(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& image);
	
		static
		int
		:ref:`fourcc<doxid-d6/d16/classcv_1_1_video_writer_1afec93f94dc6c0b3e28f4dd153bc5a7f0>`(
			char c1,
			char c2,
			char c3,
			char c4
			);

	protected:
		// fields
	
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<IVideoWriter> :target:`iwriter<doxid-d6/d16/classcv_1_1_video_writer_1ab6567d64fd202fe34284f0b11b79454c>`;
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`CvVideoWriter<doxid-dd/d01/group__videoio__c_1ga888ba48aa022b60aecf98a462aa1b638>`> :target:`writer<doxid-d6/d16/classcv_1_1_video_writer_1a8d73b66ca5bc85ec071052ed7f417b5f>`;

		// methods
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<IVideoWriter>
		:target:`create<doxid-d6/d16/classcv_1_1_video_writer_1a24352ee160cb574af9c0a2ee4738b184>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			int fourcc,
			double fps,
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` frameSize,
			bool isColor = true
			);
	};
.. _details-d6/d16/classcv_1_1_video_writer:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Video writer class.

The class provides C++ API for writing video files or image sequences.

Here is how the class can be used:

.. ref-code-block:: cpp

	
	#include <opencv2/opencv.hpp>
	#include <iostream>
	#include <stdio.h>
	
	using namespace :ref:`cv <doxid-d2/d75/namespacecv>`;
	using namespace :ref:`std <doxid-d8/dcc/namespacestd>`;
	
	int main(int, char**)
	{
	    :ref:`Mat <doxid-db/de6/classcv_1_1_mat>` src;
	    // use default camera as video source
	    :ref:`VideoCapture <doxid-df/dcb/classcv_1_1_video_capture>` cap(0);
	    // check if we succeeded
	    if (!cap.:ref:`isOpened <doxid-df/dcb/classcv_1_1_video_capture_1a9d2ca36789e7fcfe7a7be3b328038585>`()) {
	        cerr << "ERROR! Unable to open camera\n";
	        return -1;
	    }
	    // get one frame from camera to know frame size and type
	    cap >> src;
	    // check if we succeeded
	    if (src.empty()) {
	        cerr << "ERROR! blank frame grabbed\n";
	        return -1;
	    }
	    bool isColor = (src.type() == :ref:`CV_8UC3 <doxid-d1/d1b/group__core__hal__interface_1ga88c4cd9de76f678f33928ef1e3f96047>`);
	
	    //--- INITIALIZE VIDEOWRITER
	    :ref:`VideoWriter <doxid-d6/d16/classcv_1_1_video_writer>` :ref:`writer <doxid-d6/d16/classcv_1_1_video_writer_1a8d73b66ca5bc85ec071052ed7f417b5f>`;
	    int codec = :ref:`CV_FOURCC <doxid-dd/d01/group__videoio__c_1gac005718f121379beffdbdbfb44f2646a>`('M', 'J', 'P', 'G');  // select desired codec (must be available at runtime)
	    double fps = 25.0;                          // framerate of the created video stream
	    string filename = "./live.avi";             // name of the output video file
	    writer.:ref:`open <doxid-d6/d16/classcv_1_1_video_writer_1a0901c353cd5ea05bba455317dab81130>`(filename, codec, fps, src.size(), isColor);
	    // check if we succeeded
	    if (!writer.:ref:`isOpened <doxid-d6/d16/classcv_1_1_video_writer_1a9a40803e5f671968ac9efa877c984d75>`()) {
	        cerr << "Could not open the output video file for write\n";
	        return -1;
	    }
	
	    //--- GRAB AND WRITE LOOP
	    cout << "Writing videofile: " << filename << endl
	         << "Press any key to terminate" << endl;
	    for (;;)
	    {
	        // check if we succeeded
	        if (!cap.:ref:`read <doxid-df/dcb/classcv_1_1_video_capture_1a473055e77dd7faa4d26d686226b292c1>`(src)) {
	            cerr << "ERROR! blank frame grabbed\n";
	            break;
	        }
	        // encode the frame into the videofile stream
	        writer.:ref:`write <doxid-d6/d16/classcv_1_1_video_writer_1a3115b679d612a6a0b5864a0c88ed4b39>`(src);
	        // show live and wait for a key with timeout long enough to show images
	        :ref:`imshow <doxid-d7/dfc/group__highgui_1ga453d42fe4cb60e5723281a89973ee563>`("Live", src);
	        if (:ref:`waitKey <doxid-d7/dfc/group__highgui_1ga5628525ad33f52eab17feebcfba38bd7>`(5) >= 0)
	            break;
	    }
	    // the videofile will be closed and released automatically in VideoWriter destructor
	    return 0;
	}

Construction
------------

.. index:: pair: function; VideoWriter
.. _doxid-d6/d16/classcv_1_1_video_writer_1ad59c61d8881ba2b2da22cff5487465b5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	VideoWriter()

Default constructors.

The constructors/functions initialize video writers.

* On Linux FFMPEG is used to write videos;

* On Windows FFMPEG or VFW is used;

* On MacOSX QTKit is used.

.. index:: pair: function; VideoWriter
.. _doxid-d6/d16/classcv_1_1_video_writer_1ac3478f6257454209fa99249cc03a5c59:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	VideoWriter(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
		int fourcc,
		double fps,
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` frameSize,
		bool isColor = true
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. **Tips:**

* With some backends ``fourcc=-1`` pops up the codec selection dialog from the system.

* To save image sequence use a proper filename (eg. ``img_%02d.jpg``) and ``fourcc=0`` OR ``fps=0``. Use uncompressed image format (eg. ``img_%02d.BMP``) to save raw frames.

* Most codecs are lossy. If you want lossless video file you need to use a lossless codecs (eg. FFMPEG FFV1, Huffman HFYU, Lagarith LAGS, etc...)

* If FFMPEG is enabled, using ``codec=0; fps=0;`` you can create an uncompressed (raw) video file.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filename

		- Name of the output video file.

	*
		- fourcc

		- 4-character code of codec used to compress the frames. For example, :ref:`VideoWriter::fourcc <doxid-d6/d16/classcv_1_1_video_writer_1afec93f94dc6c0b3e28f4dd153bc5a7f0>` ('P','I','M','1') is a MPEG-1 codec, :ref:`VideoWriter::fourcc <doxid-d6/d16/classcv_1_1_video_writer_1afec93f94dc6c0b3e28f4dd153bc5a7f0>` ('M','J','P','G') is a motion-jpeg codec etc. List of codes can be obtained at `Video Codecs by FOURCC <http://www.fourcc.org/codecs.php>`__ page. FFMPEG backend with MP4 container natively uses other values as fourcc code: see `ObjectType <http://www.mp4ra.org/codecs.html>`__, so you may receive a warning message from OpenCV about fourcc code conversion.

	*
		- fps

		- Framerate of the created video stream.

	*
		- frameSize

		- Size of the video frames.

	*
		- isColor

		- If it is not zero, the encoder will expect and encode color frames, otherwise it will work with grayscale frames (the flag is currently supported on Windows only).

.. index:: pair: function; VideoWriter
.. _doxid-d6/d16/classcv_1_1_video_writer_1a2af138fdd02d8167a42c25e4775e337d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	VideoWriter(
		int apiPreference,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
		int fourcc,
		double fps,
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` frameSize,
		bool isColor = true
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. The ``apiPreference`` parameter allows to specify API backends to use. Can be used to enforce a specific reader implementation if multiple are available: e.g. :ref:`cv::CAP_FFMPEG <doxid-d4/d15/group__videoio__flags__base_1gga023786be1ee68a9105bf2e48c700294dacf10e9692c4166f74de62b7d00c377d0>` or :ref:`cv::CAP_GSTREAMER <doxid-d4/d15/group__videoio__flags__base_1gga023786be1ee68a9105bf2e48c700294da38dcac6866f7608675dd35ba0b9c3c07>`.

Methods
-------

.. index:: pair: function; get
.. _doxid-d6/d16/classcv_1_1_video_writer_1a284e798e95847789024954abeec945d5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	get(int propId) const

Returns the specified :ref:`VideoWriter <doxid-d6/d16/classcv_1_1_video_writer>` property.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- propId

		- Property identifier from :ref:`cv::VideoWriterProperties <doxid-d4/d15/group__videoio__flags__base_1ga41c5cfa7859ae542b71b1d33bbd4d2b4>` (eg. :ref:`cv::VIDEOWRITER_PROP_QUALITY <doxid-d4/d15/group__videoio__flags__base_1gga41c5cfa7859ae542b71b1d33bbd4d2b4a1cc2ab47f60a115ff9624ff71715b93b>`) or one of :ref:`Additional flags for video I/O API backends <doxid-dc/dfc/group__videoio__flags__others>`



.. rubric:: Returns:

Value for the specified property. Value 0 is returned when querying a property that is not supported by the backend used by the :ref:`VideoWriter <doxid-d6/d16/classcv_1_1_video_writer>` instance.

.. index:: pair: function; isOpened
.. _doxid-d6/d16/classcv_1_1_video_writer_1a9a40803e5f671968ac9efa877c984d75:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isOpened() const

Returns true if video writer has been successfully initialized.

.. index:: pair: function; open
.. _doxid-d6/d16/classcv_1_1_video_writer_1a0901c353cd5ea05bba455317dab81130:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	open(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
		int fourcc,
		double fps,
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` frameSize,
		bool isColor = true
		)

Initializes or reinitializes video writer.

The method opens video writer. Parameters are the same as in the constructor :ref:`VideoWriter::VideoWriter <doxid-d6/d16/classcv_1_1_video_writer_1ad59c61d8881ba2b2da22cff5487465b5>`. The method first calls :ref:`VideoWriter::release <doxid-d6/d16/classcv_1_1_video_writer_1a667f737e56d5ba6b0533c6c7bf941140>` to close the already opened file.



.. rubric:: Returns:

``true`` if video writer has been successfully initialized

.. index:: pair: function; open
.. _doxid-d6/d16/classcv_1_1_video_writer_1a68fa0aa494b0c030768c277bf0171029:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	open(
		int apiPreference,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
		int fourcc,
		double fps,
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` frameSize,
		bool isColor = true
		)

Initializes or reinitializes video writer.

The method opens video writer. Parameters are the same as in the constructor :ref:`VideoWriter::VideoWriter <doxid-d6/d16/classcv_1_1_video_writer_1ad59c61d8881ba2b2da22cff5487465b5>`. The method first calls :ref:`VideoWriter::release <doxid-d6/d16/classcv_1_1_video_writer_1a667f737e56d5ba6b0533c6c7bf941140>` to close the already opened file.



.. rubric:: Returns:

``true`` if video writer has been successfully initialized

.. index:: pair: function; operator<<
.. _doxid-d6/d16/classcv_1_1_video_writer_1a674a3009537b05a655ad483acd8e09eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	VideoWriter&
	operator<<(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& image)

Stream operator to write the next video frame.



.. rubric:: See also:

:ref:`write <doxid-d6/d16/classcv_1_1_video_writer_1a3115b679d612a6a0b5864a0c88ed4b39>`

.. index:: pair: function; release
.. _doxid-d6/d16/classcv_1_1_video_writer_1a667f737e56d5ba6b0533c6c7bf941140:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	release()

Closes the video writer.

The method is automatically called by subsequent :ref:`VideoWriter::open <doxid-d6/d16/classcv_1_1_video_writer_1a0901c353cd5ea05bba455317dab81130>` and by the :ref:`VideoWriter <doxid-d6/d16/classcv_1_1_video_writer>` destructor.

.. index:: pair: function; set
.. _doxid-d6/d16/classcv_1_1_video_writer_1a7ba668f440d8af5e1a92df58b2475816:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	set(
		int propId,
		double value
		)

Sets a property in the :ref:`VideoWriter <doxid-d6/d16/classcv_1_1_video_writer>`.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- propId

		- Property identifier from :ref:`cv::VideoWriterProperties <doxid-d4/d15/group__videoio__flags__base_1ga41c5cfa7859ae542b71b1d33bbd4d2b4>` (eg. :ref:`cv::VIDEOWRITER_PROP_QUALITY <doxid-d4/d15/group__videoio__flags__base_1gga41c5cfa7859ae542b71b1d33bbd4d2b4a1cc2ab47f60a115ff9624ff71715b93b>`) or one of :ref:`Additional flags for video I/O API backends <doxid-dc/dfc/group__videoio__flags__others>`

	*
		- value

		- Value of the property.



.. rubric:: Returns:

``true`` if the property is supported by the backend used by the :ref:`VideoWriter <doxid-d6/d16/classcv_1_1_video_writer>` instance.

.. index:: pair: function; write
.. _doxid-d6/d16/classcv_1_1_video_writer_1a3115b679d612a6a0b5864a0c88ed4b39:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	write(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& image)

Writes the next video frame.

The function/method writes the specified image to video file. It must have the same size as has been specified when opening the video writer.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- image

		- The written frame

.. index:: pair: function; fourcc
.. _doxid-d6/d16/classcv_1_1_video_writer_1afec93f94dc6c0b3e28f4dd153bc5a7f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	int
	fourcc(
		char c1,
		char c2,
		char c3,
		char c4
		)

Concatenates 4 chars to a fourcc code.

This static method constructs the fourcc code of the codec to be used in the constructor :ref:`VideoWriter::VideoWriter <doxid-d6/d16/classcv_1_1_video_writer_1ad59c61d8881ba2b2da22cff5487465b5>` or :ref:`VideoWriter::open <doxid-d6/d16/classcv_1_1_video_writer_1a0901c353cd5ea05bba455317dab81130>`.



.. rubric:: Returns:

a fourcc code

