.. index:: pair: class; cv::cuda::BroxOpticalFlow
.. _doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow:

class cv::cuda::BroxOpticalFlow
===============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Class computing the optical flow for two images using Brox et al Optical Flow algorithm (:ref:`[12] <doxid-d0/de3/citelist_1CITEREF_Brox2004>`). :ref:`More...<details-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <cudaoptflow.hpp>
	
	class BroxOpticalFlow: public :ref:`cv::cuda::DenseOpticalFlow<doxid-d8/d5b/classcv_1_1cuda_1_1_dense_optical_flow>`
	{
	public:
		// methods
	
		virtual
		double
		:target:`getFlowSmoothness<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1ae0b1a21a74201cc89d84bb8bf2fa5e05>`() const = 0;
	
		virtual
		double
		:target:`getGradientConstancyImportance<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1a88b71055fbb4f76867425a85e4a6b297>`() const = 0;
	
		virtual
		int
		:ref:`getInnerIterations<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1a1adda16582645a655d7c2c5f2a1c31a3>`() const = 0;
	
		virtual
		int
		:ref:`getOuterIterations<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1a8f67ef1d291cfd73f0433165fb55bdef>`() const = 0;
	
		virtual
		double
		:target:`getPyramidScaleFactor<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1a8614ab0f06601cadcaa1ecb6226fb9ef>`() const = 0;
	
		virtual
		int
		:ref:`getSolverIterations<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1aef930c4f55f792899b14ed30d3cf124d>`() const = 0;
	
		virtual
		void
		:target:`setFlowSmoothness<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1a14f843e96bc75a2580cbc4da489affdf>`(double alpha) = 0;
	
		virtual
		void
		:target:`setGradientConstancyImportance<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1af4f9c30ced899e3f9c13414295227aeb>`(double gamma) = 0;
	
		virtual
		void
		:target:`setInnerIterations<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1ae765e5fad39a6660e7c7801e34c5f097>`(int inner_iterations) = 0;
	
		virtual
		void
		:target:`setOuterIterations<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1a8fca0669fbe319e749fb55e360b0a015>`(int outer_iterations) = 0;
	
		virtual
		void
		:target:`setPyramidScaleFactor<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1a9019efb36e28f9ea2ce420b1efcd010e>`(double scale_factor) = 0;
	
		virtual
		void
		:target:`setSolverIterations<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1a7e714aba53c5947ccc58e04f818d028b>`(int solver_iterations) = 0;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<BroxOpticalFlow>
		:target:`create<doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1afa8751d1156b7391318f736a535dd2fc>`(
			double alpha = 0.197,
			double gamma = 50.0,
			double scale_factor = 0.8,
			int inner_iterations = 5,
			int outer_iterations = 150,
			int solver_iterations = 10
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`calc<doxid-d8/d5b/classcv_1_1cuda_1_1_dense_optical_flow_1a2cf6b216dccee0060c2ff0e4ba090f1c>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` I0,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` I1,
			:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` flow,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
			) = 0;

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Class computing the optical flow for two images using Brox et al Optical Flow algorithm (:ref:`[12] <doxid-d0/de3/citelist_1CITEREF_Brox2004>`).

Methods
-------

.. index:: pair: function; getInnerIterations
.. _doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1a1adda16582645a655d7c2c5f2a1c31a3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getInnerIterations() const = 0

number of lagged non-linearity iterations (inner loop)

.. index:: pair: function; getOuterIterations
.. _doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1a8f67ef1d291cfd73f0433165fb55bdef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getOuterIterations() const = 0

number of warping iterations (number of pyramid levels)

.. index:: pair: function; getSolverIterations
.. _doxid-d1/db6/classcv_1_1cuda_1_1_brox_optical_flow_1aef930c4f55f792899b14ed30d3cf124d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getSolverIterations() const = 0

number of linear system solver iterations

