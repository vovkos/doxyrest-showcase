.. index:: pair: class; cv::cuda::BufferPool
.. _doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool:

class cv::cuda::BufferPool
==========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

:ref:`BufferPool <doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool>` for use with CUDA streams. :ref:`More...<details-d4/d61/classcv_1_1cuda_1_1_buffer_pool>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <cuda.hpp>
	
	class BufferPool
	{
	public:
		// construction
	
		:ref:`BufferPool<doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool_1a0f1e0a518847d41663e7344927515761>`(:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream);

		// methods
	
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`GpuMat::Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`>
		:ref:`getAllocator<doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool_1a4d639258399df2b804a88afa334b022b>`() const;
	
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>`
		:ref:`getBuffer<doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool_1a715fecc85a804935c8c5a6c4eb4f905e>`(
			int rows,
			int cols,
			int type
			);
	
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>`
		:ref:`getBuffer<doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool_1ae3555cf098c2ca2b9112f18393f6095e>`(
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` size,
			int type
			);
	};
.. _details-d4/d61/classcv_1_1cuda_1_1_buffer_pool:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`BufferPool <doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool>` for use with CUDA streams.

:ref:`BufferPool <doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool>` utilizes :ref:`cuda::Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` 's allocator to create new buffers. It is particularly useful when BufferPoolUsage is set to true, or a custom allocator is specified for the :ref:`cuda::Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>`, and you want to implement your own stream based functions utilizing the same underlying GPU memory management.

Construction
------------

.. index:: pair: function; BufferPool
.. _doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool_1a0f1e0a518847d41663e7344927515761:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	BufferPool(:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream)

Gets the :ref:`BufferPool <doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool>` for the given stream.

Methods
-------

.. index:: pair: function; getAllocator
.. _doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool_1a4d639258399df2b804a88afa334b022b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`GpuMat::Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`>
	getAllocator() const

Returns the allocator associated with the stream.

.. index:: pair: function; getBuffer
.. _doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool_1a715fecc85a804935c8c5a6c4eb4f905e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>`
	getBuffer(
		int rows,
		int cols,
		int type
		)

Allocates a new :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` of given size and type.

.. index:: pair: function; getBuffer
.. _doxid-d4/d61/classcv_1_1cuda_1_1_buffer_pool_1ae3555cf098c2ca2b9112f18393f6095e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>`
	getBuffer(
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` size,
		int type
		)

Allocates a new :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` of given size and type.

