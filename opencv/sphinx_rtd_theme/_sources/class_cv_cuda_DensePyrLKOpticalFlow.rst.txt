.. index:: pair: class; cv::cuda::DensePyrLKOpticalFlow
.. _doxid-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow:

class cv::cuda::DensePyrLKOpticalFlow
=====================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Class used for calculating a dense optical flow. :ref:`More...<details-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <cudaoptflow.hpp>
	
	class DensePyrLKOpticalFlow: public :ref:`cv::cuda::DenseOpticalFlow<doxid-d8/d5b/classcv_1_1cuda_1_1_dense_optical_flow>`
	{
	public:
		// methods
	
		virtual
		int
		:target:`getMaxLevel<doxid-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow_1a8d425172413c7548d6cd9f69255bc2f7>`() const = 0;
	
		virtual
		int
		:target:`getNumIters<doxid-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow_1a9a1664d1f28c71b82cefbddee336740e>`() const = 0;
	
		virtual
		bool
		:target:`getUseInitialFlow<doxid-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow_1a397980f91fb5a81a42c06e672b3c8670>`() const = 0;
	
		virtual
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`
		:target:`getWinSize<doxid-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow_1a157702b1b741fca03cabf7b457415778>`() const = 0;
	
		virtual
		void
		:target:`setMaxLevel<doxid-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow_1a591e61e5930a84d05cb789a34766b984>`(int maxLevel) = 0;
	
		virtual
		void
		:target:`setNumIters<doxid-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow_1af4d64eff51c14f3c5f5ae9b25adf168c>`(int iters) = 0;
	
		virtual
		void
		:target:`setUseInitialFlow<doxid-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow_1a7973d35c2b7037820f1bb68014c248d3>`(bool useInitialFlow) = 0;
	
		virtual
		void
		:target:`setWinSize<doxid-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow_1a9151702e0186460e99583b236b82ad99>`(:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` winSize) = 0;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<DensePyrLKOpticalFlow>
		:target:`create<doxid-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow_1a0a8d7a0a39701e77bb6b905b73269a2a>`(
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` winSize = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(13, 13),
			int maxLevel = 3,
			int iters = 30,
			bool useInitialFlow = false
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`calc<doxid-d8/d5b/classcv_1_1cuda_1_1_dense_optical_flow_1a2cf6b216dccee0060c2ff0e4ba090f1c>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` I0,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` I1,
			:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` flow,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
			) = 0;

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d7/d2f/classcv_1_1cuda_1_1_dense_pyr_l_k_optical_flow:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Class used for calculating a dense optical flow.

The class can calculate an optical flow for a dense optical flow using the iterative Lucas-Kanade method with pyramids.

