.. index:: pair: class; cv::cuda::HOG
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g:

class cv::cuda::HOG
===================

.. toctree::
	:hidden:

Overview
~~~~~~~~

The class implements Histogram of Oriented Gradients (:ref:`[17] <doxid-d0/de3/citelist_1CITEREF_Dalal2005>`) object detector. :ref:`More...<details-d0/d34/classcv_1_1cuda_1_1_h_o_g>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <cudaobjdetect.hpp>
	
	class HOG: public :ref:`cv::Algorithm<doxid-d1/d41/classcv_1_1_algorithm>`
	{
	public:
		// enums
	
		enum
		{
		    :target:`DESCR_FORMAT_ROW_BY_ROW<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a3afae10b25cb5e83ccf10448a3d6ebfea88c1545b814a6a68929e210d1b5c2ac2>`,
		    :target:`DESCR_FORMAT_COL_BY_COL<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a3afae10b25cb5e83ccf10448a3d6ebfea1ca635c6c784693307131fc4f4735b2b>`,
		};

		// methods
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<HOG>
		:ref:`create<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1aa652085c609b2b581bda30d76ae7539c>`(
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` win_size = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(64, 128),
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` block_size = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(16, 16),
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` block_stride = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(8, 8),
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` cell_size = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(8, 8),
			int nbins = 9
			);
	
		virtual
		void
		:ref:`compute<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1ab4287267081959ec77c01269dbfcd373>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` descriptors,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
			) = 0;
	
		virtual
		void
		:ref:`detect<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a6673d9c05926ea11e0070c8ee4145664>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img,
			std::vector<:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`>& found_locations,
			std::vector<double>* confidences = NULL
			) = 0;
	
		virtual
		void
		:ref:`detectMultiScale<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1af4a3bf27a5a04817c6d584d9108f50b7>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img,
			std::vector<:ref:`Rect<doxid-dc/d84/group__core__basic_1ga11d95de507098e90bad732b9345402e8>`>& found_locations,
			std::vector<double>* confidences = NULL
			) = 0;
	
		virtual
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`getBlockHistogramSize<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a91cfda4bf995d20aae02594d020a7305>`() const = 0;
	
		virtual
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
		:ref:`getDefaultPeopleDetector<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a016f9ffced8b2f4b20bdd06a775017d1>`() const = 0;
	
		virtual
		int
		:target:`getDescriptorFormat<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a7ed480943071e7de8d939784c5c91cf6>`() const = 0;
	
		virtual
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`getDescriptorSize<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1adb8c714cba1a025b8869d5a0e152f824>`() const = 0;
	
		virtual
		bool
		:target:`getGammaCorrection<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a7032eed27cf7a004b727a6e522c2404e>`() const = 0;
	
		virtual
		int
		:target:`getGroupThreshold<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a5c8d9ed0f2d33c33cdf1deec98c5387d>`() const = 0;
	
		virtual
		double
		:target:`getHitThreshold<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1ae0de149980ea47fbd39b7766df565b27>`() const = 0;
	
		virtual
		double
		:target:`getL2HysThreshold<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a6853c9a66889fed996678f7972df9660>`() const = 0;
	
		virtual
		int
		:target:`getNumLevels<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a15238eb6f52a1ddeedd015773c46efd8>`() const = 0;
	
		virtual
		double
		:target:`getScaleFactor<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a89c59564625bb2c691af8c2cf49aab9e>`() const = 0;
	
		virtual
		double
		:target:`getWinSigma<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a22d03fa05b251b4f19cfa1fab36e754e>`() const = 0;
	
		virtual
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`
		:target:`getWinStride<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a6c63504790b51963ca33496a0b039b48>`() const = 0;
	
		virtual
		void
		:ref:`setDescriptorFormat<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a5418f3bf32164354dfbca7f4a1ba08a6>`(int descr_format) = 0;
	
		virtual
		void
		:ref:`setGammaCorrection<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a0eb2f1ecf59ccc599bffac3a0a55562f>`(bool gamma_correction) = 0;
	
		virtual
		void
		:ref:`setGroupThreshold<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1adad9af4e4ed0e0a045a70cd44520eefd>`(int group_threshold) = 0;
	
		virtual
		void
		:ref:`setHitThreshold<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a8b623393c11d18b89fa373269b97aea4>`(double hit_threshold) = 0;
	
		virtual
		void
		:ref:`setL2HysThreshold<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a30e5c88864fff774f403313993947d62>`(double threshold_L2hys) = 0;
	
		virtual
		void
		:ref:`setNumLevels<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a7602088f3e792de196f8f7efcd9bd448>`(int nlevels) = 0;
	
		virtual
		void
		:ref:`setScaleFactor<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a21dc5e3dc6272030694d52e83352b337>`(double scale0) = 0;
	
		virtual
		void
		:ref:`setSVMDetector<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a5d12db2277b7c3c849d75258eec8d1d4>`(:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` detector) = 0;
	
		virtual
		void
		:ref:`setWinSigma<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1ab291779ff8ac649174b102f64c5f9012>`(double win_sigma) = 0;
	
		virtual
		void
		:ref:`setWinStride<doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a5e74646651209ae13f1b3dd18179773f>`(:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` win_stride) = 0;
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d0/d34/classcv_1_1cuda_1_1_h_o_g:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

The class implements Histogram of Oriented Gradients (:ref:`[17] <doxid-d0/de3/citelist_1CITEREF_Dalal2005>`) object detector.

* An example applying the :ref:`HOG <doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g>` descriptor for people detection can be found at opencv_source_code/samples/cpp/peopledetect.cpp

* A CUDA example applying the :ref:`HOG <doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g>` descriptor for people detection can be found at opencv_source_code/samples/gpu/hog.cpp

* (Python) An example applying the :ref:`HOG <doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g>` descriptor for people detection can be found at opencv_source_code/samples/python/peopledetect.py

Methods
-------

.. index:: pair: function; create
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1aa652085c609b2b581bda30d76ae7539c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<HOG>
	create(
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` win_size = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(64, 128),
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` block_size = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(16, 16),
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` block_stride = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(8, 8),
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` cell_size = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(8, 8),
		int nbins = 9
		)

Creates the :ref:`HOG <doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g>` descriptor and detector.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- win_size

		- Detection window size. Align to block size and block stride.

	*
		- block_size

		- Block size in pixels. Align to cell size. Only (16,16) is supported for now.

	*
		- block_stride

		- Block stride. It must be a multiple of cell size.

	*
		- cell_size

		- Cell size. Only (8, 8) is supported for now.

	*
		- nbins

		- Number of bins. Only 9 bins per cell are supported for now.

.. index:: pair: function; compute
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1ab4287267081959ec77c01269dbfcd373:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	compute(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` descriptors,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		) = 0

Returns block descriptors computed for the whole image.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- img

		- Source image. See cuda::HOGDescriptor::detect for type limitations.

	*
		- descriptors

		- 2D array of descriptors.

	*
		- stream

		- CUDA stream.

.. index:: pair: function; detect
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a6673d9c05926ea11e0070c8ee4145664:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	detect(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img,
		std::vector<:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`>& found_locations,
		std::vector<double>* confidences = NULL
		) = 0

Performs object detection without a multi-scale window.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- img

		- Source image. CV_8UC1 and CV_8UC4 types are supported for now.

	*
		- found_locations

		- Left-top corner points of detected objects boundaries.

	*
		- confidences

		- Optional output array for confidences.

.. index:: pair: function; detectMultiScale
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1af4a3bf27a5a04817c6d584d9108f50b7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	detectMultiScale(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img,
		std::vector<:ref:`Rect<doxid-dc/d84/group__core__basic_1ga11d95de507098e90bad732b9345402e8>`>& found_locations,
		std::vector<double>* confidences = NULL
		) = 0

Performs object detection with a multi-scale window.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- img

		- Source image. See cuda::HOGDescriptor::detect for type limitations.

	*
		- found_locations

		- Detected objects boundaries.

	*
		- confidences

		- Optional output array for confidences.

.. index:: pair: function; getBlockHistogramSize
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a91cfda4bf995d20aae02594d020a7305:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
	getBlockHistogramSize() const = 0

Returns the block histogram size.

.. index:: pair: function; getDefaultPeopleDetector
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a016f9ffced8b2f4b20bdd06a775017d1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	getDefaultPeopleDetector() const = 0

Returns coefficients of the classifier trained for people detection.

.. index:: pair: function; getDescriptorSize
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1adb8c714cba1a025b8869d5a0e152f824:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
	getDescriptorSize() const = 0

Returns the number of coefficients required for the classification.

.. index:: pair: function; setDescriptorFormat
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a5418f3bf32164354dfbca7f4a1ba08a6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setDescriptorFormat(int descr_format) = 0

Descriptor storage format:

* **DESCR_FORMAT_ROW_BY_ROW** - Row-major order.

* **DESCR_FORMAT_COL_BY_COL** - Column-major order.

.. index:: pair: function; setGammaCorrection
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a0eb2f1ecf59ccc599bffac3a0a55562f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setGammaCorrection(bool gamma_correction) = 0

Flag to specify whether the gamma correction preprocessing is required or not.

.. index:: pair: function; setGroupThreshold
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1adad9af4e4ed0e0a045a70cd44520eefd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setGroupThreshold(int group_threshold) = 0

Coefficient to regulate the similarity threshold. When detected, some objects can be covered by many rectangles. 0 means not to perform grouping. See groupRectangles.

.. index:: pair: function; setHitThreshold
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a8b623393c11d18b89fa373269b97aea4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setHitThreshold(double hit_threshold) = 0

Threshold for the distance between features and SVM classifying plane. Usually it is 0 and should be specfied in the detector coefficients (as the last free coefficient). But if the free coefficient is omitted (which is allowed), you can specify it manually here.

.. index:: pair: function; setL2HysThreshold
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a30e5c88864fff774f403313993947d62:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setL2HysThreshold(double threshold_L2hys) = 0

L2-Hys normalization method shrinkage.

.. index:: pair: function; setNumLevels
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a7602088f3e792de196f8f7efcd9bd448:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setNumLevels(int nlevels) = 0

Maximum number of detection window increases.

.. index:: pair: function; setScaleFactor
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a21dc5e3dc6272030694d52e83352b337:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setScaleFactor(double scale0) = 0

Coefficient of the detection window increase.

.. index:: pair: function; setSVMDetector
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a5d12db2277b7c3c849d75258eec8d1d4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setSVMDetector(:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` detector) = 0

Sets coefficients for the linear SVM classifier.

.. index:: pair: function; setWinSigma
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1ab291779ff8ac649174b102f64c5f9012:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setWinSigma(double win_sigma) = 0

Gaussian smoothing window parameter.

.. index:: pair: function; setWinStride
.. _doxid-d0/d34/classcv_1_1cuda_1_1_h_o_g_1a5e74646651209ae13f1b3dd18179773f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setWinStride(:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` win_stride) = 0

Window stride. It must be a multiple of block stride.

