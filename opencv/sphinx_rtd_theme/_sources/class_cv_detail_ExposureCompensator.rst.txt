.. index:: pair: class; cv::detail::ExposureCompensator
.. _doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator:

class cv::detail::ExposureCompensator
=====================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Base class for all exposure compensators. :ref:`More...<details-d0/d46/classcv_1_1detail_1_1_exposure_compensator>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <exposure_compensate.hpp>
	
	class ExposureCompensator
	{
	public:
		// enums
	
		enum
		{
		    :target:`NO<doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator_1abecbd49761f0612f19c57e6f1e6325cda6903ebd9f5e55a2f484a789fce68bf48>`,
		    :target:`GAIN<doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator_1abecbd49761f0612f19c57e6f1e6325cda6ba7b5295c631d353f070e1e471d8cee>`,
		    :target:`GAIN_BLOCKS<doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator_1abecbd49761f0612f19c57e6f1e6325cdac165e2abfe45df8b7216509597a833e8>`,
		};

		// methods
	
		virtual
		void
		:ref:`apply<doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator_1a473eaf1e585804c08d77c91e004f93aa>`(
			int index,
			:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>` corner,
			:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` image,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask
			) = 0;
	
		void
		:ref:`feed<doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator_1ae6b0cc69a7bc53818ddea53eddb6bdba>`(
			const std::vector<:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`>& corners,
			const std::vector<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`>& images,
			const std::vector<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`>& masks
			);
	
		virtual
		void
		:ref:`feed<doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator_1a469ee24e889b645c2a0648658b356043>`(
			const std::vector<:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`>& corners,
			const std::vector<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`>& images,
			const std::vector<std::pair<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`, :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`>>& masks
			) = 0;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<ExposureCompensator>
		:target:`createDefault<doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator_1a72d0796c30091cdc686ad63ea46ebdc4>`(int type);
	};

	// direct descendants

	class :ref:`BlocksGainCompensator<doxid-d1/d73/classcv_1_1detail_1_1_blocks_gain_compensator>`;
	class :ref:`GainCompensator<doxid-d5/d68/classcv_1_1detail_1_1_gain_compensator>`;
	class :ref:`NoExposureCompensator<doxid-d9/db4/classcv_1_1detail_1_1_no_exposure_compensator>`;
.. _details-d0/d46/classcv_1_1detail_1_1_exposure_compensator:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Base class for all exposure compensators.

Methods
-------

.. index:: pair: function; apply
.. _doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator_1a473eaf1e585804c08d77c91e004f93aa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	apply(
		int index,
		:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>` corner,
		:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` image,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask
		) = 0

Compensate exposure in the specified image.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- index

		- Image index

	*
		- corner

		- Image top-left corner

	*
		- image

		- Image to process

	*
		- mask

		- Image mask

.. index:: pair: function; feed
.. _doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator_1ae6b0cc69a7bc53818ddea53eddb6bdba:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	feed(
		const std::vector<:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`>& corners,
		const std::vector<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`>& images,
		const std::vector<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`>& masks
		)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- corners

		- Source image top-left corners

	*
		- images

		- Source images

	*
		- masks

		- Image masks to update (second value in pair specifies the value which should be used to detect where image is)

.. index:: pair: function; feed
.. _doxid-d0/d46/classcv_1_1detail_1_1_exposure_compensator_1a469ee24e889b645c2a0648658b356043:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	feed(
		const std::vector<:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`>& corners,
		const std::vector<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`>& images,
		const std::vector<std::pair<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`, :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`>>& masks
		) = 0

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

