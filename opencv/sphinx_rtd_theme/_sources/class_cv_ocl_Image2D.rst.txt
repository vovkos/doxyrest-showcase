.. index:: pair: class; cv::ocl::Image2D
.. _doxid-dd/d69/classcv_1_1ocl_1_1_image2_d:

class cv::ocl::Image2D
======================

.. toctree::
	:hidden:

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <ocl.hpp>
	
	class Image2D
	{
	public:
		// construction
	
		:target:`Image2D<doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1aca032d597c124ac6de9fb99651d7dbde>`();
	
		:ref:`Image2D<doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1add72e2232b399e958dde24794b2ce798>`(
			const :ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`& src,
			bool norm = false,
			bool alias = false
			);
	
		:target:`Image2D<doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1a7db0945ce066ef26226773382a177e68>`(const Image2D& i);

		// methods
	
		Image2D&
		:target:`operator=<doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1a1034c0afe903b367b0f47c1916d9616f>`(const Image2D& i);
	
		void*
		:target:`ptr<doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1a26c16086f0106c08df0152871aca1e6d>`() const;
	
		static
		bool
		:ref:`canCreateAlias<doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1a8c9dd58298eed71239fbf5da38e79480>`(const :ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`& u);
	
		static
		bool
		:ref:`isFormatSupported<doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1ae864e2b519e2533923aafbba2bdd3f7d>`(
			int depth,
			int cn,
			bool norm
			);

	protected:
		// fields
	
		Impl* :target:`p<doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1aa1e8b47ab87b910997f8dea0b5706b4e>`;
	};
.. _details-dd/d69/classcv_1_1ocl_1_1_image2_d:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Construction
------------

.. index:: pair: function; Image2D
.. _doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1add72e2232b399e958dde24794b2ce798:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Image2D(
		const :ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`& src,
		bool norm = false,
		bool alias = false
		)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- :ref:`UMat <doxid-d8/d82/classcv_1_1_u_mat>` object from which to get image properties and data

	*
		- norm

		- flag to enable the use of normalized channel data types

	*
		- alias

		- flag indicating that the image should alias the src :ref:`UMat <doxid-d8/d82/classcv_1_1_u_mat>`. If true, changes to the image or src will be reflected in both objects.

Methods
-------

.. index:: pair: function; canCreateAlias
.. _doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1a8c9dd58298eed71239fbf5da38e79480:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	canCreateAlias(const :ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`& u)

Indicates if creating an aliased image should succeed. Depends on the underlying platform and the dimensions of the :ref:`UMat <doxid-d8/d82/classcv_1_1_u_mat>`.

.. index:: pair: function; isFormatSupported
.. _doxid-dd/d69/classcv_1_1ocl_1_1_image2_d_1ae864e2b519e2533923aafbba2bdd3f7d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	isFormatSupported(
		int depth,
		int cn,
		bool norm
		)

Indicates if the image format is supported.

