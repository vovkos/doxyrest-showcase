.. index:: pair: class; cvflann::PooledAllocator
.. _doxid-d0/d11/classcvflann_1_1_pooled_allocator:

class cvflann::PooledAllocator
==============================

.. toctree::
	:hidden:

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <allocator.h>
	
	class PooledAllocator
	{
	public:
		// fields
	
		int :target:`usedMemory<doxid-d0/d11/classcvflann_1_1_pooled_allocator_1a6e5510ec11212e0bb1b109b3af09e172>`;
		int :target:`wastedMemory<doxid-d0/d11/classcvflann_1_1_pooled_allocator_1af69edd6191138a563f9205d1db7bdd18>`;

		// construction
	
		:ref:`PooledAllocator<doxid-d0/d11/classcvflann_1_1_pooled_allocator_1a1e83a3e496a4c8dbb75a914e15aec3e7>`(int blockSize = :ref:`BLOCKSIZE<doxid-dc/d8c/namespacecvflann_1af6813d97f5ad15bea15d4c914d406e24>`);

		// methods
	
		template <typename T>
		T*
		:ref:`allocate<doxid-d0/d11/classcvflann_1_1_pooled_allocator_1aaf127cab57cd0e0f4d3b335efd8d3a67>`(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` count = 1);
	
		void*
		:ref:`allocateMemory<doxid-d0/d11/classcvflann_1_1_pooled_allocator_1add19ffd7aeb8146c7951071c51398c1b>`(int size);
	};
.. _details-d0/d11/classcvflann_1_1_pooled_allocator:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Construction
------------

.. index:: pair: function; PooledAllocator
.. _doxid-d0/d11/classcvflann_1_1_pooled_allocator_1a1e83a3e496a4c8dbb75a914e15aec3e7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	PooledAllocator(int blockSize = :ref:`BLOCKSIZE<doxid-dc/d8c/namespacecvflann_1af6813d97f5ad15bea15d4c914d406e24>`)

Default constructor. Initializes a new pool.

Methods
-------

.. index:: pair: function; allocate
.. _doxid-d0/d11/classcvflann_1_1_pooled_allocator_1aaf127cab57cd0e0f4d3b335efd8d3a67:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	T*
	allocate(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` count = 1)

Allocates (using this pool) a generic type T.

Params: count = number of instances to allocate. Returns: pointer (of type T\*) to memory buffer

.. index:: pair: function; allocateMemory
.. _doxid-d0/d11/classcvflann_1_1_pooled_allocator_1add19ffd7aeb8146c7951071c51398c1b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void*
	allocateMemory(int size)

Returns a pointer to a piece of new memory of the given size in bytes allocated from the pool.

