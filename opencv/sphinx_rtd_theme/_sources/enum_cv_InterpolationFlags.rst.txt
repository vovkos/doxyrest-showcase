.. index:: pair: enum; InterpolationFlags
.. _doxid-da/d54/group__imgproc__transform_1ga5bb5a1fea74ea38e1a5445ca803ff121:

enum cv::InterpolationFlags
===========================

Overview
~~~~~~~~

interpolation algorithm :ref:`More...<details-da/d54/group__imgproc__transform_1ga5bb5a1fea74ea38e1a5445ca803ff121>`

.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <imgproc.hpp>

	enum InterpolationFlags
	{
	    :ref:`INTER_NEAREST<doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121aa5521d8e080972c762467c45f3b70e6c>`      = 0,
	    :ref:`INTER_LINEAR<doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121ac97d8e4880d8b5d509e96825c7522deb>`       = 1,
	    :ref:`INTER_CUBIC<doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121a55e404e7fa9684af79fe9827f36a5dc1>`        = 2,
	    :ref:`INTER_AREA<doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121acf959dca2480cc694ca016b81b442ceb>`         = 3,
	    :ref:`INTER_LANCZOS4<doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121ac6c578caa97f2d00f82bac879cf3c781>`     = 4,
	    :ref:`INTER_MAX<doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121a49bb9f818707a31ae1f19158b60f7112>`          = 7,
	    :ref:`WARP_FILL_OUTLIERS<doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121a94cc44aa86159abcff4683ec6841b097>` = 8,
	    :ref:`WARP_INVERSE_MAP<doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121aa48be1c433186c4eae1ea86aa0ca75ba>`   = 16,
	};

.. _details-da/d54/group__imgproc__transform_1ga5bb5a1fea74ea38e1a5445ca803ff121:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

interpolation algorithm

Enum Values
-----------

.. index:: pair: enumvalue; INTER_NEAREST
.. _doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121aa5521d8e080972c762467c45f3b70e6c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	INTER_NEAREST

nearest neighbor interpolation

.. index:: pair: enumvalue; INTER_LINEAR
.. _doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121ac97d8e4880d8b5d509e96825c7522deb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	INTER_LINEAR

bilinear interpolation

.. index:: pair: enumvalue; INTER_CUBIC
.. _doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121a55e404e7fa9684af79fe9827f36a5dc1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	INTER_CUBIC

bicubic interpolation

.. index:: pair: enumvalue; INTER_AREA
.. _doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121acf959dca2480cc694ca016b81b442ceb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	INTER_AREA

resampling using pixel area relation. It may be a preferred method for image decimation, as it gives moire'-free results. But when the image is zoomed, it is similar to the INTER_NEAREST method.

.. index:: pair: enumvalue; INTER_LANCZOS4
.. _doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121ac6c578caa97f2d00f82bac879cf3c781:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	INTER_LANCZOS4

Lanczos interpolation over 8x8 neighborhood

.. index:: pair: enumvalue; INTER_MAX
.. _doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121a49bb9f818707a31ae1f19158b60f7112:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	INTER_MAX

mask for interpolation codes

.. index:: pair: enumvalue; WARP_FILL_OUTLIERS
.. _doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121a94cc44aa86159abcff4683ec6841b097:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	WARP_FILL_OUTLIERS

flag, fills all of the destination image pixels. If some of them correspond to outliers in the source image, they are set to zero

.. index:: pair: enumvalue; WARP_INVERSE_MAP
.. _doxid-da/d54/group__imgproc__transform_1gga5bb5a1fea74ea38e1a5445ca803ff121aa48be1c433186c4eae1ea86aa0ca75ba:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	WARP_INVERSE_MAP

flag, inverse transformation

For example, :ref:`cv::linearPolar <doxid-da/d54/group__imgproc__transform_1gaa38a6884ac8b6e0b9bed47939b5362f3>` or :ref:`cv::logPolar <doxid-da/d54/group__imgproc__transform_1gaec3a0b126a85b5ca2c667b16e0ae022d>` transforms:

* flag is **not** set: :math:`dst( \rho , \phi ) = src(x,y)`

* flag is set: :math:`dst(x,y) = src( \rho , \phi )`

