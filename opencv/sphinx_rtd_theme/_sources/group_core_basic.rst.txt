.. index:: pair: group; Basic structures
.. _doxid-dc/d84/group__core__basic:

Basic structures
================

.. toctree::
	:hidden:

	enum_cv_UMatUsageFlags.rst
	struct_cv_MatSize.rst
	struct_cv_MatStep.rst
	struct_cv_Param.rst
	struct_cv_ParamType.rst
	struct_cv_ParamType-2.rst
	struct_cv_ParamType-3.rst
	struct_cv_ParamType-4.rst
	struct_cv_ParamType-5.rst
	struct_cv_ParamType-6.rst
	struct_cv_ParamType-7.rst
	struct_cv_ParamType-8.rst
	struct_cv_ParamType-9.rst
	struct_cv_ParamType-10.rst
	struct_cv_ParamType-11.rst
	struct_cv_Ptr.rst
	struct_cv_UMatData.rst
	struct_cv_UMatDataAutoLock.rst
	class_cv_Algorithm.rst
	class_cv_Complex.rst
	class_cv_DMatch.rst
	class_cv_DataDepth.rst
	class_cv_DataType.rst
	class_cv_Formatted.rst
	class_cv_Formatter.rst
	class_cv_KeyPoint.rst
	class_cv_Mat.rst
	class_cv_MatAllocator.rst
	class_cv_MatCommaInitializer_.rst
	class_cv_MatConstIterator.rst
	class_cv_MatConstIterator_.rst
	class_cv_MatExpr.rst
	class_cv_MatIterator_.rst
	class_cv_MatOp.rst
	class_cv_Mat_.rst
	class_cv_Matx.rst
	class_cv_MatxCommaInitializer.rst
	class_cv_NAryMatIterator.rst
	class_cv_Point3_.rst
	class_cv_Point_.rst
	class_cv_Range.rst
	class_cv_Rect_.rst
	class_cv_RotatedRect.rst
	class_cv_Scalar_.rst
	class_cv_Size_.rst
	class_cv_SparseMat.rst
	class_cv_SparseMatConstIterator.rst
	class_cv_SparseMatConstIterator_.rst
	class_cv_SparseMatIterator.rst
	class_cv_SparseMatIterator_.rst
	class_cv_SparseMat_.rst
	class_cv_String.rst
	class_cv_TermCriteria.rst
	class_cv_TypeDepth.rst
	class_cv_TypeDepth-2.rst
	class_cv_TypeDepth-3.rst
	class_cv_TypeDepth-4.rst
	class_cv_TypeDepth-5.rst
	class_cv_TypeDepth-6.rst
	class_cv_TypeDepth-7.rst
	class_cv_TypeDepth-8.rst
	class_cv_UMat.rst
	class_cv_Vec.rst
	class_cv_VecCommaInitializer.rst
	class_cv__InputArray.rst
	class_cv__InputOutputArray.rst
	class_cv__OutputArray.rst

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`, 2> :target:`cv::Vec2b<doxid-dc/d84/group__core__basic_1ga595458e63aa1443ddd5c51fa71d70e2a>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`, 3> :target:`cv::Vec3b<doxid-dc/d84/group__core__basic_1ga7e6060c0b8d48459964df6e1eb524c03>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`, 4> :target:`cv::Vec4b<doxid-dc/d84/group__core__basic_1gac8e7c61fdf0d8d9f6e8be7c25dc36584>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<short, 2> :target:`cv::Vec2s<doxid-dc/d84/group__core__basic_1ga8c8616b035cf33c4b2b02fd7b89d6335>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<short, 3> :target:`cv::Vec3s<doxid-dc/d84/group__core__basic_1ga2a2f4663171710b47944de9a74383dd0>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<short, 4> :target:`cv::Vec4s<doxid-dc/d84/group__core__basic_1ga40acb05e3e183aabebc77a235389b582>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`, 2> :target:`cv::Vec2w<doxid-dc/d84/group__core__basic_1ga622811ee01673a858f41b4fbfd4b1043>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`, 3> :target:`cv::Vec3w<doxid-dc/d84/group__core__basic_1gac2ca2e7d93b15bc56b379fd5c42c0932>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`, 4> :target:`cv::Vec4w<doxid-dc/d84/group__core__basic_1ga50f51484537d86bd43ff14c681ee3abd>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<int, 2> :target:`cv::Vec2i<doxid-dc/d84/group__core__basic_1ga121402b88177c336b18945dd71d96ae0>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<int, 3> :target:`cv::Vec3i<doxid-dc/d84/group__core__basic_1ga55864bca2bbede9731df5baa0d1be763>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<int, 4> :target:`cv::Vec4i<doxid-dc/d84/group__core__basic_1ga94ce799099ae6cdd66685e3fd0cad7d7>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<int, 6> :target:`cv::Vec6i<doxid-dc/d84/group__core__basic_1gaf1e413135207def5004c5297bd2f5a61>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<int, 8> :target:`cv::Vec8i<doxid-dc/d84/group__core__basic_1ga3c0eb56d15c13ca6708f168919af3a6a>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<float, 2> :target:`cv::Vec2f<doxid-dc/d84/group__core__basic_1ga392bb4f8a6b9e0dde07f31dc28e73319>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<float, 3> :target:`cv::Vec3f<doxid-dc/d84/group__core__basic_1gab9e0ab642a3e01742916763173b72232>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<float, 4> :target:`cv::Vec4f<doxid-dc/d84/group__core__basic_1ga4f29b2178d21a471ee688b14d66d6567>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<float, 6> :target:`cv::Vec6f<doxid-dc/d84/group__core__basic_1ga74b819dd94c6a8c6f3d8cc39aeaa4992>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<double, 2> :target:`cv::Vec2d<doxid-dc/d84/group__core__basic_1gaf20d857c2077c986d3b303e3d58bbc54>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<double, 3> :target:`cv::Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<double, 4> :target:`cv::Vec4d<doxid-dc/d84/group__core__basic_1ga41502c424d368098331a348dc26141bf>`;
	typedef :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<double, 6> :target:`cv::Vec6d<doxid-dc/d84/group__core__basic_1ga07a801beb07134f7090e3d789ca7c324>`;
	typedef :ref:`Complex<doxid-da/d75/classcv_1_1_complex>`<double> :target:`cv::Complexd<doxid-dc/d84/group__core__basic_1ga3a5d93a0cbc1d360dbd3abf218bbb4ae>`;
	typedef :ref:`Complex<doxid-da/d75/classcv_1_1_complex>`<float> :target:`cv::Complexf<doxid-dc/d84/group__core__basic_1gaab0325d447419758daf5de162ffb051f>`;
	typedef const :ref:`_InputArray<doxid-d6/d3a/classcv_1_1___input_array>`& :target:`cv::InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>`;
	typedef :ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` :target:`cv::InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>`;
	typedef const :ref:`_InputOutputArray<doxid-df/d29/classcv_1_1___input_output_array>`& :target:`cv::InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>`;
	typedef :ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` :target:`cv::InputOutputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga8899575c0929a56ab8bdd01cf34ebcb1>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`> :target:`cv::Mat1b<doxid-dc/d84/group__core__basic_1ga1d355af1bc5c7241588bdb3600951515>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<double> :target:`cv::Mat1d<doxid-dc/d84/group__core__basic_1ga8dc8a9e248a8885bb3c61d35f07b61ed>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<float> :target:`cv::Mat1f<doxid-dc/d84/group__core__basic_1ga9747ac59f97cbb93ddd719c4fb3e2d5d>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<int> :target:`cv::Mat1i<doxid-dc/d84/group__core__basic_1ga87332e283de569e7bb029d4f4b401dcc>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<short> :target:`cv::Mat1s<doxid-dc/d84/group__core__basic_1ga0c456856506ff905ce035acec092ef9f>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`> :target:`cv::Mat1w<doxid-dc/d84/group__core__basic_1ga4895c2ba170884f13b4a1b1c80fea8ff>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec2b<doxid-dc/d84/group__core__basic_1ga595458e63aa1443ddd5c51fa71d70e2a>`> :target:`cv::Mat2b<doxid-dc/d84/group__core__basic_1gaf7e98a9c920ba16ba08b99bb53c52224>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec2d<doxid-dc/d84/group__core__basic_1gaf20d857c2077c986d3b303e3d58bbc54>`> :target:`cv::Mat2d<doxid-dc/d84/group__core__basic_1ga04278ad1d5a287e15c07239d6119fe0a>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec2f<doxid-dc/d84/group__core__basic_1ga392bb4f8a6b9e0dde07f31dc28e73319>`> :target:`cv::Mat2f<doxid-dc/d84/group__core__basic_1ga5d6e8769d5f6a8b21eb59137e643f095>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec2i<doxid-dc/d84/group__core__basic_1ga121402b88177c336b18945dd71d96ae0>`> :target:`cv::Mat2i<doxid-dc/d84/group__core__basic_1ga1ee6db17208ebd8bef5749d81267bf17>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec2s<doxid-dc/d84/group__core__basic_1ga8c8616b035cf33c4b2b02fd7b89d6335>`> :target:`cv::Mat2s<doxid-dc/d84/group__core__basic_1gaf945be4c317df201188e50e578e1fa75>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec2w<doxid-dc/d84/group__core__basic_1ga622811ee01673a858f41b4fbfd4b1043>`> :target:`cv::Mat2w<doxid-dc/d84/group__core__basic_1gaeb96ec2e3fd29bc27da746681e692b60>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec3b<doxid-dc/d84/group__core__basic_1ga7e6060c0b8d48459964df6e1eb524c03>`> :target:`cv::Mat3b<doxid-dc/d84/group__core__basic_1ga7198dbdcacbcde70f7c7d1209d57146a>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`> :target:`cv::Mat3d<doxid-dc/d84/group__core__basic_1gaf14b1aa52fc952072c0b653f916ffac8>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec3f<doxid-dc/d84/group__core__basic_1gab9e0ab642a3e01742916763173b72232>`> :target:`cv::Mat3f<doxid-dc/d84/group__core__basic_1ga8ee031423ba0ecb65fef2bc40abd970e>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec3i<doxid-dc/d84/group__core__basic_1ga55864bca2bbede9731df5baa0d1be763>`> :target:`cv::Mat3i<doxid-dc/d84/group__core__basic_1ga89d566f26821c717c666d31bcfc6bf35>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec3s<doxid-dc/d84/group__core__basic_1ga2a2f4663171710b47944de9a74383dd0>`> :target:`cv::Mat3s<doxid-dc/d84/group__core__basic_1ga4c3cec2bb940613dec561e59b0948801>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec3w<doxid-dc/d84/group__core__basic_1gac2ca2e7d93b15bc56b379fd5c42c0932>`> :target:`cv::Mat3w<doxid-dc/d84/group__core__basic_1ga5574e954e5acfdb4e1e03e1dbd8bab6a>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec4b<doxid-dc/d84/group__core__basic_1gac8e7c61fdf0d8d9f6e8be7c25dc36584>`> :target:`cv::Mat4b<doxid-dc/d84/group__core__basic_1ga38bd307d9a0cac4c335e648ef8b63a3e>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec4d<doxid-dc/d84/group__core__basic_1ga41502c424d368098331a348dc26141bf>`> :target:`cv::Mat4d<doxid-dc/d84/group__core__basic_1gab7781ee46e4a6148e037be23217201dc>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec4f<doxid-dc/d84/group__core__basic_1ga4f29b2178d21a471ee688b14d66d6567>`> :target:`cv::Mat4f<doxid-dc/d84/group__core__basic_1ga781cc98063ecb8e02e3576140714842f>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec4i<doxid-dc/d84/group__core__basic_1ga94ce799099ae6cdd66685e3fd0cad7d7>`> :target:`cv::Mat4i<doxid-dc/d84/group__core__basic_1ga8895fd82b424209f63bf9713fd5259a2>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec4s<doxid-dc/d84/group__core__basic_1ga40acb05e3e183aabebc77a235389b582>`> :target:`cv::Mat4s<doxid-dc/d84/group__core__basic_1ga7de7f3b26b41d7326e85ab2e5d9eb1c4>`;
	typedef :ref:`Mat_<doxid-d9/de0/classcv_1_1_mat__>`<:ref:`Vec4w<doxid-dc/d84/group__core__basic_1ga50f51484537d86bd43ff14c681ee3abd>`> :target:`cv::Mat4w<doxid-dc/d84/group__core__basic_1ga66c490bf66285c5cb0b5a21696d0cd03>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 1, 2> :target:`cv::Matx12d<doxid-dc/d84/group__core__basic_1ga2e67dac932ed81c0c90e3d658c0f7033>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 1, 2> :target:`cv::Matx12f<doxid-dc/d84/group__core__basic_1ga3a2cc9d733bf60e0200fa46196805153>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 1, 3> :target:`cv::Matx13d<doxid-dc/d84/group__core__basic_1ga765ff587743f231c87ffa708f6f76b96>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 1, 3> :target:`cv::Matx13f<doxid-dc/d84/group__core__basic_1ga0af99d4dbb40a817429f3039700f8a33>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 1, 4> :target:`cv::Matx14d<doxid-dc/d84/group__core__basic_1ga3a3e911d56f0e29d34cca18548bfdbbf>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 1, 4> :target:`cv::Matx14f<doxid-dc/d84/group__core__basic_1gaf1a460d05e81b372d31b50169ec289d6>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 1, 6> :target:`cv::Matx16d<doxid-dc/d84/group__core__basic_1ga3afc2be04e64e50bd58296878ec38a1b>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 1, 6> :target:`cv::Matx16f<doxid-dc/d84/group__core__basic_1ga7cf48157727556c640df2854f11ff91a>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 2, 1> :target:`cv::Matx21d<doxid-dc/d84/group__core__basic_1ga088ad84a55a0fa104ccb9f828dc38299>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 2, 1> :target:`cv::Matx21f<doxid-dc/d84/group__core__basic_1ga37e9c8ab7c9ccf91d4b512c656664886>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 2, 2> :target:`cv::Matx22d<doxid-dc/d84/group__core__basic_1ga10d0d07f3ac00f086e0fc532790ccc8c>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 2, 2> :target:`cv::Matx22f<doxid-dc/d84/group__core__basic_1ga8f480b4b705baac0f2bc1a7db43809ce>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 2, 3> :target:`cv::Matx23d<doxid-dc/d84/group__core__basic_1ga392a6836e5dbc164888f4e39c7d9d9af>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 2, 3> :target:`cv::Matx23f<doxid-dc/d84/group__core__basic_1gaa52e0258d92b0ff1be1644b061e65f66>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 3, 1> :target:`cv::Matx31d<doxid-dc/d84/group__core__basic_1ga778f9bbae8b0fe95271de44ac24083b0>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 3, 1> :target:`cv::Matx31f<doxid-dc/d84/group__core__basic_1ga1625ab2c70d7f06d259f245cb5f5f4f8>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 3, 2> :target:`cv::Matx32d<doxid-dc/d84/group__core__basic_1ga0d13e4d37f158c9e3f2d3a047849e626>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 3, 2> :target:`cv::Matx32f<doxid-dc/d84/group__core__basic_1ga6d016ebac929fa7bb2fa4f3ebdb9e953>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 3, 3> :target:`cv::Matx33d<doxid-dc/d84/group__core__basic_1gaff0100a48f049fb15584a4a657eae838>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 3, 3> :target:`cv::Matx33f<doxid-dc/d84/group__core__basic_1ga118a383f60581636c7c8ab180cbb155e>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 3, 4> :target:`cv::Matx34d<doxid-dc/d84/group__core__basic_1ga2ac31d988d1a8b5fb959d395dba89890>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 3, 4> :target:`cv::Matx34f<doxid-dc/d84/group__core__basic_1gaec7e9859876e96fe9ee16e01b6f359b1>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 4, 1> :target:`cv::Matx41d<doxid-dc/d84/group__core__basic_1gafb03ffa6748e6d6e53e997e4975c6404>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 4, 1> :target:`cv::Matx41f<doxid-dc/d84/group__core__basic_1ga9a196e7bdf588d7c685edbb330f74423>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 4, 3> :target:`cv::Matx43d<doxid-dc/d84/group__core__basic_1ga7db1c513c2dfacc11b83ed8a8c500304>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 4, 3> :target:`cv::Matx43f<doxid-dc/d84/group__core__basic_1gac6f34340fe75178e5a11a77150a3303d>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 4, 4> :target:`cv::Matx44d<doxid-dc/d84/group__core__basic_1ga366070cdc95233a6b6db521dfd99e713>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 4, 4> :target:`cv::Matx44f<doxid-dc/d84/group__core__basic_1gaaccfdd6e633076501c97b6ba4e792f53>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 6, 1> :target:`cv::Matx61d<doxid-dc/d84/group__core__basic_1ga95ed8b37f47393d8d9a50d9571c7be48>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 6, 1> :target:`cv::Matx61f<doxid-dc/d84/group__core__basic_1ga449bf946575de9dc943e74566a0c5e7e>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<double, 6, 6> :target:`cv::Matx66d<doxid-dc/d84/group__core__basic_1gafeab5cbf4078b280e11c59338435cd5c>`;
	typedef :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<float, 6, 6> :target:`cv::Matx66f<doxid-dc/d84/group__core__basic_1gaf1482aa6880dc74dad16683fd0ecc11e>`;
	typedef const :ref:`_OutputArray<doxid-d4/d46/classcv_1_1___output_array>`& :target:`cv::OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>`;
	typedef :ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` :target:`cv::OutputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga889a09549b98223016170d9b613715de>`;
	typedef :ref:`Point2i<doxid-dc/d84/group__core__basic_1ga0f70b52f0c0b119f7ed2448ffebdc144>` :target:`cv::Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`;
	typedef :ref:`Point_<doxid-d9/d87/classcv_1_1_point__>`<double> :target:`cv::Point2d<doxid-dc/d84/group__core__basic_1ga32986d8c6fd05949688352abd112509f>`;
	typedef :ref:`Point_<doxid-d9/d87/classcv_1_1_point__>`<float> :target:`cv::Point2f<doxid-dc/d84/group__core__basic_1ga7d080aa40de011e4410bca63385ffe2a>`;
	typedef :ref:`Point_<doxid-d9/d87/classcv_1_1_point__>`<int> :target:`cv::Point2i<doxid-dc/d84/group__core__basic_1ga0f70b52f0c0b119f7ed2448ffebdc144>`;
	typedef :ref:`Point_<doxid-d9/d87/classcv_1_1_point__>`<:ref:`int64<doxid-d1/d1b/group__core__hal__interface_1ga7cde0074dfd288f2d70c0e035dacb28a>`> :target:`cv::Point2l<doxid-dc/d84/group__core__basic_1ga2f6c21f7cbd3a08bfc6467fd20df2f7e>`;
	typedef :ref:`Point3_<doxid-d4/d29/classcv_1_1_point3__>`<double> :target:`cv::Point3d<doxid-dc/d84/group__core__basic_1ga17f8af95b76535bd387f4909850c8810>`;
	typedef :ref:`Point3_<doxid-d4/d29/classcv_1_1_point3__>`<float> :target:`cv::Point3f<doxid-dc/d84/group__core__basic_1ga3d79ceeb4419bccd0308dfdf1cd31435>`;
	typedef :ref:`Point3_<doxid-d4/d29/classcv_1_1_point3__>`<int> :target:`cv::Point3i<doxid-dc/d84/group__core__basic_1gac4ae8f2fb37ecb4b5d9268f17e46a18e>`;
	typedef :ref:`Rect2i<doxid-dc/d84/group__core__basic_1gaa87c8f580952d28b4127261994bce7d8>` :target:`cv::Rect<doxid-dc/d84/group__core__basic_1ga11d95de507098e90bad732b9345402e8>`;
	typedef :ref:`Rect_<doxid-d6/db0/classcv_1_1_rect__>`<double> :target:`cv::Rect2d<doxid-dc/d84/group__core__basic_1ga894fe0940d40d4d65f008a2ca4e616bd>`;
	typedef :ref:`Rect_<doxid-d6/db0/classcv_1_1_rect__>`<float> :target:`cv::Rect2f<doxid-dc/d84/group__core__basic_1ga2d6c1acbbb651cf626f138748aac3d02>`;
	typedef :ref:`Rect_<doxid-d6/db0/classcv_1_1_rect__>`<int> :target:`cv::Rect2i<doxid-dc/d84/group__core__basic_1gaa87c8f580952d28b4127261994bce7d8>`;
	typedef :ref:`Scalar_<doxid-d7/d13/classcv_1_1_scalar__>`<double> :target:`cv::Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>`;
	typedef :ref:`Size2i<doxid-dc/d84/group__core__basic_1ga5ef7f5978948e0cb3c3a3d4172594aec>` :target:`cv::Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`;
	typedef :ref:`Size_<doxid-dd/da0/classcv_1_1_size__>`<double> :target:`cv::Size2d<doxid-dc/d84/group__core__basic_1gaff96e5bec8019ca9917fd1e4c0cf8267>`;
	typedef :ref:`Size_<doxid-dd/da0/classcv_1_1_size__>`<float> :target:`cv::Size2f<doxid-dc/d84/group__core__basic_1gab34496d2466b5f69930ab74c70f117d4>`;
	typedef :ref:`Size_<doxid-dd/da0/classcv_1_1_size__>`<int> :target:`cv::Size2i<doxid-dc/d84/group__core__basic_1ga5ef7f5978948e0cb3c3a3d4172594aec>`;
	typedef :ref:`Size_<doxid-dd/da0/classcv_1_1_size__>`<:ref:`int64<doxid-d1/d1b/group__core__hal__interface_1ga7cde0074dfd288f2d70c0e035dacb28a>`> :target:`cv::Size2l<doxid-dc/d84/group__core__basic_1ga153b6b90ce30f84239c9a39613e836d3>`;

	// enums

	enum
	{
	    :target:`cv::@2::ACCESS_READ<doxid-dc/d84/group__core__basic_1gga399140175919325d93e19dc058339ec8a39d5f615d02cac084ab1dd0cb4f7c221>`  =1<<24,
	    :target:`cv::@2::ACCESS_WRITE<doxid-dc/d84/group__core__basic_1gga399140175919325d93e19dc058339ec8afcb8f7013ace1726cd1bbeea800bc7b6>` =1<<25,
	    :target:`cv::@2::ACCESS_RW<doxid-dc/d84/group__core__basic_1gga399140175919325d93e19dc058339ec8af44732c797cd59f5940e426ecd62f45f>`    =3<<24,
	    :target:`cv::@2::ACCESS_MASK<doxid-dc/d84/group__core__basic_1gga399140175919325d93e19dc058339ec8adc26a0b8f5374d205eb2e30c0f7f90fc>`  =ACCESS_RW,
	    :target:`cv::@2::ACCESS_FAST<doxid-dc/d84/group__core__basic_1gga399140175919325d93e19dc058339ec8a0a404dec4617d7d1fe1f14767b8e379b>`  =1<<26,
	};

	enum :ref:`cv::UMatUsageFlags<doxid-dc/d84/group__core__basic_1ga5681439dda418431eb0a672697135ed2>`;

	// structs

	struct :ref:`cv::MatSize<doxid-d3/d31/structcv_1_1_mat_size>`;
	struct :ref:`cv::MatStep<doxid-dc/d72/structcv_1_1_mat_step>`;
	struct :ref:`cv::Param<doxid-df/d5a/structcv_1_1_param>`;

	template <>
	struct :ref:`cv::ParamType<uchar><doxid-d3/dbd/structcv_1_1_param_type_3_01uchar_01_4>`;

	template <>
	struct :ref:`cv::ParamType<uint64><doxid-d1/dc5/structcv_1_1_param_type_3_01uint64_01_4>`;

	template <>
	struct :ref:`cv::ParamType<unsigned><doxid-d8/d42/structcv_1_1_param_type_3_01unsigned_01_4>`;

	template <>
	struct :ref:`cv::ParamType<String><doxid-df/d84/structcv_1_1_param_type_3_01_string_01_4>`;

	template <>
	struct :ref:`cv::ParamType<std::vector<Mat>><doxid-da/ddd/structcv_1_1_param_type_3_01std_1_1vector_3_01_mat_01_4_01_4>`;

	template <>
	struct :ref:`cv::ParamType<Mat><doxid-dc/d39/structcv_1_1_param_type_3_01_mat_01_4>`;

	template <>
	struct :ref:`cv::ParamType<float><doxid-d4/d0b/structcv_1_1_param_type_3_01float_01_4>`;

	template <typename _Tp>
	struct :ref:`cv::ParamType<doxid-d8/d92/structcv_1_1_param_type>`;

	template <>
	struct :ref:`cv::ParamType<bool><doxid-d4/de5/structcv_1_1_param_type_3_01bool_01_4>`;

	template <>
	struct :ref:`cv::ParamType<Algorithm><doxid-d5/d92/structcv_1_1_param_type_3_01_algorithm_01_4>`;

	template <>
	struct :ref:`cv::ParamType<double><doxid-d8/d82/structcv_1_1_param_type_3_01double_01_4>`;

	template <typename T>
	struct :ref:`cv::Ptr<doxid-d2/d56/structcv_1_1_ptr>`;

	struct :ref:`cv::UMatData<doxid-dd/d13/structcv_1_1_u_mat_data>`;
	struct :ref:`cv::UMatDataAutoLock<doxid-d4/d10/structcv_1_1_u_mat_data_auto_lock>`;

	// classes

	class :ref:`cv::Algorithm<doxid-d1/d41/classcv_1_1_algorithm>`;

	template <typename _Tp>
	class :ref:`cv::Complex<doxid-da/d75/classcv_1_1_complex>`;

	class :ref:`cv::DMatch<doxid-d9/db0/classcv_1_1_d_match>`;

	template <typename _Tp>
	class :ref:`cv::DataDepth<doxid-df/daa/classcv_1_1_data_depth>`;

	template <typename _Tp>
	class :ref:`cv::DataType<doxid-da/da2/classcv_1_1_data_type>`;

	class :ref:`cv::Formatted<doxid-d9/d30/classcv_1_1_formatted>`;
	class :ref:`cv::Formatter<doxid-d6/d6c/classcv_1_1_formatter>`;
	class :ref:`cv::KeyPoint<doxid-de/df1/classcv_1_1_key_point>`;
	class :ref:`cv::Mat<doxid-db/de6/classcv_1_1_mat>`;
	class :ref:`cv::MatAllocator<doxid-d4/dee/classcv_1_1_mat_allocator>`;

	template <typename _Tp>
	class :ref:`cv::MatCommaInitializer_<doxid-d7/dfc/classcv_1_1_mat_comma_initializer__>`;

	class :ref:`cv::MatConstIterator<doxid-d8/da0/classcv_1_1_mat_const_iterator>`;

	template <typename _Tp>
	class :ref:`cv::MatConstIterator_<doxid-db/dbf/classcv_1_1_mat_const_iterator__>`;

	class :ref:`cv::MatExpr<doxid-d9/ddc/classcv_1_1_mat_expr>`;

	template <typename _Tp>
	class :ref:`cv::MatIterator_<doxid-da/d1f/classcv_1_1_mat_iterator__>`;

	class :ref:`cv::MatOp<doxid-da/d07/classcv_1_1_mat_op>`;

	template <typename _Tp>
	class :ref:`cv::Mat_<doxid-d9/de0/classcv_1_1_mat__>`;

	template <
		typename _Tp,
		int m,
		int n
		>
	class :ref:`cv::Matx<doxid-db/d15/classcv_1_1_matx>`;

	template <
		typename _Tp,
		int m,
		int n
		>
	class :ref:`cv::MatxCommaInitializer<doxid-d0/de3/classcv_1_1_matx_comma_initializer>`;

	class :ref:`cv::NAryMatIterator<doxid-d1/ddb/classcv_1_1_n_ary_mat_iterator>`;

	template <typename _Tp>
	class :ref:`cv::Point3_<doxid-d4/d29/classcv_1_1_point3__>`;

	template <typename _Tp>
	class :ref:`cv::Point_<doxid-d9/d87/classcv_1_1_point__>`;

	class :ref:`cv::Range<doxid-d7/d65/classcv_1_1_range>`;

	template <typename _Tp>
	class :ref:`cv::Rect_<doxid-d6/db0/classcv_1_1_rect__>`;

	class :ref:`cv::RotatedRect<doxid-d5/d1f/classcv_1_1_rotated_rect>`;

	template <typename _Tp>
	class :ref:`cv::Scalar_<doxid-d7/d13/classcv_1_1_scalar__>`;

	template <typename _Tp>
	class :ref:`cv::Size_<doxid-dd/da0/classcv_1_1_size__>`;

	class :ref:`cv::SparseMat<doxid-d5/d29/classcv_1_1_sparse_mat>`;
	class :ref:`cv::SparseMatConstIterator<doxid-db/dc8/classcv_1_1_sparse_mat_const_iterator>`;

	template <typename _Tp>
	class :ref:`cv::SparseMatConstIterator_<doxid-db/d01/classcv_1_1_sparse_mat_const_iterator__>`;

	class :ref:`cv::SparseMatIterator<doxid-dd/d91/classcv_1_1_sparse_mat_iterator>`;

	template <typename _Tp>
	class :ref:`cv::SparseMatIterator_<doxid-d1/d10/classcv_1_1_sparse_mat_iterator__>`;

	template <typename _Tp>
	class :ref:`cv::SparseMat_<doxid-df/d90/classcv_1_1_sparse_mat__>`;

	class :ref:`cv::String<doxid-dc/d0e/classcv_1_1_string>`;
	class :ref:`cv::TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`;

	template <>
	class :ref:`cv::TypeDepth<CV_16U><doxid-d8/d57/classcv_1_1_type_depth_3_01_c_v__16_u_01_4>`;

	template <>
	class :ref:`cv::TypeDepth<CV_32F><doxid-d4/d8c/classcv_1_1_type_depth_3_01_c_v__32_f_01_4>`;

	template <>
	class :ref:`cv::TypeDepth<CV_32S><doxid-dc/db2/classcv_1_1_type_depth_3_01_c_v__32_s_01_4>`;

	template <>
	class :ref:`cv::TypeDepth<CV_16S><doxid-dd/d60/classcv_1_1_type_depth_3_01_c_v__16_s_01_4>`;

	template <>
	class :ref:`cv::TypeDepth<CV_64F><doxid-d0/dce/classcv_1_1_type_depth_3_01_c_v__64_f_01_4>`;

	template <>
	class :ref:`cv::TypeDepth<CV_8U><doxid-d2/dda/classcv_1_1_type_depth_3_01_c_v__8_u_01_4>`;

	template <int _depth>
	class :ref:`cv::TypeDepth<doxid-d7/df0/classcv_1_1_type_depth>`;

	template <>
	class :ref:`cv::TypeDepth<CV_8S><doxid-db/dd9/classcv_1_1_type_depth_3_01_c_v__8_s_01_4>`;

	class :ref:`cv::UMat<doxid-d8/d82/classcv_1_1_u_mat>`;

	template <
		typename _Tp,
		int cn
		>
	class :ref:`cv::Vec<doxid-db/d93/classcv_1_1_vec>`;

	template <
		typename _Tp,
		int m
		>
	class :ref:`cv::VecCommaInitializer<doxid-d5/d71/classcv_1_1_vec_comma_initializer>`;

	class :ref:`cv::_InputArray<doxid-d6/d3a/classcv_1_1___input_array>`;
	class :ref:`cv::_InputOutputArray<doxid-df/d29/classcv_1_1___input_output_array>`;
	class :ref:`cv::_OutputArray<doxid-d4/d46/classcv_1_1___output_array>`;

	// global functions

	template <
		typename _Tp,
		int m
		>
	static
	double
	:target:`cv::determinant<doxid-dc/d84/group__core__basic_1ga06b8ec936c3cbc9502d76c7818053b41>`(const :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<_Tp, m, m>& a);

	template <typename T>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1ga94b059075f41314c83dd2a2758c81acd>`();

	template <
		typename T,
		typename A1
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1ga328d2fd91d910aba4906b5ff61935035>`(const A1& a1);

	template <
		typename T,
		typename A1,
		typename A2
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1ga7ce662eb18b401a1c0290da0144ed272>`(
		const A1& a1,
		const A2& a2
		);

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1ga155758e1662967361cb6b917e93b9780>`(
		const A1& a1,
		const A2& a2,
		const A3& a3
		);

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1ga7080437d20a4004283214004b638d903>`(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4
		);

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1ga52e866bc56af623819d03c74ea28ad64>`(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5
		);

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5,
		typename A6
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1gab5d59b36294a84887c39c5dc6c4dc3fd>`(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5,
		const A6& a6
		);

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5,
		typename A6,
		typename A7
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1ga9ffcebbabe70bec06a59a05fe3bbd240>`(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5,
		const A6& a6,
		const A7& a7
		);

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5,
		typename A6,
		typename A7,
		typename A8
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1ga3c402ea11a5c66020d654f5cd6e5459f>`(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5,
		const A6& a6,
		const A7& a7,
		const A8& a8
		);

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5,
		typename A6,
		typename A7,
		typename A8,
		typename A9
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1gacc17d1528ff828030518b7c2c0dc3781>`(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5,
		const A6& a6,
		const A7& a7,
		const A8& a8,
		const A9& a9
		);

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5,
		typename A6,
		typename A7,
		typename A8,
		typename A9,
		typename A10
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	:ref:`cv::makePtr<doxid-dc/d84/group__core__basic_1ga602b5f080b83121b475cb48357cc3674>`(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5,
		const A6& a6,
		const A7& a7,
		const A8& a8,
		const A9& a9,
		const A10& a10
		);

	:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>`
	:target:`cv::noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`();

	template <
		typename _Tp,
		int m,
		int n
		>
	static
	double
	:target:`cv::norm<doxid-dc/d84/group__core__basic_1ga4e556cb8ad35a643a1ea66e035711bb9>`(const :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<_Tp, m, n>& M);

	template <
		typename _Tp,
		int m,
		int n
		>
	static
	double
	:target:`cv::norm<doxid-dc/d84/group__core__basic_1ga7199682a392fe6788e4edc4eeb5a4b65>`(
		const :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<_Tp, m, n>& M,
		int normType
		);

	template <
		typename _Tp,
		int cn
		>
	static
	:ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<_Tp, cn>
	:target:`cv::normalize<doxid-dc/d84/group__core__basic_1ga1b6a396a456c8b6c6e4afd8591560d80>`(const :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<_Tp, cn>& v);

	template <typename T>
	bool
	:target:`cv::operator!=<doxid-dc/d84/group__core__basic_1ga966dba3e25c0253fd7c631235db1c88d>`(
		const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>& ptr1,
		const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>& ptr2
		);

	static
	:ref:`String<doxid-dc/d0e/classcv_1_1_string>`&
	:target:`cv::operator<<<doxid-dc/d84/group__core__basic_1gaf47f069bbc73929ec5fd73ce9947339a>`(
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`& out,
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`Formatted<doxid-d9/d30/classcv_1_1_formatted>`> fmtd
		);

	static
	:ref:`String<doxid-dc/d0e/classcv_1_1_string>`&
	:target:`cv::operator<<<doxid-dc/d84/group__core__basic_1ga3557054d1f0f079cf5e60a44851e4c70>`(
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`& out,
		const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& mtx
		);

	template <typename T>
	bool
	:ref:`cv::operator==<doxid-dc/d84/group__core__basic_1gaede1220ac321bc2a287114753c4035ad>`(
		const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>& ptr1,
		const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>& ptr2
		);

	template <typename T>
	void
	:ref:`cv::swap<doxid-dc/d84/group__core__basic_1ga84591dbf93ab723f1aa900440fdafe15>`(
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>& ptr1,
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>& ptr2
		);

	template <
		typename _Tp,
		int m,
		int n
		>
	static
	double
	:target:`cv::trace<doxid-dc/d84/group__core__basic_1ga36ad18631177b097a38198c4e83c6e2b>`(const :ref:`Matx<doxid-db/d15/classcv_1_1_matx>`<_Tp, m, n>& a);

.. _details-dc/d84/group__core__basic:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Global Functions
----------------

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1ga94b059075f41314c83dd2a2758c81acd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr()

``makePtr<T>(...)`` is equivalent to ``:ref:`Ptr <doxid-d2/d56/structcv_1_1_ptr>`<T>(new T(...))``. It is shorter than the latter, and it's marginally safer than using a constructor or :ref:`Ptr::reset <doxid-d2/d56/structcv_1_1_ptr_1a8100350b806a4e664cbec3445b8d30a0>`, since it ensures that the owned pointer is new and thus not owned by any other :ref:`Ptr <doxid-d2/d56/structcv_1_1_ptr>` instance. Unfortunately, perfect forwarding is impossible to implement in C++03, and so makePtr is limited to constructors of T that have up to 10 arguments, none of which are non-const references.

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1ga328d2fd91d910aba4906b5ff61935035:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename T,
		typename A1
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr(const A1& a1)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1ga7ce662eb18b401a1c0290da0144ed272:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename T,
		typename A1,
		typename A2
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr(
		const A1& a1,
		const A2& a2
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1ga155758e1662967361cb6b917e93b9780:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr(
		const A1& a1,
		const A2& a2,
		const A3& a3
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1ga7080437d20a4004283214004b638d903:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1ga52e866bc56af623819d03c74ea28ad64:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1gab5d59b36294a84887c39c5dc6c4dc3fd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5,
		typename A6
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5,
		const A6& a6
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1ga9ffcebbabe70bec06a59a05fe3bbd240:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5,
		typename A6,
		typename A7
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5,
		const A6& a6,
		const A7& a7
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1ga3c402ea11a5c66020d654f5cd6e5459f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5,
		typename A6,
		typename A7,
		typename A8
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5,
		const A6& a6,
		const A7& a7,
		const A8& a8
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1gacc17d1528ff828030518b7c2c0dc3781:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5,
		typename A6,
		typename A7,
		typename A8,
		typename A9
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5,
		const A6& a6,
		const A7& a7,
		const A8& a8,
		const A9& a9
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; makePtr
.. _doxid-dc/d84/group__core__basic_1ga602b5f080b83121b475cb48357cc3674:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename T,
		typename A1,
		typename A2,
		typename A3,
		typename A4,
		typename A5,
		typename A6,
		typename A7,
		typename A8,
		typename A9,
		typename A10
		>
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>
	cv::makePtr(
		const A1& a1,
		const A2& a2,
		const A3& a3,
		const A4& a4,
		const A5& a5,
		const A6& a6,
		const A7& a7,
		const A8& a8,
		const A9& a9,
		const A10& a10
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; operator==
.. _doxid-dc/d84/group__core__basic_1gaede1220ac321bc2a287114753c4035ad:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	bool
	cv::operator==(
		const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>& ptr1,
		const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>& ptr2
		)

Return whether ptr1.get() and ptr2.get() are equal and not equal, respectively.

.. index:: pair: function; swap
.. _doxid-dc/d84/group__core__basic_1ga84591dbf93ab723f1aa900440fdafe15:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	void
	cv::swap(
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>& ptr1,
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<T>& ptr2
		)

Equivalent to ptr1.swap(ptr2). Provided to help write generic algorithms.

