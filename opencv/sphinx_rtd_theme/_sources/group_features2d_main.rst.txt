.. index:: pair: group; Feature Detection and Description
.. _doxid-d5/d51/group__features2d__main:

Feature Detection and Description
=================================

.. toctree::
	:hidden:

	class_cv_AKAZE.rst
	class_cv_AgastFeatureDetector.rst
	class_cv_BRISK.rst
	class_cv_FastFeatureDetector.rst
	class_cv_GFTTDetector.rst
	class_cv_KAZE.rst
	class_cv_MSER.rst
	class_cv_ORB.rst
	class_cv_SimpleBlobDetector.rst

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// classes

	class :ref:`cv::AKAZE<doxid-d4/df2/classcv_1_1_a_k_a_z_e>`;
	class :ref:`cv::AgastFeatureDetector<doxid-d6/d6d/classcv_1_1_agast_feature_detector>`;
	class :ref:`cv::BRISK<doxid-dc/d3f/classcv_1_1_b_r_i_s_k>`;
	class :ref:`cv::FastFeatureDetector<doxid-d3/db7/classcv_1_1_fast_feature_detector>`;
	class :ref:`cv::GFTTDetector<doxid-d8/d7b/classcv_1_1_g_f_t_t_detector>`;
	class :ref:`cv::KAZE<doxid-d1/d7e/classcv_1_1_k_a_z_e>`;
	class :ref:`cv::MSER<doxid-d5/daa/classcv_1_1_m_s_e_r>`;
	class :ref:`cv::ORB<doxid-dc/dca/classcv_1_1_o_r_b>`;
	class :ref:`cv::SimpleBlobDetector<doxid-df/d17/classcv_1_1_simple_blob_detector>`;

	// global functions

	void
	:ref:`cv::AGAST<doxid-d5/d51/group__features2d__main_1gaf7e1ba1ae884b59bd24338b741b0c4ac>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
		int threshold,
		bool nonmaxSuppression = true
		);

	void
	:ref:`cv::AGAST<doxid-d5/d51/group__features2d__main_1gaae379d8d4fffa0aa3c37ebf17fe6e07c>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
		int threshold,
		bool nonmaxSuppression,
		int type
		);

	void
	:ref:`cv::FAST<doxid-d5/d51/group__features2d__main_1ga816d870cbdca71c6790c71bdf17df099>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
		int threshold,
		bool nonmaxSuppression = true
		);

	void
	:ref:`cv::FAST<doxid-d5/d51/group__features2d__main_1gaf3185c9bd7496ba7a629add75fb371ad>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
		int threshold,
		bool nonmaxSuppression,
		int type
		);

.. _details-d5/d51/group__features2d__main:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Global Functions
----------------

.. index:: pair: function; AGAST
.. _doxid-d5/d51/group__features2d__main_1gaf7e1ba1ae884b59bd24338b741b0c4ac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::AGAST(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
		int threshold,
		bool nonmaxSuppression = true
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; AGAST
.. _doxid-d5/d51/group__features2d__main_1gaae379d8d4fffa0aa3c37ebf17fe6e07c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::AGAST(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
		int threshold,
		bool nonmaxSuppression,
		int type
		)

Detects corners using the AGAST algorithm.

For non-Intel platforms, there is a tree optimised variant of AGAST with same numerical results. The 32-bit binary tree tables were generated automatically from original code using perl script. The perl script and examples of tree generation are placed in features2d/doc folder. Detects corners using the AGAST algorithm by :ref:`[52] <doxid-d0/de3/citelist_1CITEREF_mair2010_agast>`.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- image

		- grayscale image where keypoints (corners) are detected.

	*
		- keypoints

		- keypoints detected on the image.

	*
		- threshold

		- threshold on difference between intensity of the central pixel and pixels of a circle around this pixel.

	*
		- nonmaxSuppression

		- if true, non-maximum suppression is applied to detected corners (keypoints).

	*
		- type

		- one of the four neighborhoods as defined in the paper: :ref:`AgastFeatureDetector::AGAST_5_8 <doxid-d6/d6d/classcv_1_1_agast_feature_detector_1aa467aa45e824c0dc8a9a2033c47fe987a869159c4b4ad44e678903b55def5dff9>`, :ref:`AgastFeatureDetector::AGAST_7_12d <doxid-d6/d6d/classcv_1_1_agast_feature_detector_1aa467aa45e824c0dc8a9a2033c47fe987a0a21d49a821004ebc1f39e2e471ba814>`, :ref:`AgastFeatureDetector::AGAST_7_12s <doxid-d6/d6d/classcv_1_1_agast_feature_detector_1aa467aa45e824c0dc8a9a2033c47fe987a37001a3a3ce04301e16a4e16732e4105>`, :ref:`AgastFeatureDetector::OAST_9_16 <doxid-d6/d6d/classcv_1_1_agast_feature_detector_1aa467aa45e824c0dc8a9a2033c47fe987a845a73eb152969fd46ef6b952856e82d>`

.. index:: pair: function; FAST
.. _doxid-d5/d51/group__features2d__main_1ga816d870cbdca71c6790c71bdf17df099:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::FAST(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
		int threshold,
		bool nonmaxSuppression = true
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; FAST
.. _doxid-d5/d51/group__features2d__main_1gaf3185c9bd7496ba7a629add75fb371ad:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::FAST(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		std::vector<:ref:`KeyPoint<doxid-de/df1/classcv_1_1_key_point>`>& keypoints,
		int threshold,
		bool nonmaxSuppression,
		int type
		)

Detects corners using the FAST algorithm.

Detects corners using the FAST algorithm by :ref:`[71] <doxid-d0/de3/citelist_1CITEREF_Rosten06>`.

In Python API, types are given as cv2.FAST_FEATURE_DETECTOR_TYPE_5_8, cv2.FAST_FEATURE_DETECTOR_TYPE_7_12 and cv2.FAST_FEATURE_DETECTOR_TYPE_9_16. For corner detection, use cv2.FAST.detect() method.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- image

		- grayscale image where keypoints (corners) are detected.

	*
		- keypoints

		- keypoints detected on the image.

	*
		- threshold

		- threshold on difference between intensity of the central pixel and pixels of a circle around this pixel.

	*
		- nonmaxSuppression

		- if true, non-maximum suppression is applied to detected corners (keypoints).

	*
		- type

		- one of the three neighborhoods as defined in the paper: :ref:`FastFeatureDetector::TYPE_9_16 <doxid-d3/db7/classcv_1_1_fast_feature_detector_1a055958da59bb306a25f2b05c54e58a31a7a1af523673c330d43ec47081bcc55e3>`, :ref:`FastFeatureDetector::TYPE_7_12 <doxid-d3/db7/classcv_1_1_fast_feature_detector_1a055958da59bb306a25f2b05c54e58a31af4be71a038c46401a0b431fcc994900d>`, :ref:`FastFeatureDetector::TYPE_5_8 <doxid-d3/db7/classcv_1_1_fast_feature_detector_1a055958da59bb306a25f2b05c54e58a31a16aa140499fc16449dfae5f095dc475c>`

