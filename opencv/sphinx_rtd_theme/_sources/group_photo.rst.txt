.. index:: pair: group; Computational Photography
.. _doxid-d1/d0d/group__photo:

Computational Photography
=========================

.. toctree::
	:hidden:

	group_photo_c.rst
	group_photo_denoise.rst
	group_photo_hdr.rst
	group_photo_render.rst
	group_photo_clone.rst

Overview
~~~~~~~~



|	:ref:`C API<doxid-d3/d40/group__photo__c>`
|	:ref:`Denoising<doxid-d1/d79/group__photo__denoise>`
|	:ref:`HDR imaging<doxid-d6/df5/group__photo__hdr>`
|	:ref:`Non-Photorealistic Rendering<doxid-df/dac/group__photo__render>`
|	:ref:`Seamless Cloning<doxid-df/da0/group__photo__clone>`



.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// enums

	enum
	{
	    :target:`cv::@170::INPAINT_NS<doxid-d1/d0d/group__photo_1gga9629a7df23f906e22eef2d019d55d9aba05e763003a805e6c11c673a9f4ba7d07>`    = 0,
	    :target:`cv::@170::INPAINT_TELEA<doxid-d1/d0d/group__photo_1gga9629a7df23f906e22eef2d019d55d9aba892824c38e258feb5e72f308a358d52e>` = 1,
	};

	enum
	{
	    :target:`cv::@171::NORMAL_CLONE<doxid-d1/d0d/group__photo_1gga9f9442886faf1db57433ce1f2fae2123a8e6473804ceaa0e8bd0e5828a05235a7>`        = 1,
	    :target:`cv::@171::MIXED_CLONE<doxid-d1/d0d/group__photo_1gga9f9442886faf1db57433ce1f2fae2123a9aeff931a5d5d18b094397f0ca5bb85f>`         = 2,
	    :target:`cv::@171::MONOCHROME_TRANSFER<doxid-d1/d0d/group__photo_1gga9f9442886faf1db57433ce1f2fae2123a8a64bb74d3ef61a73cf755f3a881fe70>` = 3,
	};

	enum
	{
	    :target:`cv::@172::RECURS_FILTER<doxid-d1/d0d/group__photo_1ggac007e35ce97fe229513dbfd407d605e3a54c35da37a520d619d8a149d9b463d73>`   = 1,
	    :target:`cv::@172::NORMCONV_FILTER<doxid-d1/d0d/group__photo_1ggac007e35ce97fe229513dbfd407d605e3aaab1c1e6dc436a25e1f5506fb6432d4e>` = 2,
	};

	// global functions

	void
	:ref:`cv::decolor<doxid-d1/d0d/group__photo_1ga4864d4c007bda5dacdc5e9d4ed7e222c>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` grayscale,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` color_boost
		);

	void
	:ref:`cv::inpaint<doxid-d1/d0d/group__photo_1gaedd30dfa0214fec4c88138b51d678085>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` inpaintMask,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		double inpaintRadius,
		int flags
		);

.. _details-d1/d0d/group__photo:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Global Functions
----------------

.. index:: pair: function; decolor
.. _doxid-d1/d0d/group__photo_1ga4864d4c007bda5dacdc5e9d4ed7e222c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::decolor(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` grayscale,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` color_boost
		)

Transforms a color image to a grayscale image. It is a basic tool in digital printing, stylized black-and-white photograph rendering, and in many single channel image processing applications :ref:`[51] <doxid-d0/de3/citelist_1CITEREF_CL12>`.

This function is to be applied on color images.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- Input 8-bit 3-channel image.

	*
		- grayscale

		- Output 8-bit 1-channel image.

	*
		- color_boost

		- Output 8-bit 3-channel image.

.. index:: pair: function; inpaint
.. _doxid-d1/d0d/group__photo_1gaedd30dfa0214fec4c88138b51d678085:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::inpaint(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` inpaintMask,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		double inpaintRadius,
		int flags
		)

Restores the selected region in an image using the region neighborhood.

The function reconstructs the selected image area from the pixel near the area boundary. The function may be used to remove dust and scratches from a scanned photo, or to remove undesirable objects from still images or video. See `http://en.wikipedia.org/wiki/Inpainting <http://en.wikipedia.org/wiki/Inpainting>`__ for more details.

* An example using the inpainting technique can be found at opencv_source_code/samples/cpp/inpaint.cpp
  
  * (Python) An example using the inpainting technique can be found at opencv_source_code/samples/python/inpaint.py



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- Input 8-bit, 16-bit unsigned or 32-bit float 1-channel or 8-bit 3-channel image.

	*
		- inpaintMask

		- Inpainting mask, 8-bit 1-channel image. Non-zero pixels indicate the area that needs to be inpainted.

	*
		- dst

		- Output image with the same size and type as src .

	*
		- inpaintRadius

		- Radius of a circular neighborhood of each point inpainted that is considered by the algorithm.

	*
		- flags

		- 
		  Inpainting method that could be one of the following:
		  
		  * **INPAINT_NS** Navier-Stokes based method [Navier01]
		  
		  * **INPAINT_TELEA** Method by Alexandru Telea :ref:`[82] <doxid-d0/de3/citelist_1CITEREF_Telea04>`.

