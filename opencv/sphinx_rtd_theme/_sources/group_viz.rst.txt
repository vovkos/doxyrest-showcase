.. index:: pair: group; 3D Visualizer
.. _doxid-d1/d19/group__viz:

3D Visualizer
=============

.. toctree::
	:hidden:

	group_viz_widget.rst
	class_cv_viz_Camera.rst
	class_cv_viz_Color.rst
	class_cv_viz_KeyboardEvent.rst
	class_cv_viz_Mesh.rst
	class_cv_viz_MouseEvent.rst
	class_cv_viz_Viz3d.rst

Overview
~~~~~~~~

This section describes 3D visualization window as well as classes and methods that are used to interact with it. :ref:`More...<details-d1/d19/group__viz>`

|	:ref:`Widget<doxid-dc/d5c/group__viz__widget>`



.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// classes

	class :ref:`cv::viz::Camera<doxid-d0/d3b/classcv_1_1viz_1_1_camera>`;
	class :ref:`cv::viz::Color<doxid-df/d5b/classcv_1_1viz_1_1_color>`;
	class :ref:`cv::viz::KeyboardEvent<doxid-db/dcb/classcv_1_1viz_1_1_keyboard_event>`;
	class :ref:`cv::viz::Mesh<doxid-dc/dd2/classcv_1_1viz_1_1_mesh>`;
	class :ref:`cv::viz::MouseEvent<doxid-d9/db7/classcv_1_1viz_1_1_mouse_event>`;
	class :ref:`cv::viz::Viz3d<doxid-dd/d47/classcv_1_1viz_1_1_viz3d>`;

	// global functions

	void
	:ref:`cv::viz::computeNormals<doxid-d1/d19/group__viz_1gaef5ba3c97115c715298a620a145beffa>`(
		const :ref:`Mesh<doxid-dc/dd2/classcv_1_1viz_1_1_mesh>`& mesh,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` normals
		);

	:ref:`Viz3d<doxid-dd/d47/classcv_1_1viz_1_1_viz3d>`
	:ref:`cv::viz::getWindowByName<doxid-d1/d19/group__viz_1ga91ed3eefdd38bcc0d3d8be527a58c6c7>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& window_name);

	:ref:`Viz3d<doxid-dd/d47/classcv_1_1viz_1_1_viz3d>`
	:ref:`cv::viz::imshow<doxid-d1/d19/group__viz_1ga1a852143d72014de60067bf3e46faec0>`(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& window_name,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		const :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`& window_size = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(-1, -1)
		);

	bool
	:ref:`cv::viz::isNan<doxid-d1/d19/group__viz_1gac1c740657f322dea194e709414743e81>`(float x);

	bool
	:ref:`cv::viz::isNan<doxid-d1/d19/group__viz_1gac89eaf4fd08fad1f55e315c0e67acf65>`(double x);

	template <
		typename _Tp,
		int cn
		>
	bool
	:ref:`cv::viz::isNan<doxid-d1/d19/group__viz_1ga0d937e5774fedecb73ea47652f339a02>`(const :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<_Tp, cn>& v);

	template <typename _Tp>
	bool
	:ref:`cv::viz::isNan<doxid-d1/d19/group__viz_1ga1a10dc77396c81df53ad300ea4a426c8>`(const :ref:`Point3_<doxid-d4/d29/classcv_1_1_point3__>`<_Tp>& p);

	:ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`
	:ref:`cv::viz::makeCameraPose<doxid-d1/d19/group__viz_1gab04d43faa448940bb58754af6356955b>`(
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& position,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& focal_point,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& y_dir
		);

	:ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`
	:ref:`cv::viz::makeTransformToGlobal<doxid-d1/d19/group__viz_1ga16ef52f42849f13a36b715d488ce5b9f>`(
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& axis_x,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& axis_y,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& axis_z,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& origin = :ref:`Vec3d::all<doxid-db/d93/classcv_1_1_vec_1a86371c4948f9dbb4496cfd7a559c51b4>`(0)
		);

	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	:target:`cv::viz::readCloud<doxid-d1/d19/group__viz_1ga9711c507dba3d8ba11b0c6d845328abc>`(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& file,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` colors = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` normals = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`()
		);

	:ref:`Mesh<doxid-dc/dd2/classcv_1_1viz_1_1_mesh>`
	:ref:`cv::viz::readMesh<doxid-d1/d19/group__viz_1ga2a9275114ec9184bb1814a29ffe00c62>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& file);

	bool
	:ref:`cv::viz::readPose<doxid-d1/d19/group__viz_1gabaecbbd7c3d7208913394637f6dcd04a>`(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& file,
		:ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`& pose,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& tag = "pose"
		);

	void
	:ref:`cv::viz::readTrajectory<doxid-d1/d19/group__viz_1ga8b1eae0484d3d1cef27e3e8fa83aafd2>`(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` traj,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& files_format = "pose%05d.xml",
		int start = 0,
		int end = INT_MAX,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& tag = "pose"
		);

	void
	:ref:`cv::viz::unregisterAllWindows<doxid-d1/d19/group__viz_1ga12946f6b1c58cfa00c8e2f8016cf66dd>`();

	void
	:ref:`cv::viz::writeCloud<doxid-d1/d19/group__viz_1gac2afffcdc8346762a0979664e9e2b249>`(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& file,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` cloud,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` colors = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` normals = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		bool binary = false
		);

	void
	:target:`cv::viz::writePose<doxid-d1/d19/group__viz_1ga3d25aaecb4a692f446179fed36eeb1b4>`(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& file,
		const :ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`& pose,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& tag = "pose"
		);

	void
	:ref:`cv::viz::writeTrajectory<doxid-d1/d19/group__viz_1ga62f87da85e4c2cc315918beb449bd706>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` traj,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& files_format = "pose%05d.xml",
		int start = 0,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& tag = "pose"
		);

.. _details-d1/d19/group__viz:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This section describes 3D visualization window as well as classes and methods that are used to interact with it.

3D visualization window (see :ref:`Viz3d <doxid-dd/d47/classcv_1_1viz_1_1_viz3d>`) is used to display widgets (see :ref:`Widget <doxid-d2/d4e/classcv_1_1viz_1_1_widget>`), and it provides several methods to interact with scene and widgets.

Global Functions
----------------

.. index:: pair: function; computeNormals
.. _doxid-d1/d19/group__viz_1gaef5ba3c97115c715298a620a145beffa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::viz::computeNormals(
		const :ref:`Mesh<doxid-dc/dd2/classcv_1_1viz_1_1_mesh>`& mesh,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` normals
		)

Computing normals for mesh.

.. index:: pair: function; getWindowByName
.. _doxid-d1/d19/group__viz_1ga91ed3eefdd38bcc0d3d8be527a58c6c7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Viz3d<doxid-dd/d47/classcv_1_1viz_1_1_viz3d>`
	cv::viz::getWindowByName(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& window_name)

Retrieves a window by its name.

This function returns a :ref:`Viz3d <doxid-dd/d47/classcv_1_1viz_1_1_viz3d>` object with the given name.

If the window with that name already exists, that window is returned. Otherwise, new window is created with the given name, and it is returned.

Window names are automatically prefixed by "Viz - " if it is not done by the user.

.. ref-code-block:: cpp

	/// window and window_2 are the same windows.
	viz::Viz3d window   = viz::getWindowByName("myWindow");
	viz::Viz3d window_2 = viz::getWindowByName("Viz - myWindow");



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- window_name

		- Name of the window that is to be retrieved.

.. index:: pair: function; imshow
.. _doxid-d1/d19/group__viz_1ga1a852143d72014de60067bf3e46faec0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Viz3d<doxid-dd/d47/classcv_1_1viz_1_1_viz3d>`
	cv::viz::imshow(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& window_name,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		const :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`& window_size = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(-1, -1)
		)

Displays image in specified window.

.. index:: pair: function; isNan
.. _doxid-d1/d19/group__viz_1gac1c740657f322dea194e709414743e81:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	cv::viz::isNan(float x)

Checks **float/double** value for nan.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- x

		- return true if nan.

.. index:: pair: function; isNan
.. _doxid-d1/d19/group__viz_1gac89eaf4fd08fad1f55e315c0e67acf65:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	cv::viz::isNan(double x)

Checks **float/double** value for nan.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- x

		- return true if nan.

.. index:: pair: function; isNan
.. _doxid-d1/d19/group__viz_1ga0d937e5774fedecb73ea47652f339a02:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename _Tp,
		int cn
		>
	bool
	cv::viz::isNan(const :ref:`Vec<doxid-db/d93/classcv_1_1_vec>`<_Tp, cn>& v)

Checks **float/double** value for nan.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- v

		- return true if **any** of the elements of the vector is *nan*.

.. index:: pair: function; isNan
.. _doxid-d1/d19/group__viz_1ga1a10dc77396c81df53ad300ea4a426c8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename _Tp>
	bool
	cv::viz::isNan(const :ref:`Point3_<doxid-d4/d29/classcv_1_1_point3__>`<_Tp>& p)

Checks **float/double** value for nan.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- p

		- return true if **any** of the elements of the point is *nan*.

.. index:: pair: function; makeCameraPose
.. _doxid-d1/d19/group__viz_1gab04d43faa448940bb58754af6356955b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`
	cv::viz::makeCameraPose(
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& position,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& focal_point,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& y_dir
		)

Constructs camera pose from position, focal_point and up_vector (see gluLookAt() for more infromation).

This function returns pose of the camera in global coordinate frame.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- position

		- Position of the camera in global coordinate frame.

	*
		- focal_point

		- Focal point of the camera in global coordinate frame.

	*
		- y_dir

		- Up vector of the camera in global coordinate frame.

.. index:: pair: function; makeTransformToGlobal
.. _doxid-d1/d19/group__viz_1ga16ef52f42849f13a36b715d488ce5b9f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`
	cv::viz::makeTransformToGlobal(
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& axis_x,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& axis_y,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& axis_z,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& origin = :ref:`Vec3d::all<doxid-db/d93/classcv_1_1_vec_1a86371c4948f9dbb4496cfd7a559c51b4>`(0)
		)

Takes coordinate frame data and builds transform to global coordinate frame.

This function returns affine transform that describes transformation between global coordinate frame and a given coordinate frame.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- axis_x

		- X axis vector in global coordinate frame.

	*
		- axis_y

		- Y axis vector in global coordinate frame.

	*
		- axis_z

		- Z axis vector in global coordinate frame.

	*
		- origin

		- Origin of the coordinate frame in global coordinate frame.

.. index:: pair: function; readMesh
.. _doxid-d1/d19/group__viz_1ga2a9275114ec9184bb1814a29ffe00c62:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Mesh<doxid-dc/dd2/classcv_1_1viz_1_1_mesh>`
	cv::viz::readMesh(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& file)

Reads mesh. Only ply format is supported now and no texture load support.

.. index:: pair: function; readPose
.. _doxid-d1/d19/group__viz_1gabaecbbd7c3d7208913394637f6dcd04a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	cv::viz::readPose(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& file,
		:ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`& pose,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& tag = "pose"
		)

Read/write poses and trajectories.

.. index:: pair: function; readTrajectory
.. _doxid-d1/d19/group__viz_1ga8b1eae0484d3d1cef27e3e8fa83aafd2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::viz::readTrajectory(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` traj,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& files_format = "pose%05d.xml",
		int start = 0,
		int end = INT_MAX,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& tag = "pose"
		)

takes vector<Affine3<T>> with T = float/dobule and loads poses from sequence of files

.. index:: pair: function; unregisterAllWindows
.. _doxid-d1/d19/group__viz_1ga12946f6b1c58cfa00c8e2f8016cf66dd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::viz::unregisterAllWindows()

Unregisters all Viz windows from internal database. After it ' :ref:`getWindowByName() <doxid-d1/d19/group__viz_1ga91ed3eefdd38bcc0d3d8be527a58c6c7>` ' will create new windows instead getting existing from the database.

.. index:: pair: function; writeCloud
.. _doxid-d1/d19/group__viz_1gac2afffcdc8346762a0979664e9e2b249:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::viz::writeCloud(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& file,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` cloud,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` colors = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` normals = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		bool binary = false
		)

Read/write clouds. Supported formats: ply, xyz, obj and stl (readonly)

.. index:: pair: function; writeTrajectory
.. _doxid-d1/d19/group__viz_1ga62f87da85e4c2cc315918beb449bd706:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::viz::writeTrajectory(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` traj,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& files_format = "pose%05d.xml",
		int start = 0,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& tag = "pose"
		)

takes vector<Affine3<T>> with T = float/dobule and writes to a sequence of files with given filename format

