.. index:: pair: class; cv::AutoBuffer
.. _doxid-df/d8c/classcv_1_1_auto_buffer:

template class cv::AutoBuffer
=============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Automatically Allocated Buffer Class. :ref:`More...<details-df/d8c/classcv_1_1_auto_buffer>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <utility.hpp>
	
	template <
		typename _Tp,
		size_t fixed_size = 1024/sizeof(_Tp)+8
		>
	class AutoBuffer
	{
	public:
		// typedefs
	
		typedef _Tp :target:`value_type<doxid-df/d8c/classcv_1_1_auto_buffer_1afbc953161e91d6455882c315eff66f6d>`;

		// construction
	
		:ref:`AutoBuffer<doxid-df/d8c/classcv_1_1_auto_buffer_1a990ab2dd088c226def0e59177933c9df>`();
		:ref:`AutoBuffer<doxid-df/d8c/classcv_1_1_auto_buffer_1ac498c6689e5a18843e1c9d23441c3a99>`(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` _size);
		:ref:`AutoBuffer<doxid-df/d8c/classcv_1_1_auto_buffer_1a3416e6aa3bb03435706abce813950d6e>`(const AutoBuffer<_Tp, fixed_size>& buf);

		// methods
	
		void
		:ref:`allocate<doxid-df/d8c/classcv_1_1_auto_buffer_1a1c16dbf31a16748ffc930e796f0dc54b>`(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` _size);
	
		void
		:ref:`deallocate<doxid-df/d8c/classcv_1_1_auto_buffer_1aab78aeff0108ad5ba8c96baafd58702b>`();
	
		:ref:`operator _Tp *<doxid-df/d8c/classcv_1_1_auto_buffer_1abf37a20ae4387196fe2a5684ced410dc>`();
		:ref:`operator const _Tp *<doxid-df/d8c/classcv_1_1_auto_buffer_1a8e1062498f5ea59f2784883cfd6607cb>`() const;
	
		AutoBuffer<_Tp, fixed_size>&
		:ref:`operator=<doxid-df/d8c/classcv_1_1_auto_buffer_1ad8be3a945146d9528f747eafb6c34a81>`(const AutoBuffer<_Tp, fixed_size>& buf);
	
		void
		:ref:`resize<doxid-df/d8c/classcv_1_1_auto_buffer_1a97edc51af209cd6ab20da864c3468124>`(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` _size);
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`size<doxid-df/d8c/classcv_1_1_auto_buffer_1a3e51a3baa4dcb2d8eaefddc4c3ceb455>`() const;

	protected:
		// fields
	
		_Tp :ref:`buf<doxid-df/d8c/classcv_1_1_auto_buffer_1a5286c7bfa1926f51f6d0c7bf5e01c001>`[(fixed_size > 0) ? fixed_size :1];
		_Tp* :ref:`ptr<doxid-df/d8c/classcv_1_1_auto_buffer_1a194ac92b66c003787e0782bd8a38750b>`;
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` :ref:`sz<doxid-df/d8c/classcv_1_1_auto_buffer_1a6025c7fd11fa230c2c315673d2d293b3>`;
	};
.. _details-df/d8c/classcv_1_1_auto_buffer:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Automatically Allocated Buffer Class.

The class is used for temporary buffers in functions and methods. If a temporary buffer is usually small (a few K's of memory), but its size depends on the parameters, it makes sense to create a small fixed-size array on stack and use it if it's large enough. If the required buffer size is larger than the fixed size, another buffer of sufficient size is allocated dynamically and released after the processing. Therefore, in typical cases, when the buffer size is small, there is no overhead associated with malloc()/free(). At the same time, there is no limit on the size of processed data.

This is what :ref:`AutoBuffer <doxid-df/d8c/classcv_1_1_auto_buffer>` does. The template takes 2 parameters - type of the buffer elements and the number of stack-allocated elements. Here is how the class is used:

.. ref-code-block:: cpp

	void my_func(const cv::Mat& m)
	{
	   cv::AutoBuffer<float> buf(1000); // create automatic buffer containing 1000 floats
	
	   buf.allocate(m.rows); // if m.rows <= 1000, the pre-allocated buffer is used,
	                         // otherwise the buffer of "m.rows" floats will be allocated
	                         // dynamically and deallocated in cv::AutoBuffer destructor
	   ...
	}

Fields
------

.. index:: pair: variable; buf
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1a5286c7bfa1926f51f6d0c7bf5e01c001:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	_Tp buf[(fixed_size > 0) ? fixed_size :1]

pre-allocated buffer. At least 1 element to confirm C++ standard requirements

.. index:: pair: variable; ptr
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1a194ac92b66c003787e0782bd8a38750b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	_Tp* ptr

pointer to the real buffer, can point to buf if the buffer is small enough

.. index:: pair: variable; sz
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1a6025c7fd11fa230c2c315673d2d293b3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` sz

size of the real buffer

Construction
------------

.. index:: pair: function; AutoBuffer
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1a990ab2dd088c226def0e59177933c9df:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	AutoBuffer()

the default constructor

.. index:: pair: function; AutoBuffer
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1ac498c6689e5a18843e1c9d23441c3a99:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	AutoBuffer(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` _size)

constructor taking the real buffer size

.. index:: pair: function; AutoBuffer
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1a3416e6aa3bb03435706abce813950d6e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	AutoBuffer(const AutoBuffer<_Tp, fixed_size>& buf)

the copy constructor

Methods
-------

.. index:: pair: function; allocate
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1a1c16dbf31a16748ffc930e796f0dc54b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	allocate(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` _size)

allocates the new buffer of size _size. if the _size is small enough, stack-allocated buffer is used

.. index:: pair: function; deallocate
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1aab78aeff0108ad5ba8c96baafd58702b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	deallocate()

deallocates the buffer if it was dynamically allocated

.. index:: pair: function; operator _Tp *
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1abf37a20ae4387196fe2a5684ced410dc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	operator _Tp *()

returns pointer to the real buffer, stack-allocated or heap-allocated

.. index:: pair: function; operator const _Tp *
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1a8e1062498f5ea59f2784883cfd6607cb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	operator const _Tp *() const

returns read-only pointer to the real buffer, stack-allocated or heap-allocated

.. index:: pair: function; operator=
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1ad8be3a945146d9528f747eafb6c34a81:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	AutoBuffer<_Tp, fixed_size>&
	operator=(const AutoBuffer<_Tp, fixed_size>& buf)

the assignment operator

.. index:: pair: function; resize
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1a97edc51af209cd6ab20da864c3468124:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	resize(:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` _size)

resizes the buffer and preserves the content

.. index:: pair: function; size
.. _doxid-df/d8c/classcv_1_1_auto_buffer_1a3e51a3baa4dcb2d8eaefddc4c3ceb455:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
	size() const

returns the current buffer size

