.. index:: pair: class; cv::BFMatcher
.. _doxid-d9/d49/classcv_1_1_b_f_matcher:

class cv::BFMatcher
===================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Brute-force descriptor matcher. :ref:`More...<details-d9/d49/classcv_1_1_b_f_matcher>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <features2d.hpp>
	
	class BFMatcher: public :ref:`cv::DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`
	{
	public:
		// construction
	
		:ref:`BFMatcher<doxid-d9/d49/classcv_1_1_b_f_matcher_1abe0bb11749b30d97f60d6ade665617bd>`(
			int normType = :ref:`NORM_L2<doxid-d2/de8/group__core__array_1ggad12cefbcb5291cf958a85b4b67b6149fa7bacbe84d400336a8f26297d8e80e3a2>`,
			bool crossCheck = false
			);

		// methods
	
		virtual
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>
		:ref:`clone<doxid-d9/d49/classcv_1_1_b_f_matcher_1a76946422f82f8fad6d9d81536bc7d60c>`(bool emptyTrainData = false) const;
	
		virtual
		bool
		:ref:`isMaskSupported<doxid-d9/d49/classcv_1_1_b_f_matcher_1a40a9c3e86025a8f3be5ad9adbab5c3ff>`() const;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<BFMatcher>
		:target:`create<doxid-d9/d49/classcv_1_1_b_f_matcher_1ac6418c6f87e0e12a88979ea57980c020>`(
			int normType = :ref:`NORM_L2<doxid-d2/de8/group__core__array_1ggad12cefbcb5291cf958a85b4b67b6149fa7bacbe84d400336a8f26297d8e80e3a2>`,
			bool crossCheck = false
			);

	protected:
		// fields
	
		bool :target:`crossCheck<doxid-d9/d49/classcv_1_1_b_f_matcher_1a4fd61f0e8a770d4a23c47e7f6240c6ba>`;
		int :target:`normType<doxid-d9/d49/classcv_1_1_b_f_matcher_1a613c8ce6b5f9477398ad901fda9c3976>`;

		// methods
	
		virtual
		void
		:ref:`knnMatchImpl<doxid-d9/d49/classcv_1_1_b_f_matcher_1afdb88bbd7ecfc1b5000eed658aa38317>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			);
	
		virtual
		void
		:target:`radiusMatchImpl<doxid-d9/d49/classcv_1_1_b_f_matcher_1ab40c7f9246cb6883949b2f43dea177db>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// enums
	
		enum
		{
		    :ref:`FLANNBASED<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eaf73d671c6860c24f44b2880a77fadcdc>`            = 1,
		    :ref:`BRUTEFORCE<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eaddf99aae344c73b63d77764440711b76>`            = 2,
		    :ref:`BRUTEFORCE_L1<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eac4f170ff27df2f2cadabd75c129ec468>`         = 3,
		    :ref:`BRUTEFORCE_HAMMING<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972ea7362dae849e477ed4b1bc862c8ebb5c4>`    = 4,
		    :ref:`BRUTEFORCE_HAMMINGLUT<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eae93477eddb9309e995b78a4eb677b9fe>` = 5,
		    :ref:`BRUTEFORCE_SL2<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eaf88193b09daf077fec5015a9906a67e8>`        = 6,
		};

		// classes
	
		class :ref:`DescriptorCollection<doxid-d6/d0e/classcv_1_1_descriptor_matcher_1_1_descriptor_collection>`;

		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`add<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a623a2b07755cf7fb1c79554af73cdbb0>`(:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` descriptors);
	
		virtual
		void
		:ref:`clear<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a83f51ddad6342a77777706d45e182ed4>`();
	
		virtual
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>
		:ref:`clone<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a8d0dfab3c560c3edada03155c97ed8a9>`(bool emptyTrainData = false) const = 0;
	
		virtual
		bool
		:ref:`empty<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a0f2322bf61c76795b279b531a8f1e146>`() const;
	
		const std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>&
		:ref:`getTrainDescriptors<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa6950934cbf83d774152d426dd82261b>`() const;
	
		virtual
		bool
		:ref:`isMaskSupported<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a3cc074710ccb466a662815969e14cf5e>`() const = 0;
	
		void
		:ref:`knnMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a378f35c9b1a5dfa4022839a45cdf0e89>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) const;
	
		void
		:ref:`knnMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa880f9353cdf185ccf3013e08210483a>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			);
	
		void
		:ref:`match<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a0f046f47b68ec7074391e1e85c750cba>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
			std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>& matches,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`()
			) const;
	
		void
		:ref:`match<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a695c0aceafc907c024c24a0b5cdff758>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>& matches,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`()
			);
	
		void
		:ref:`radiusMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a56b8dcd6fc600f8f2a23212f6e4c5082>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) const;
	
		void
		:ref:`radiusMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aec313028966f30f5b011a3e976f62c09>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			);
	
		void
		:ref:`read<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aba10146926505e6b90377f24489e336c>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& fileName);
	
		virtual
		void
		:ref:`read<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a198238db0f6ab3337db3c42df34dcf34>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`train<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a80e9fd98de5908f5348c17696eeb1a32>`();
	
		void
		:ref:`write<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a9e848d967aaed6930da407f338ca17ba>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& fileName) const;
	
		virtual
		void
		:ref:`write<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a3f83c9ea51e1155ebe43689a9a4d8a73>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>
		:ref:`create<doxid-d4/d64/classcv_1_1_descriptor_matcher_1ab5dc5036569ecc8d47565007fa518257>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& descriptorMatcherType);
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>
		:ref:`create<doxid-d4/d64/classcv_1_1_descriptor_matcher_1af76545ce331f954592e3cf0ed05b8fe7>`(int matcherType);

	protected:
		// fields
	
		std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`> :ref:`trainDescCollection<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a6c1d27bb1cea2a46e0a5c7d297368edd>`;
		std::vector<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`> :ref:`utrainDescCollection<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a66bd1ba0753ab3ebb792e7b4bf5af2ab>`;

		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		void
		:ref:`checkMasks<doxid-d4/d64/classcv_1_1_descriptor_matcher_1acbcaa368465fd3924c8bb70851a98944>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks,
			int queryDescriptorsCount
			) const;
	
		virtual
		void
		:ref:`knnMatchImpl<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a38f18a66b3498fa5c960e29ed0056d44>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) = 0;
	
		virtual
		void
		:ref:`radiusMatchImpl<doxid-d4/d64/classcv_1_1_descriptor_matcher_1afc03bcd8e385f4b3684b7a7d42810ff6>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) = 0;
	
		static
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
		:ref:`clone_op<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a7aa961c11ccdc6a9b1495f5aaf83d251>`(:ref:`Mat<doxid-db/de6/classcv_1_1_mat>` m);
	
		static
		bool
		:ref:`isMaskedOut<doxid-d4/d64/classcv_1_1_descriptor_matcher_1acf9d628dd4c52e6ff00eb92801fd0921>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks,
			int queryIdx
			);
	
		static
		bool
		:ref:`isPossibleMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aaeca71427249a189e35e77066f25fc8b>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask,
			int queryIdx,
			int trainIdx
			);

.. _details-d9/d49/classcv_1_1_b_f_matcher:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Brute-force descriptor matcher.

For each descriptor in the first set, this matcher finds the closest descriptor in the second set by trying each one. This descriptor matcher supports masking permissible matches of descriptor sets.

Construction
------------

.. index:: pair: function; BFMatcher
.. _doxid-d9/d49/classcv_1_1_b_f_matcher_1abe0bb11749b30d97f60d6ade665617bd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	BFMatcher(
		int normType = :ref:`NORM_L2<doxid-d2/de8/group__core__array_1ggad12cefbcb5291cf958a85b4b67b6149fa7bacbe84d400336a8f26297d8e80e3a2>`,
		bool crossCheck = false
		)

Brute-force matcher constructor (obsolete). Please use :ref:`BFMatcher.create() <doxid-d9/d49/classcv_1_1_b_f_matcher_1ac6418c6f87e0e12a88979ea57980c020>`

Methods
-------

.. index:: pair: function; clone
.. _doxid-d9/d49/classcv_1_1_b_f_matcher_1a76946422f82f8fad6d9d81536bc7d60c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>
	clone(bool emptyTrainData = false) const

Clones the matcher.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- emptyTrainData

		- If emptyTrainData is false, the method creates a deep copy of the object, that is, copies both parameters and train data. If emptyTrainData is true, the method creates an object copy with the current parameters but with empty train data.

.. index:: pair: function; isMaskSupported
.. _doxid-d9/d49/classcv_1_1_b_f_matcher_1a40a9c3e86025a8f3be5ad9adbab5c3ff:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isMaskSupported() const

Returns true if the descriptor matcher supports masking permissible matches.

.. index:: pair: function; knnMatchImpl
.. _doxid-d9/d49/classcv_1_1_b_f_matcher_1afdb88bbd7ecfc1b5000eed658aa38317:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	knnMatchImpl(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
		std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
		int k,
		:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		bool compactResult = false
		)

In fact the matching is implemented only by the following two methods. These methods suppose that the class object has been trained already. Public match methods call these methods after calling :ref:`train() <doxid-d4/d64/classcv_1_1_descriptor_matcher_1a80e9fd98de5908f5348c17696eeb1a32>`.

