.. index:: pair: class; cv::BOWTrainer
.. _doxid-dc/d26/classcv_1_1_b_o_w_trainer:

class cv::BOWTrainer
====================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Abstract base class for training the *bag of visual words* vocabulary from a set of descriptors. :ref:`More...<details-dc/d26/classcv_1_1_b_o_w_trainer>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <features2d.hpp>
	
	class BOWTrainer
	{
	public:
		// methods
	
		void
		:ref:`add<doxid-dc/d26/classcv_1_1_b_o_w_trainer_1a84a70df7f06e7339408f36eb040914ea>`(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& descriptors);
	
		virtual
		void
		:target:`clear<doxid-dc/d26/classcv_1_1_b_o_w_trainer_1a54968befe8957d2691fc8e492aeea72c>`();
	
		virtual
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
		:ref:`cluster<doxid-dc/d26/classcv_1_1_b_o_w_trainer_1abbd3b3cb63690fa7128db1a1fcb84eab>`() const = 0;
	
		virtual
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
		:ref:`cluster<doxid-dc/d26/classcv_1_1_b_o_w_trainer_1ab869df2d888741c37e33c06eee8d54dc>`(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& descriptors) const = 0;
	
		int
		:ref:`descriptorsCount<doxid-dc/d26/classcv_1_1_b_o_w_trainer_1a3336e4c738c273482d1bf2cc2b6b5829>`() const;
	
		const std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>&
		:ref:`getDescriptors<doxid-dc/d26/classcv_1_1_b_o_w_trainer_1ade701ea5056380d950a4dfd1c3f7f3fa>`() const;

	protected:
		// fields
	
		std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`> :target:`descriptors<doxid-dc/d26/classcv_1_1_b_o_w_trainer_1a2a447f969feed258bd3cdfc521bc9502>`;
		int :target:`size<doxid-dc/d26/classcv_1_1_b_o_w_trainer_1a0aa1b9d10cb5790c13977c7ef3d60589>`;
	};

	// direct descendants

	class :ref:`BOWKMeansTrainer<doxid-d6/d6b/classcv_1_1_b_o_w_k_means_trainer>`;
.. _details-dc/d26/classcv_1_1_b_o_w_trainer:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Abstract base class for training the *bag of visual words* vocabulary from a set of descriptors.

For details, see, for example, *Visual Categorization with Bags of Keypoints* by Gabriella Csurka, Christopher R. Dance, Lixin Fan, Jutta Willamowski, Cedric Bray, 2004. :

Methods
-------

.. index:: pair: function; add
.. _doxid-dc/d26/classcv_1_1_b_o_w_trainer_1a84a70df7f06e7339408f36eb040914ea:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	add(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& descriptors)

Adds descriptors to a training set.

The training set is clustered using clustermethod to construct the vocabulary.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- descriptors

		- Descriptors to add to a training set. Each row of the descriptors matrix is a descriptor.

.. index:: pair: function; cluster
.. _doxid-dc/d26/classcv_1_1_b_o_w_trainer_1abbd3b3cb63690fa7128db1a1fcb84eab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	cluster() const = 0

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; cluster
.. _doxid-dc/d26/classcv_1_1_b_o_w_trainer_1ab869df2d888741c37e33c06eee8d54dc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	cluster(const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& descriptors) const = 0

Clusters train descriptors.

The vocabulary consists of cluster centers. So, this method returns the vocabulary. In the first variant of the method, train descriptors stored in the object are clustered. In the second variant, input descriptors are clustered.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- descriptors

		- Descriptors to cluster. Each row of the descriptors matrix is a descriptor. Descriptors are not added to the inner train descriptor set.

.. index:: pair: function; descriptorsCount
.. _doxid-dc/d26/classcv_1_1_b_o_w_trainer_1a3336e4c738c273482d1bf2cc2b6b5829:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	descriptorsCount() const

Returns the count of all descriptors stored in the training set.

.. index:: pair: function; getDescriptors
.. _doxid-dc/d26/classcv_1_1_b_o_w_trainer_1ade701ea5056380d950a4dfd1c3f7f3fa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	const std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>&
	getDescriptors() const

Returns a training set of descriptors.

