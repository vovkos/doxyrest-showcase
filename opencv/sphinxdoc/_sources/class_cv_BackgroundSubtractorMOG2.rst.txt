.. index:: pair: class; cv::BackgroundSubtractorMOG2
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2:

class cv::BackgroundSubtractorMOG2
==================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Gaussian Mixture-based Background/Foreground Segmentation :ref:`Algorithm <doxid-d1/d41/classcv_1_1_algorithm>`. :ref:`More...<details-d6/d6d/classcv_1_1_background_subtractor_m_o_g2>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <background_segm.hpp>
	
	class BackgroundSubtractorMOG2: public :ref:`cv::BackgroundSubtractor<doxid-d5/d6d/classcv_1_1_background_subtractor>`
	{
	public:
		// methods
	
		virtual
		void
		:ref:`apply<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a3fb6b359c0c6753d20462dff0a48239f>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` fgmask,
			double learningRate = -1
			) = 0;
	
		virtual
		double
		:ref:`getBackgroundRatio<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1aaeb8ec022e65adc698f0784672d77a89>`() const = 0;
	
		virtual
		double
		:ref:`getComplexityReductionThreshold<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a137c239f3bcfa930f6c25f692fef8bef>`() const = 0;
	
		virtual
		bool
		:ref:`getDetectShadows<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1af12944537bba5229dfdf48f36475e25f>`() const = 0;
	
		virtual
		int
		:ref:`getHistory<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a2e49e568a8cdd283d19040a63ef656df>`() const = 0;
	
		virtual
		int
		:ref:`getNMixtures<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1adbb1d295befaff88a54a929e50aaf879>`() const = 0;
	
		virtual
		double
		:ref:`getShadowThreshold<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1acdb85152b349d70561fecc4554ad76e6>`() const = 0;
	
		virtual
		int
		:ref:`getShadowValue<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1ae5f09f97867bcc4f721e4c082b34a13f>`() const = 0;
	
		virtual
		double
		:ref:`getVarInit<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a2a3aacc2175d3a22167ef64b1d23b30c>`() const = 0;
	
		virtual
		double
		:target:`getVarMax<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a87baa2f2cbc8fb393cce46634dbe99ac>`() const = 0;
	
		virtual
		double
		:target:`getVarMin<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a5d3e41f74ee8671db9c0c9f454f12453>`() const = 0;
	
		virtual
		double
		:ref:`getVarThreshold<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a3396943b42f846946bb662330a5a9cdc>`() const = 0;
	
		virtual
		double
		:ref:`getVarThresholdGen<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a27c06536ada9d4226c251da6b94abe18>`() const = 0;
	
		virtual
		void
		:ref:`setBackgroundRatio<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1ab8bdfc9c318650aed53ecc836667b56a>`(double ratio) = 0;
	
		virtual
		void
		:ref:`setComplexityReductionThreshold<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1af45a64f718ef1b43ca8f738c496408f1>`(double ct) = 0;
	
		virtual
		void
		:ref:`setDetectShadows<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a329fea969ebfb55814f85418b63c4d96>`(bool detectShadows) = 0;
	
		virtual
		void
		:ref:`setHistory<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a5e8b40fef89a582ce42d99d2453db67a>`(int history) = 0;
	
		virtual
		void
		:ref:`setNMixtures<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1ae049541aaa12c3a69d854c8f79a23ba3>`(int nmixtures) = 0;
	
		virtual
		void
		:ref:`setShadowThreshold<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a1e9f50c4bf60b77ca12a6977ccdd08cb>`(double threshold) = 0;
	
		virtual
		void
		:ref:`setShadowValue<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a259029f0eefe5ade47d98d744e829f8a>`(int value) = 0;
	
		virtual
		void
		:ref:`setVarInit<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a55b91818465653df3672638c1e864bab>`(double varInit) = 0;
	
		virtual
		void
		:target:`setVarMax<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a2026951d9331d299f14279d53ffb202a>`(double varMax) = 0;
	
		virtual
		void
		:target:`setVarMin<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a62fd4f08f4528a1f849346139d58e863>`(double varMin) = 0;
	
		virtual
		void
		:ref:`setVarThreshold<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1ab58c51659a49f9d8bfdf7062cf4859b5>`(double varThreshold) = 0;
	
		virtual
		void
		:ref:`setVarThresholdGen<doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a0afcbbdc16fd13918e2044c2bab10ba4>`(double varThresholdGen) = 0;
	};

	// direct descendants

	class :ref:`BackgroundSubtractorMOG2<doxid-d7/df2/classcv_1_1cuda_1_1_background_subtractor_m_o_g2>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`apply<doxid-d5/d6d/classcv_1_1_background_subtractor_1aa735e76f7069b3fa9c3f32395f9ccd21>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` fgmask,
			double learningRate = -1
			) = 0;
	
		virtual
		void
		:ref:`getBackgroundImage<doxid-d5/d6d/classcv_1_1_background_subtractor_1a98cb8e292a6cbcb32436dad62a82f974>`(:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` backgroundImage) const = 0;

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d6/d6d/classcv_1_1_background_subtractor_m_o_g2:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Gaussian Mixture-based Background/Foreground Segmentation :ref:`Algorithm <doxid-d1/d41/classcv_1_1_algorithm>`.

The class implements the Gaussian mixture model background subtraction described in :ref:`[98] <doxid-d0/de3/citelist_1CITEREF_Zivkovic2004>` and :ref:`[97] <doxid-d0/de3/citelist_1CITEREF_Zivkovic2006>`.

Methods
-------

.. index:: pair: function; apply
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a3fb6b359c0c6753d20462dff0a48239f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	apply(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` image,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` fgmask,
		double learningRate = -1
		) = 0

Computes a foreground mask.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- image

		- Next video frame. Floating point frame will be used without scaling and should be in range :math:`[0,255]`.

	*
		- fgmask

		- The output foreground mask as an 8-bit binary image.

	*
		- learningRate

		- The value between 0 and 1 that indicates how fast the background model is learnt. Negative parameter value makes the algorithm to use some automatically chosen learning rate. 0 means that the background model is not updated at all, 1 means that the background model is completely reinitialized from the last frame.

.. index:: pair: function; getBackgroundRatio
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1aaeb8ec022e65adc698f0784672d77a89:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getBackgroundRatio() const = 0

Returns the "background ratio" parameter of the algorithm.

If a foreground pixel keeps semi-constant value for about backgroundRatio\*history frames, it's considered background and added to the model as a center of a new component. It corresponds to TB parameter in the paper.

.. index:: pair: function; getComplexityReductionThreshold
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a137c239f3bcfa930f6c25f692fef8bef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getComplexityReductionThreshold() const = 0

Returns the complexity reduction threshold.

This parameter defines the number of samples needed to accept to prove the component exists. CT=0.05 is a default value for all the samples. By setting CT=0 you get an algorithm very similar to the standard Stauffer&Grimson algorithm.

.. index:: pair: function; getDetectShadows
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1af12944537bba5229dfdf48f36475e25f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	getDetectShadows() const = 0

Returns the shadow detection flag.

If true, the algorithm detects shadows and marks them. See createBackgroundSubtractorMOG2 for details.

.. index:: pair: function; getHistory
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a2e49e568a8cdd283d19040a63ef656df:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getHistory() const = 0

Returns the number of last frames that affect the background model.

.. index:: pair: function; getNMixtures
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1adbb1d295befaff88a54a929e50aaf879:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getNMixtures() const = 0

Returns the number of gaussian components in the background model.

.. index:: pair: function; getShadowThreshold
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1acdb85152b349d70561fecc4554ad76e6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getShadowThreshold() const = 0

Returns the shadow threshold.

A shadow is detected if pixel is a darker version of the background. The shadow threshold (Tau in the paper) is a threshold defining how much darker the shadow can be. Tau= 0.5 means that if a pixel is more than twice darker then it is not shadow. See Prati, Mikic, Trivedi and Cucchiara, Detecting Moving Shadows...\*, IEEE PAMI,2003.

.. index:: pair: function; getShadowValue
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1ae5f09f97867bcc4f721e4c082b34a13f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getShadowValue() const = 0

Returns the shadow value.

Shadow value is the value used to mark shadows in the foreground mask. Default value is 127. Value 0 in the mask always means background, 255 means foreground.

.. index:: pair: function; getVarInit
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a2a3aacc2175d3a22167ef64b1d23b30c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getVarInit() const = 0

Returns the initial variance of each gaussian component.

.. index:: pair: function; getVarThreshold
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a3396943b42f846946bb662330a5a9cdc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getVarThreshold() const = 0

Returns the variance threshold for the pixel-model match.

The main threshold on the squared Mahalanobis distance to decide if the sample is well described by the background model or not. Related to Cthr from the paper.

.. index:: pair: function; getVarThresholdGen
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a27c06536ada9d4226c251da6b94abe18:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	getVarThresholdGen() const = 0

Returns the variance threshold for the pixel-model match used for new mixture component generation.

Threshold for the squared Mahalanobis distance that helps decide when a sample is close to the existing components (corresponds to Tg in the paper). If a pixel is not close to any component, it is considered foreground or added as a new component. 3 sigma => Tg=3\*3=9 is default. A smaller Tg value generates more components. A higher Tg value may result in a small number of components but they can grow too large.

.. index:: pair: function; setBackgroundRatio
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1ab8bdfc9c318650aed53ecc836667b56a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setBackgroundRatio(double ratio) = 0

Sets the "background ratio" parameter of the algorithm.

.. index:: pair: function; setComplexityReductionThreshold
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1af45a64f718ef1b43ca8f738c496408f1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setComplexityReductionThreshold(double ct) = 0

Sets the complexity reduction threshold.

.. index:: pair: function; setDetectShadows
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a329fea969ebfb55814f85418b63c4d96:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setDetectShadows(bool detectShadows) = 0

Enables or disables shadow detection.

.. index:: pair: function; setHistory
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a5e8b40fef89a582ce42d99d2453db67a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setHistory(int history) = 0

Sets the number of last frames that affect the background model.

.. index:: pair: function; setNMixtures
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1ae049541aaa12c3a69d854c8f79a23ba3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setNMixtures(int nmixtures) = 0

Sets the number of gaussian components in the background model.

The model needs to be reinitalized to reserve memory.

.. index:: pair: function; setShadowThreshold
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a1e9f50c4bf60b77ca12a6977ccdd08cb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setShadowThreshold(double threshold) = 0

Sets the shadow threshold.

.. index:: pair: function; setShadowValue
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a259029f0eefe5ade47d98d744e829f8a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setShadowValue(int value) = 0

Sets the shadow value.

.. index:: pair: function; setVarInit
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a55b91818465653df3672638c1e864bab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setVarInit(double varInit) = 0

Sets the initial variance of each gaussian component.

.. index:: pair: function; setVarThreshold
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1ab58c51659a49f9d8bfdf7062cf4859b5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setVarThreshold(double varThreshold) = 0

Sets the variance threshold for the pixel-model match.

.. index:: pair: function; setVarThresholdGen
.. _doxid-d6/d6d/classcv_1_1_background_subtractor_m_o_g2_1a0afcbbdc16fd13918e2044c2bab10ba4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setVarThresholdGen(double varThresholdGen) = 0

Sets the variance threshold for the pixel-model match used for new mixture component generation.

