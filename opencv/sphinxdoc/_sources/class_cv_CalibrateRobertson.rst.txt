.. index:: pair: class; cv::CalibrateRobertson
.. _doxid-d8/d80/classcv_1_1_calibrate_robertson:

class cv::CalibrateRobertson
============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Inverse camera response function is extracted for each brightness value by minimizing an objective function as linear system. This algorithm uses all image pixels. :ref:`More...<details-d8/d80/classcv_1_1_calibrate_robertson>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <photo.hpp>
	
	class CalibrateRobertson: public :ref:`cv::CalibrateCRF<doxid-d6/d43/classcv_1_1_calibrate_c_r_f>`
	{
	public:
		// methods
	
		virtual
		int
		:target:`getMaxIter<doxid-d8/d80/classcv_1_1_calibrate_robertson_1a995cb2648458032e5eb11bb8139caddb>`() const = 0;
	
		virtual
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
		:target:`getRadiance<doxid-d8/d80/classcv_1_1_calibrate_robertson_1a73f0bd31ee8f3d8f8d1e90260b7a6ce4>`() const = 0;
	
		virtual
		float
		:target:`getThreshold<doxid-d8/d80/classcv_1_1_calibrate_robertson_1af9fe250472890fc8034e22bd1940073c>`() const = 0;
	
		virtual
		void
		:target:`setMaxIter<doxid-d8/d80/classcv_1_1_calibrate_robertson_1af4065c5709a957ae36f4da78200ace01>`(int max_iter) = 0;
	
		virtual
		void
		:target:`setThreshold<doxid-d8/d80/classcv_1_1_calibrate_robertson_1a751f087a7b571130daab29b0fdd6a363>`(float threshold) = 0;
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`process<doxid-d6/d43/classcv_1_1_calibrate_c_r_f_1a7bd220808762094e0b48819f63437196>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` src,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` times
			) = 0;

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d8/d80/classcv_1_1_calibrate_robertson:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Inverse camera response function is extracted for each brightness value by minimizing an objective function as linear system. This algorithm uses all image pixels.

For more information see :ref:`[70] <doxid-d0/de3/citelist_1CITEREF_RB99>`.

