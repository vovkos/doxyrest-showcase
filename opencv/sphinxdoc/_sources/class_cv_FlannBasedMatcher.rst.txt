.. index:: pair: class; cv::FlannBasedMatcher
.. _doxid-de/d48/classcv_1_1_flann_based_matcher:

class cv::FlannBasedMatcher
===========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Flann-based descriptor matcher. :ref:`More...<details-de/d48/classcv_1_1_flann_based_matcher>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <features2d.hpp>
	
	class FlannBasedMatcher: public :ref:`cv::DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`
	{
	public:
		// construction
	
		:target:`FlannBasedMatcher<doxid-de/d48/classcv_1_1_flann_based_matcher_1ab9114a6471e364ad221f89068ca21382>`(
			const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`flann::IndexParams<doxid-d4/db1/structcv_1_1flann_1_1_index_params>`>& indexParams = :ref:`makePtr<doxid-dc/d84/group__core__basic_1ga94b059075f41314c83dd2a2758c81acd>`<:ref:`flann::KDTreeIndexParams<doxid-db/db8/structcv_1_1flann_1_1_k_d_tree_index_params>`>(),
			const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`flann::SearchParams<doxid-d0/db8/structcv_1_1flann_1_1_search_params>`>& searchParams = :ref:`makePtr<doxid-dc/d84/group__core__basic_1ga94b059075f41314c83dd2a2758c81acd>`<:ref:`flann::SearchParams<doxid-d0/db8/structcv_1_1flann_1_1_search_params>`>()
			);

		// methods
	
		virtual
		void
		:ref:`add<doxid-de/d48/classcv_1_1_flann_based_matcher_1afa6479e2ed9fe4c7b726834c40539b24>`(:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` descriptors);
	
		virtual
		void
		:ref:`clear<doxid-de/d48/classcv_1_1_flann_based_matcher_1accd5a97bbc9239582b1287d80f90480b>`();
	
		virtual
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>
		:ref:`clone<doxid-de/d48/classcv_1_1_flann_based_matcher_1ae8aafefe80f2e32cfa87d29904060b4c>`(bool emptyTrainData = false) const;
	
		virtual
		bool
		:ref:`isMaskSupported<doxid-de/d48/classcv_1_1_flann_based_matcher_1ac16a7ad4b1cf17f34f576d5cf312853d>`() const;
	
		virtual
		void
		:ref:`read<doxid-de/d48/classcv_1_1_flann_based_matcher_1abb2576ee348cb8d1cfd25ccf0188dfab>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`train<doxid-de/d48/classcv_1_1_flann_based_matcher_1a20236f701a44bb05045dec8a26505c83>`();
	
		virtual
		void
		:ref:`write<doxid-de/d48/classcv_1_1_flann_based_matcher_1aa5cf601a901597de3635b7ef58200ebe>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<FlannBasedMatcher>
		:target:`create<doxid-de/d48/classcv_1_1_flann_based_matcher_1a7b17083dda906384465a32952c1bbe3b>`();

	protected:
		// fields
	
		int :target:`addedDescCount<doxid-de/d48/classcv_1_1_flann_based_matcher_1a8854dcad3e17bab50c39f60ddff76d21>`;
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`flann::Index<doxid-d5/d88/classcv_1_1flann_1_1_index>`> :target:`flannIndex<doxid-de/d48/classcv_1_1_flann_based_matcher_1a293108def96df8a5f19ea0897e548ff2>`;
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`flann::IndexParams<doxid-d4/db1/structcv_1_1flann_1_1_index_params>`> :target:`indexParams<doxid-de/d48/classcv_1_1_flann_based_matcher_1af2b50fb9c749ff4e14902192326247ad>`;
		:ref:`DescriptorCollection<doxid-d6/d0e/classcv_1_1_descriptor_matcher_1_1_descriptor_collection>` :target:`mergedDescriptors<doxid-de/d48/classcv_1_1_flann_based_matcher_1a990859c4f84b04b3ced4411b3a62e7cc>`;
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`flann::SearchParams<doxid-d0/db8/structcv_1_1flann_1_1_search_params>`> :target:`searchParams<doxid-de/d48/classcv_1_1_flann_based_matcher_1af7f49c47216e18e7bdbefeb73884b891>`;

		// methods
	
		static
		void
		:target:`convertToDMatches<doxid-de/d48/classcv_1_1_flann_based_matcher_1a0752ace1e8e0c46af9531ffdda0b37ee>`(
			const :ref:`DescriptorCollection<doxid-d6/d0e/classcv_1_1_descriptor_matcher_1_1_descriptor_collection>`& descriptors,
			const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& indices,
			const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& distances,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches
			);
	
		virtual
		void
		:ref:`knnMatchImpl<doxid-de/d48/classcv_1_1_flann_based_matcher_1adfd4ee7f41a23172155f77d59d614536>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			);
	
		virtual
		void
		:target:`radiusMatchImpl<doxid-de/d48/classcv_1_1_flann_based_matcher_1a9493aab0915b4533a00eb984686e174c>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// enums
	
		enum
		{
		    :ref:`FLANNBASED<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eaf73d671c6860c24f44b2880a77fadcdc>`            = 1,
		    :ref:`BRUTEFORCE<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eaddf99aae344c73b63d77764440711b76>`            = 2,
		    :ref:`BRUTEFORCE_L1<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eac4f170ff27df2f2cadabd75c129ec468>`         = 3,
		    :ref:`BRUTEFORCE_HAMMING<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972ea7362dae849e477ed4b1bc862c8ebb5c4>`    = 4,
		    :ref:`BRUTEFORCE_HAMMINGLUT<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eae93477eddb9309e995b78a4eb677b9fe>` = 5,
		    :ref:`BRUTEFORCE_SL2<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa2d638c45614e989e4711dbe9a48972eaf88193b09daf077fec5015a9906a67e8>`        = 6,
		};

		// classes
	
		class :ref:`DescriptorCollection<doxid-d6/d0e/classcv_1_1_descriptor_matcher_1_1_descriptor_collection>`;

		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`add<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a623a2b07755cf7fb1c79554af73cdbb0>`(:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` descriptors);
	
		virtual
		void
		:ref:`clear<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a83f51ddad6342a77777706d45e182ed4>`();
	
		virtual
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>
		:ref:`clone<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a8d0dfab3c560c3edada03155c97ed8a9>`(bool emptyTrainData = false) const = 0;
	
		virtual
		bool
		:ref:`empty<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a0f2322bf61c76795b279b531a8f1e146>`() const;
	
		const std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>&
		:ref:`getTrainDescriptors<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa6950934cbf83d774152d426dd82261b>`() const;
	
		virtual
		bool
		:ref:`isMaskSupported<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a3cc074710ccb466a662815969e14cf5e>`() const = 0;
	
		void
		:ref:`knnMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a378f35c9b1a5dfa4022839a45cdf0e89>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) const;
	
		void
		:ref:`knnMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aa880f9353cdf185ccf3013e08210483a>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			);
	
		void
		:ref:`match<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a0f046f47b68ec7074391e1e85c750cba>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
			std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>& matches,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`()
			) const;
	
		void
		:ref:`match<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a695c0aceafc907c024c24a0b5cdff758>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>& matches,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`()
			);
	
		void
		:ref:`radiusMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a56b8dcd6fc600f8f2a23212f6e4c5082>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` trainDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) const;
	
		void
		:ref:`radiusMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aec313028966f30f5b011a3e976f62c09>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			);
	
		void
		:ref:`read<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aba10146926505e6b90377f24489e336c>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& fileName);
	
		virtual
		void
		:ref:`read<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a198238db0f6ab3337db3c42df34dcf34>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`train<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a80e9fd98de5908f5348c17696eeb1a32>`();
	
		void
		:ref:`write<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a9e848d967aaed6930da407f338ca17ba>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& fileName) const;
	
		virtual
		void
		:ref:`write<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a3f83c9ea51e1155ebe43689a9a4d8a73>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>
		:ref:`create<doxid-d4/d64/classcv_1_1_descriptor_matcher_1ab5dc5036569ecc8d47565007fa518257>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& descriptorMatcherType);
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>
		:ref:`create<doxid-d4/d64/classcv_1_1_descriptor_matcher_1af76545ce331f954592e3cf0ed05b8fe7>`(int matcherType);

	protected:
		// fields
	
		std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`> :ref:`trainDescCollection<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a6c1d27bb1cea2a46e0a5c7d297368edd>`;
		std::vector<:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`> :ref:`utrainDescCollection<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a66bd1ba0753ab3ebb792e7b4bf5af2ab>`;

		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		void
		:ref:`checkMasks<doxid-d4/d64/classcv_1_1_descriptor_matcher_1acbcaa368465fd3924c8bb70851a98944>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks,
			int queryDescriptorsCount
			) const;
	
		virtual
		void
		:ref:`knnMatchImpl<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a38f18a66b3498fa5c960e29ed0056d44>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			int k,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) = 0;
	
		virtual
		void
		:ref:`radiusMatchImpl<doxid-d4/d64/classcv_1_1_descriptor_matcher_1afc03bcd8e385f4b3684b7a7d42810ff6>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
			std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
			float maxDistance,
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			bool compactResult = false
			) = 0;
	
		static
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
		:ref:`clone_op<doxid-d4/d64/classcv_1_1_descriptor_matcher_1a7aa961c11ccdc6a9b1495f5aaf83d251>`(:ref:`Mat<doxid-db/de6/classcv_1_1_mat>` m);
	
		static
		bool
		:ref:`isMaskedOut<doxid-d4/d64/classcv_1_1_descriptor_matcher_1acf9d628dd4c52e6ff00eb92801fd0921>`(
			:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks,
			int queryIdx
			);
	
		static
		bool
		:ref:`isPossibleMatch<doxid-d4/d64/classcv_1_1_descriptor_matcher_1aaeca71427249a189e35e77066f25fc8b>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask,
			int queryIdx,
			int trainIdx
			);

.. _details-de/d48/classcv_1_1_flann_based_matcher:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Flann-based descriptor matcher.

This matcher trains :ref:`cv::flann::Index <doxid-d5/d88/classcv_1_1flann_1_1_index>` on a train descriptor collection and calls its nearest search methods to find the best matches. So, this matcher may be faster when matching a large train collection than the brute force matcher. :ref:`FlannBasedMatcher <doxid-de/d48/classcv_1_1_flann_based_matcher>` does not support masking permissible matches of descriptor sets because :ref:`flann::Index <doxid-d5/d88/classcv_1_1flann_1_1_index>` does not support this. :

Methods
-------

.. index:: pair: function; add
.. _doxid-de/d48/classcv_1_1_flann_based_matcher_1afa6479e2ed9fe4c7b726834c40539b24:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	add(:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` descriptors)

Adds descriptors to train a CPU(trainDescCollectionis) or GPU(utrainDescCollectionis) descriptor collection.

If the collection is not empty, the new descriptors are added to existing train descriptors.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- descriptors

		- Descriptors to add. Each descriptors[i] is a set of descriptors from the same train image.

.. index:: pair: function; clear
.. _doxid-de/d48/classcv_1_1_flann_based_matcher_1accd5a97bbc9239582b1287d80f90480b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	clear()

Clears the train descriptor collections.

.. index:: pair: function; clone
.. _doxid-de/d48/classcv_1_1_flann_based_matcher_1ae8aafefe80f2e32cfa87d29904060b4c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`DescriptorMatcher<doxid-d4/d64/classcv_1_1_descriptor_matcher>`>
	clone(bool emptyTrainData = false) const

Clones the matcher.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- emptyTrainData

		- If emptyTrainData is false, the method creates a deep copy of the object, that is, copies both parameters and train data. If emptyTrainData is true, the method creates an object copy with the current parameters but with empty train data.

.. index:: pair: function; isMaskSupported
.. _doxid-de/d48/classcv_1_1_flann_based_matcher_1ac16a7ad4b1cf17f34f576d5cf312853d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isMaskSupported() const

Returns true if the descriptor matcher supports masking permissible matches.

.. index:: pair: function; read
.. _doxid-de/d48/classcv_1_1_flann_based_matcher_1abb2576ee348cb8d1cfd25ccf0188dfab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	read(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn)

Reads algorithm parameters from a file storage.

.. index:: pair: function; train
.. _doxid-de/d48/classcv_1_1_flann_based_matcher_1a20236f701a44bb05045dec8a26505c83:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	train()

Trains a descriptor matcher.

Trains a descriptor matcher (for example, the flann index). In all methods to match, the method :ref:`train() <doxid-de/d48/classcv_1_1_flann_based_matcher_1a20236f701a44bb05045dec8a26505c83>` is run every time before matching. Some descriptor matchers (for example, BruteForceMatcher) have an empty implementation of this method. Other matchers really train their inner structures (for example, :ref:`FlannBasedMatcher <doxid-de/d48/classcv_1_1_flann_based_matcher>` trains :ref:`flann::Index <doxid-d5/d88/classcv_1_1flann_1_1_index>`).

.. index:: pair: function; write
.. _doxid-de/d48/classcv_1_1_flann_based_matcher_1aa5cf601a901597de3635b7ef58200ebe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	write(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const

Stores algorithm parameters in a file storage.

.. index:: pair: function; knnMatchImpl
.. _doxid-de/d48/classcv_1_1_flann_based_matcher_1adfd4ee7f41a23172155f77d59d614536:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	knnMatchImpl(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` queryDescriptors,
		std::vector<std::vector<:ref:`DMatch<doxid-d9/db0/classcv_1_1_d_match>`>>& matches,
		int k,
		:ref:`InputArrayOfArrays<doxid-dc/d84/group__core__basic_1ga606feabe3b50ab6838f1ba89727aa07a>` masks = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
		bool compactResult = false
		)

In fact the matching is implemented only by the following two methods. These methods suppose that the class object has been trained already. Public match methods call these methods after calling :ref:`train() <doxid-de/d48/classcv_1_1_flann_based_matcher_1a20236f701a44bb05045dec8a26505c83>`.

