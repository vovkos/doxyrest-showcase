.. index:: pair: class; cv::MinProblemSolver
.. _doxid-d0/d39/classcv_1_1_min_problem_solver:

class cv::MinProblemSolver
==========================

.. toctree::
	:hidden:

	class_cv_MinProblemSolver_Function.rst

Overview
~~~~~~~~

Basic interface for all solvers. :ref:`More...<details-d0/d39/classcv_1_1_min_problem_solver>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <optim.hpp>
	
	class MinProblemSolver: public :ref:`cv::Algorithm<doxid-d1/d41/classcv_1_1_algorithm>`
	{
	public:
		// classes
	
		class :ref:`Function<doxid-da/da2/classcv_1_1_min_problem_solver_1_1_function>`;

		// methods
	
		virtual
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`Function<doxid-da/da2/classcv_1_1_min_problem_solver_1_1_function>`>
		:ref:`getFunction<doxid-d0/d39/classcv_1_1_min_problem_solver_1aa21b828e74653fb760f021c27d1f498a>`() const = 0;
	
		virtual
		:ref:`TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`
		:ref:`getTermCriteria<doxid-d0/d39/classcv_1_1_min_problem_solver_1aacdc1d10d144990d0aad163f0239efb4>`() const = 0;
	
		virtual
		double
		:ref:`minimize<doxid-d0/d39/classcv_1_1_min_problem_solver_1ade85ab8dceca1ee4974f62b758fa90af>`(:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` x) = 0;
	
		virtual
		void
		:ref:`setFunction<doxid-d0/d39/classcv_1_1_min_problem_solver_1a22632a6392d2e159a8e01c2ed697cbe0>`(const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`Function<doxid-da/da2/classcv_1_1_min_problem_solver_1_1_function>`>& f) = 0;
	
		virtual
		void
		:ref:`setTermCriteria<doxid-d0/d39/classcv_1_1_min_problem_solver_1aad56ae718e6cde978cac28e6ae1d58e7>`(const :ref:`TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`& termcrit) = 0;
	};

	// direct descendants

	class :ref:`ConjGradSolver<doxid-df/d8a/classcv_1_1_conj_grad_solver>`;
	class :ref:`DownhillSolver<doxid-df/dac/classcv_1_1_downhill_solver>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d0/d39/classcv_1_1_min_problem_solver:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Basic interface for all solvers.

Methods
-------

.. index:: pair: function; getFunction
.. _doxid-d0/d39/classcv_1_1_min_problem_solver_1aa21b828e74653fb760f021c27d1f498a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`Function<doxid-da/da2/classcv_1_1_min_problem_solver_1_1_function>`>
	getFunction() const = 0

Getter for the optimized function.

The optimized function is represented by :ref:`Function <doxid-da/da2/classcv_1_1_min_problem_solver_1_1_function>` interface, which requires derivatives to implement the calc(double\*) and getDim() methods to evaluate the function.



.. rubric:: Returns:

Smart-pointer to an object that implements :ref:`Function <doxid-da/da2/classcv_1_1_min_problem_solver_1_1_function>` interface - it represents the function that is being optimized. It can be empty, if no function was given so far.

.. index:: pair: function; getTermCriteria
.. _doxid-d0/d39/classcv_1_1_min_problem_solver_1aacdc1d10d144990d0aad163f0239efb4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`
	getTermCriteria() const = 0

Getter for the previously set terminal criteria for this algorithm.



.. rubric:: Returns:

Deep copy of the terminal criteria used at the moment.

.. index:: pair: function; minimize
.. _doxid-d0/d39/classcv_1_1_min_problem_solver_1ade85ab8dceca1ee4974f62b758fa90af:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	double
	minimize(:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` x) = 0

actually runs the algorithm and performs the minimization.

The sole input parameter determines the centroid of the starting simplex (roughly, it tells where to start), all the others (terminal criteria, initial step, function to be minimized) are supposed to be set via the setters before the call to this method or the default values (not always sensible) will be used.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- x

		- The initial point, that will become a centroid of an initial simplex. After the algorithm will terminate, it will be setted to the point where the algorithm stops, the point of possible minimum.



.. rubric:: Returns:

The value of a function at the point found.

.. index:: pair: function; setFunction
.. _doxid-d0/d39/classcv_1_1_min_problem_solver_1a22632a6392d2e159a8e01c2ed697cbe0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setFunction(const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`Function<doxid-da/da2/classcv_1_1_min_problem_solver_1_1_function>`>& f) = 0

Setter for the optimized function.

It should be called at least once before the call to\* :ref:`minimize() <doxid-d0/d39/classcv_1_1_min_problem_solver_1ade85ab8dceca1ee4974f62b758fa90af>`, as default value is not usable.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- f

		- The new function to optimize.

.. index:: pair: function; setTermCriteria
.. _doxid-d0/d39/classcv_1_1_min_problem_solver_1aad56ae718e6cde978cac28e6ae1d58e7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setTermCriteria(const :ref:`TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`& termcrit) = 0

Set terminal criteria for solver.

This method *is not necessary* to be called before the first call to :ref:`minimize() <doxid-d0/d39/classcv_1_1_min_problem_solver_1ade85ab8dceca1ee4974f62b758fa90af>`, as the default value is sensible.

:ref:`Algorithm <doxid-d1/d41/classcv_1_1_algorithm>` stops when the number of function evaluations done exceeds termcrit.maxCount, when the function values at the vertices of simplex are within termcrit.epsilon range or simplex becomes so small that it can enclosed in a box with termcrit.epsilon sides, whatever comes first.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- termcrit

		- Terminal criteria to be used, represented as :ref:`cv::TermCriteria <doxid-df/d8a/classcv_1_1_term_criteria>` structure.

