.. index:: pair: class; cv::SparsePyrLKOpticalFlow
.. _doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow:

class cv::SparsePyrLKOpticalFlow
================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Class used for calculating a sparse optical flow. :ref:`More...<details-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <tracking.hpp>
	
	class SparsePyrLKOpticalFlow: public :ref:`cv::SparseOpticalFlow<doxid-d2/d91/classcv_1_1_sparse_optical_flow>`
	{
	public:
		// methods
	
		virtual
		int
		:target:`getFlags<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1a1122be3312e4b1405af7e6809b80ea5c>`() const = 0;
	
		virtual
		int
		:target:`getMaxLevel<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1aa1a49396d7b6977c711d78a80ec001c1>`() const = 0;
	
		virtual
		double
		:target:`getMinEigThreshold<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1a894ce4787f3ab153ab82ec6f2595d6e0>`() const = 0;
	
		virtual
		:ref:`TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`
		:target:`getTermCriteria<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1ac7a630400d570c1625412a7cb4eabf19>`() const = 0;
	
		virtual
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`
		:target:`getWinSize<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1a309e61ff46797fbaab2ff2ce82089223>`() const = 0;
	
		virtual
		void
		:target:`setFlags<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1aae8dae87e3609e80b9f8a2ef3d68b51c>`(int flags) = 0;
	
		virtual
		void
		:target:`setMaxLevel<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1a7698f83b203e18781da3b46eeb0363d1>`(int maxLevel) = 0;
	
		virtual
		void
		:target:`setMinEigThreshold<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1aab2a4c2a318a1448d43b1a544c8be934>`(double minEigThreshold) = 0;
	
		virtual
		void
		:target:`setTermCriteria<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1a68ffa532d3ebfad03d9473633372633c>`(:ref:`TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`& crit) = 0;
	
		virtual
		void
		:target:`setWinSize<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1a1af197164636e701cc34224e10284d36>`(:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` winSize) = 0;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<SparsePyrLKOpticalFlow>
		:target:`create<doxid-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow_1ab1b8b97d4f9b814eb64030c64b8292a4>`(
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` winSize = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(21, 21),
			int maxLevel = 3,
			:ref:`TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>` crit = :ref:`TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`(:ref:`TermCriteria::COUNT<doxid-df/d8a/classcv_1_1_term_criteria_1a56fecdc291ccaba8aad27d67ccf72c57aeb9da694ea67b3ef7d524521b580867d>`+:ref:`TermCriteria::EPS<doxid-df/d8a/classcv_1_1_term_criteria_1a56fecdc291ccaba8aad27d67ccf72c57a857609e73e7028e638d2ea649f3b45d5>`, 30, 0.01),
			int flags = 0,
			double minEigThreshold = 1e-4
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`calc<doxid-d2/d91/classcv_1_1_sparse_optical_flow_1a1ac8e7fa41838ab3fffa87bad958f5ab>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` prevImg,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` nextImg,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` prevPts,
			:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` nextPts,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` status,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` err = :ref:`cv::noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`()
			) = 0;

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d8/ddc/classcv_1_1_sparse_pyr_l_k_optical_flow:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Class used for calculating a sparse optical flow.

The class can calculate an optical flow for a sparse feature set using the iterative Lucas-Kanade method with pyramids.



.. rubric:: See also:

:ref:`calcOpticalFlowPyrLK <doxid-dc/d6b/group__video__track_1ga473e4b886d0bcc6b65831eb88ed93323>`

