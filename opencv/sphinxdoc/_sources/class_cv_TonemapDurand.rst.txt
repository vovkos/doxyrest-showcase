.. index:: pair: class; cv::TonemapDurand
.. _doxid-d8/d4e/classcv_1_1_tonemap_durand:

class cv::TonemapDurand
=======================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This algorithm decomposes image into two layers: base layer and detail layer using bilateral filter and compresses contrast of the base layer thus preserving all the details. :ref:`More...<details-d8/d4e/classcv_1_1_tonemap_durand>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <photo.hpp>
	
	class TonemapDurand: public :ref:`cv::Tonemap<doxid-d0/dd3/classcv_1_1_tonemap>`
	{
	public:
		// methods
	
		virtual
		float
		:target:`getContrast<doxid-d8/d4e/classcv_1_1_tonemap_durand_1a108dc5bd773bc00e39adf2db1e719ff1>`() const = 0;
	
		virtual
		float
		:target:`getSaturation<doxid-d8/d4e/classcv_1_1_tonemap_durand_1a320b2e2efdcc0827f5ea283c68c399ca>`() const = 0;
	
		virtual
		float
		:target:`getSigmaColor<doxid-d8/d4e/classcv_1_1_tonemap_durand_1a2a037e689ed44a2c52464c2798fa574f>`() const = 0;
	
		virtual
		float
		:target:`getSigmaSpace<doxid-d8/d4e/classcv_1_1_tonemap_durand_1a9ec0a2a7a6be321e4f87d1d7229a87b2>`() const = 0;
	
		virtual
		void
		:target:`setContrast<doxid-d8/d4e/classcv_1_1_tonemap_durand_1a75fb4d1eec1e65ee49e5b5d57141b091>`(float contrast) = 0;
	
		virtual
		void
		:target:`setSaturation<doxid-d8/d4e/classcv_1_1_tonemap_durand_1a6476e6cabaddc20f1e809dd31116c0de>`(float saturation) = 0;
	
		virtual
		void
		:target:`setSigmaColor<doxid-d8/d4e/classcv_1_1_tonemap_durand_1a82d75c8441743d8074bf44e8883ca888>`(float sigma_color) = 0;
	
		virtual
		void
		:target:`setSigmaSpace<doxid-d8/d4e/classcv_1_1_tonemap_durand_1ad686a332bde8784b08ec4ef14649f317>`(float sigma_space) = 0;
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		float
		:ref:`getGamma<doxid-d0/dd3/classcv_1_1_tonemap_1a147c2b57ed5a5a0566001f4db2ddc0dd>`() const = 0;
	
		virtual
		void
		:ref:`process<doxid-d0/dd3/classcv_1_1_tonemap_1aa705c3b7226f7028a5c117dffab60fe4>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst
			) = 0;
	
		virtual
		void
		:ref:`setGamma<doxid-d0/dd3/classcv_1_1_tonemap_1ac809d2967f942b038b4bf21c97f8b1b7>`(float gamma) = 0;

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d8/d4e/classcv_1_1_tonemap_durand:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This algorithm decomposes image into two layers: base layer and detail layer using bilateral filter and compresses contrast of the base layer thus preserving all the details.

This implementation uses regular bilateral filter from opencv.

Saturation enhancement is possible as in ocvTonemapDrago.

For more information see :ref:`[20] <doxid-d0/de3/citelist_1CITEREF_DD02>`.

