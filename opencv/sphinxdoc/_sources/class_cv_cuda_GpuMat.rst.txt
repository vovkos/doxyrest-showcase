.. index:: pair: class; cv::cuda::GpuMat
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat:

class cv::cuda::GpuMat
======================

.. toctree::
	:hidden:

	class_cv_cuda_GpuMat_Allocator.rst

Overview
~~~~~~~~

Base storage class for GPU memory with reference counting. :ref:`More...<details-d5/da3/classcv_1_1cuda_1_1_gpu_mat>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <cuda.hpp>
	
	class GpuMat
	{
	public:
		// classes
	
		class :ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`;

		// fields
	
		:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* :ref:`allocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a1dc1f7a23c89d2a36f0efc7db1b0d5a4>`;
		int :target:`cols<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a9265a32d8d29fe29804a0cb8f57213e9>`;
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* :ref:`data<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a5139f9492f9079c7b9e414d50da332a3>`;
		const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* :target:`dataend<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ad76c4f58490134f1acf3e580e669c58b>`;
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* :ref:`datastart<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ade4a4dfc61facd5f18143b4c9d56dbae>`;
		int :ref:`flags<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1adfd242b365e79ebc382a0829d8e9f44f>`;
		int* :ref:`refcount<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af528e8b675a72fd79ff1f399b7dd42df>`;
		int :ref:`rows<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a7385022ca9114e5f5058dbb2f12467cb>`;
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` :ref:`step<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af46427ea4c9b3fe7687e3afa84baede3>`;

		// construction
	
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ab44144c4debe262119be744715138977>`(:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator = :ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`());
	
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1adb836f8a2ea0d86452ad7dd4342b3b54>`(
			int rows,
			int cols,
			int type,
			:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator = :ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`()
			);
	
		:target:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a3aff947edbaddb7ae7a3cb78464abfbb>`(
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` size,
			int type,
			:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator = :ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`()
			);
	
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a9d7390fa825e38acaf27fd2fc25e86b6>`(
			int rows,
			int cols,
			int type,
			:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s,
			:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator = :ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`()
			);
	
		:target:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aa1042e0014de92335cfd4fbe789e4144>`(
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` size,
			int type,
			:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s,
			:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator = :ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`()
			);
	
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af1fd1025a62d333c9c970ca3761a23db>`(const GpuMat& m);
	
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ab7210166f4bd124855b520b3dde28fb1>`(
			int rows,
			int cols,
			int type,
			void* data,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` step = :ref:`Mat::AUTO_STEP<doxid-db/de6/classcv_1_1_mat_1acb0821facd341e5c9c94a22f6ca6acb8a1c147538fd896f4f9abce9eaea9727e3>`
			);
	
		:target:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a658d498dbb3ecff8bacb52934862533d>`(
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` size,
			int type,
			void* data,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` step = :ref:`Mat::AUTO_STEP<doxid-db/de6/classcv_1_1_mat_1acb0821facd341e5c9c94a22f6ca6acb8a1c147538fd896f4f9abce9eaea9727e3>`
			);
	
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1acb11621e15a3e06d243b73ae04a0f398>`(
			const GpuMat& m,
			:ref:`Range<doxid-d7/d65/classcv_1_1_range>` rowRange,
			:ref:`Range<doxid-d7/d65/classcv_1_1_range>` colRange
			);
	
		:target:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aed4eea5d06f115f2a137822cb11cea46>`(
			const GpuMat& m,
			:ref:`Rect<doxid-dc/d84/group__core__basic_1ga11d95de507098e90bad732b9345402e8>` roi
			);
	
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a45500c2bf2a548cb8c27231d5f9d697b>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` arr,
			:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator = :ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`()
			);

		// methods
	
		static
		:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`*
		:ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`();
	
		static
		void
		:target:`setDefaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aa258acc562c8369ed609e0ce17697fa9>`(:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator);
	
		GpuMat&
		:ref:`adjustROI<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ae01becaff20100678a2fca4fce4dd975>`(
			int dtop,
			int dbottom,
			int dleft,
			int dright
			);
	
		void
		:target:`assignTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a03e76eb8993215020cff624ace66d7e6>`(
			GpuMat& m,
			int type = -1
			) const;
	
		int
		:ref:`channels<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a538fc6d75281b4ecb7ad50e4555f3fc6>`() const;
	
		GpuMat
		:ref:`clone<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ae1d42819f7f3251478cd6edab8069758>`() const;
	
		GpuMat
		:ref:`col<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aac2b18c2ef3fbefc6f776cc313b966c0>`(int x) const;
	
		GpuMat
		:ref:`colRange<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a7256892911593daf1bdefb183d6fd29e>`(
			int startcol,
			int endcol
			) const;
	
		GpuMat
		:target:`colRange<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1acfcbd3a61ca20ec908dc6de76ef6e5bb>`(:ref:`Range<doxid-d7/d65/classcv_1_1_range>` r) const;
	
		void
		:ref:`convertTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a3a1b076e54d8a8503014e27a5440d98a>`(
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			int rtype
			) const;
	
		void
		:ref:`convertTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a079d3d6541bb2fe6127c8f5d58953c9c>`(
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			int rtype,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
			) const;
	
		void
		:ref:`convertTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a656ac1f6a1426527f838c19e2d677dc0>`(
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			int rtype,
			double alpha,
			double beta = 0.0
			) const;
	
		void
		:ref:`convertTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a54f6bde0a55552bc80a48ecbc8e272d6>`(
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			int rtype,
			double alpha,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
			) const;
	
		void
		:ref:`convertTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a408e9ba5344ab7d3aa27323774de118e>`(
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			int rtype,
			double alpha,
			double beta,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
			) const;
	
		void
		:ref:`copyTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a948c562ee340c0678a44884bde1f5a3e>`(:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst) const;
	
		void
		:ref:`copyTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1adf64af21a2bb13276269584c2a6e1b81>`(
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
			) const;
	
		void
		:ref:`copyTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ad47f7b0aaf53fa904a6381e7d0192145>`(
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask
			) const;
	
		void
		:ref:`copyTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a49b74a0ef2076543de438fadde55de7b>`(
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
			) const;
	
		void
		:ref:`create<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af21454929f3efba4c783edbc27042200>`(
			int rows,
			int cols,
			int type
			);
	
		void
		:target:`create<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af88f29d92f6fc2c29cd6ff8960954d4e>`(
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` size,
			int type
			);
	
		int
		:ref:`depth<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aaa229d9b2b2f60ecae3b5fbf0603c1b9>`() const;
	
		void
		:ref:`download<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a027e74e4364ddfd9687b58aa5db8d4e8>`(:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst) const;
	
		void
		:ref:`download<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a2522fd0642c30e0455ec52a28bd3be7b>`(
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
			) const;
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`elemSize<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a7e73b4fa94d32e0585564217ebe3fc6c>`() const;
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`elemSize1<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a988831407704239eadc036df1b615de5>`() const;
	
		bool
		:ref:`empty<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a509710f61e3a7e13b5ebb2b40984900a>`() const;
	
		bool
		:ref:`isContinuous<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a400fc4c7880bf132f2ffea03892486b0>`() const;
	
		void
		:ref:`locateROI<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a934d25560bfb1f03c0077e437d41e0cb>`(
			:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`& wholeSize,
			:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`& ofs
			) const;
	
		template <typename _Tp>
		:target:`operator PtrStep< _Tp ><doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a8b0aa2f9bdf8b40f43be8d8068f2e389>`() const;
	
		template <typename _Tp>
		:target:`operator PtrStepSz< _Tp ><doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a939f8ef4be2fc9a51058c2404d491f74>`() const;
	
		GpuMat
		:ref:`operator()<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a2b3c25e36b0f82ca8f9f74b6ae68c41d>`(
			:ref:`Range<doxid-d7/d65/classcv_1_1_range>` rowRange,
			:ref:`Range<doxid-d7/d65/classcv_1_1_range>` colRange
			) const;
	
		GpuMat
		:target:`operator()<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a217e27e7051bed168c34ba767915cc63>`(:ref:`Rect<doxid-dc/d84/group__core__basic_1ga11d95de507098e90bad732b9345402e8>` roi) const;
	
		GpuMat&
		:ref:`operator=<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ad1432eed28a34f995a641a296281e01c>`(const GpuMat& m);
	
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`*
		:ref:`ptr<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aa83fa0825c60eb22a11a87a98c3cd5ed>`(int y = 0);
	
		const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`*
		:target:`ptr<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ad95918b9342332a41a584b21134b0959>`(int y = 0) const;
	
		template <typename _Tp>
		_Tp*
		:ref:`ptr<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af0389962003eec644007c7ca85a04f6d>`(int y = 0);
	
		template <typename _Tp>
		const _Tp*
		:target:`ptr<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a2d7003ff9fa0a24c5e4986174c29820f>`(int y = 0) const;
	
		void
		:ref:`release<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a460951a00945774e9da0b1062ea0a319>`();
	
		GpuMat
		:ref:`reshape<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a408e22ed824d1ddf59f58bda895017a8>`(
			int cn,
			int rows = 0
			) const;
	
		GpuMat
		:ref:`row<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a8d6954870e3c3eacc0ea85cd38bd86b4>`(int y) const;
	
		GpuMat
		:ref:`rowRange<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a0bf9a88fc518cc9986808aaf916f2182>`(
			int startrow,
			int endrow
			) const;
	
		GpuMat
		:target:`rowRange<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aabccb49164b02284e26884360b7062e8>`(:ref:`Range<doxid-d7/d65/classcv_1_1_range>` r) const;
	
		GpuMat&
		:ref:`setTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ab263999dea4f7f28d4dd4ced6d2e970b>`(:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s);
	
		GpuMat&
		:ref:`setTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aa155961a4c8c19bdb2c9b1886e45ce9a>`(
			:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
			);
	
		GpuMat&
		:ref:`setTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a16cb9be32213df86f3b55ec131abff70>`(
			:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask
			);
	
		GpuMat&
		:ref:`setTo<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a1090e7ff25e23cf6243809e9a031b51d>`(
			:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
			);
	
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`
		:ref:`size<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ab02f97698d8272f0d253f3029329ed10>`() const;
	
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
		:ref:`step1<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a5ead91d096cca20e59ba9af8574187cc>`() const;
	
		void
		:ref:`swap<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a7135c058aef51c37884a2b2ae8151631>`(GpuMat& mat);
	
		int
		:ref:`type<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ab0c835e86e2af3c8fc14fee8a2937281>`() const;
	
		void
		:ref:`upload<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a00ef5bfe18d14623dcf578a35e40a46b>`(:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` arr);
	
		void
		:ref:`upload<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a89d1f885b9f5a479a7c4eb319e7368ae>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` arr,
			:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
			);
	};

	// direct descendants

	template <typename T>
	class :ref:`GpuMat_<doxid-d6/d0a/classcv_1_1cudev_1_1_gpu_mat__>`;
.. _details-d5/da3/classcv_1_1cuda_1_1_gpu_mat:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Base storage class for GPU memory with reference counting.

Its interface matches the :ref:`Mat <doxid-db/de6/classcv_1_1_mat>` interface with the following limitations:

* no arbitrary dimensions support (only 2D)

* no functions that return references to their data (because references on GPU are not valid for CPU)

* no expression templates technique support

Beware that the latter limitation may lead to overloaded matrix operators that cause memory allocations. The :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` class is convertible to cuda::PtrStepSz and cuda::PtrStep so it can be passed directly to the kernel.

In contrast with :ref:`Mat <doxid-db/de6/classcv_1_1_mat>`, in most cases :ref:`GpuMat::isContinuous() <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a400fc4c7880bf132f2ffea03892486b0>` == false . This means that rows are aligned to a size depending on the hardware. Single-row :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` is always a continuous matrix.

You are not recommended to leave static or global :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` variables allocated, that is, to rely on its destructor. The destruction order of such variables and CUDA context is undefined. GPU memory release function returns error if the CUDA context has been destroyed before.



.. rubric:: See also:

:ref:`Mat <doxid-db/de6/classcv_1_1_mat>`

Fields
------

.. index:: pair: variable; allocator
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a1dc1f7a23c89d2a36f0efc7db1b0d5a4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator

allocator

.. index:: pair: variable; data
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a5139f9492f9079c7b9e414d50da332a3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* data

pointer to the data

.. index:: pair: variable; datastart
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ade4a4dfc61facd5f18143b4c9d56dbae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* datastart

helper fields used in locateROI and adjustROI

.. index:: pair: variable; flags
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1adfd242b365e79ebc382a0829d8e9f44f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int flags

includes several bit-fields:

* the magic signature

* continuity flag

* depth

* number of channels

.. index:: pair: variable; refcount
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af528e8b675a72fd79ff1f399b7dd42df:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int* refcount

pointer to the reference counter; when :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` points to user-allocated data, the pointer is NULL

.. index:: pair: variable; rows
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a7385022ca9114e5f5058dbb2f12467cb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int rows

the number of rows and columns

.. index:: pair: variable; step
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af46427ea4c9b3fe7687e3afa84baede3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` step

a distance between successive rows in bytes; includes the gap if any

Construction
------------

.. index:: pair: function; GpuMat
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ab44144c4debe262119be744715138977:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat(:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator = :ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`())

default constructor

.. index:: pair: function; GpuMat
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1adb836f8a2ea0d86452ad7dd4342b3b54:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat(
		int rows,
		int cols,
		int type,
		:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator = :ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`()
		)

constructs :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` of the specified size and type

.. index:: pair: function; GpuMat
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a9d7390fa825e38acaf27fd2fc25e86b6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat(
		int rows,
		int cols,
		int type,
		:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s,
		:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator = :ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`()
		)

constucts :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` and fills it with the specified value _s

.. index:: pair: function; GpuMat
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af1fd1025a62d333c9c970ca3761a23db:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat(const GpuMat& m)

copy constructor

.. index:: pair: function; GpuMat
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ab7210166f4bd124855b520b3dde28fb1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat(
		int rows,
		int cols,
		int type,
		void* data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` step = :ref:`Mat::AUTO_STEP<doxid-db/de6/classcv_1_1_mat_1acb0821facd341e5c9c94a22f6ca6acb8a1c147538fd896f4f9abce9eaea9727e3>`
		)

constructor for :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` headers pointing to user-allocated data

.. index:: pair: function; GpuMat
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1acb11621e15a3e06d243b73ae04a0f398:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat(
		const GpuMat& m,
		:ref:`Range<doxid-d7/d65/classcv_1_1_range>` rowRange,
		:ref:`Range<doxid-d7/d65/classcv_1_1_range>` colRange
		)

creates a :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` header for a part of the bigger matrix

.. index:: pair: function; GpuMat
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a45500c2bf2a548cb8c27231d5f9d697b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` arr,
		:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`* allocator = :ref:`defaultAllocator<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7>`()
		)

builds :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` from host memory (Blocking call)

Methods
-------

.. index:: pair: function; defaultAllocator
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a4bd460fbc7a4ccbddf65b413aef788f7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	:ref:`Allocator<doxid-d0/dbb/classcv_1_1cuda_1_1_gpu_mat_1_1_allocator>`*
	defaultAllocator()

default allocator

.. index:: pair: function; adjustROI
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ae01becaff20100678a2fca4fce4dd975:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat&
	adjustROI(
		int dtop,
		int dbottom,
		int dleft,
		int dright
		)

moves/resizes the current :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` ROI inside the parent :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>`

.. index:: pair: function; channels
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a538fc6d75281b4ecb7ad50e4555f3fc6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	channels() const

returns number of channels

.. index:: pair: function; clone
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ae1d42819f7f3251478cd6edab8069758:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat
	clone() const

returns deep copy of the :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>`, i.e. the data is copied

.. index:: pair: function; col
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aac2b18c2ef3fbefc6f776cc313b966c0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat
	col(int x) const

returns a new :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` header for the specified column

.. index:: pair: function; colRange
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a7256892911593daf1bdefb183d6fd29e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat
	colRange(
		int startcol,
		int endcol
		) const

... for the specified column span

.. index:: pair: function; convertTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a3a1b076e54d8a8503014e27a5440d98a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	convertTo(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int rtype
		) const

converts :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` to another datatype (Blocking call)

.. index:: pair: function; convertTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a079d3d6541bb2fe6127c8f5d58953c9c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	convertTo(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int rtype,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
		) const

converts :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` to another datatype (Non-Blocking call)

.. index:: pair: function; convertTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a656ac1f6a1426527f838c19e2d677dc0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	convertTo(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int rtype,
		double alpha,
		double beta = 0.0
		) const

converts :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` to another datatype with scaling (Blocking call)

.. index:: pair: function; convertTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a54f6bde0a55552bc80a48ecbc8e272d6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	convertTo(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int rtype,
		double alpha,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
		) const

converts :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` to another datatype with scaling (Non-Blocking call)

.. index:: pair: function; convertTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a408e9ba5344ab7d3aa27323774de118e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	convertTo(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int rtype,
		double alpha,
		double beta,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
		) const

converts :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` to another datatype with scaling (Non-Blocking call)

.. index:: pair: function; copyTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a948c562ee340c0678a44884bde1f5a3e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	copyTo(:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst) const

copies the :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` content to device memory (Blocking call)

.. index:: pair: function; copyTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1adf64af21a2bb13276269584c2a6e1b81:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	copyTo(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
		) const

copies the :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` content to device memory (Non-Blocking call)

.. index:: pair: function; copyTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ad47f7b0aaf53fa904a6381e7d0192145:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	copyTo(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask
		) const

copies those :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` elements to "m" that are marked with non-zero mask elements (Blocking call)

.. index:: pair: function; copyTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a49b74a0ef2076543de438fadde55de7b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	copyTo(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
		) const

copies those :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` elements to "m" that are marked with non-zero mask elements (Non-Blocking call)

.. index:: pair: function; create
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af21454929f3efba4c783edbc27042200:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	create(
		int rows,
		int cols,
		int type
		)

allocates new :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` data unless the :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` already has specified size and type

.. index:: pair: function; depth
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aaa229d9b2b2f60ecae3b5fbf0603c1b9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	depth() const

returns element type

.. index:: pair: function; download
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a027e74e4364ddfd9687b58aa5db8d4e8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	download(:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst) const

pefroms download data from device to host memory (Blocking call)

.. index:: pair: function; download
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a2522fd0642c30e0455ec52a28bd3be7b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	download(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
		) const

pefroms download data from device to host memory (Non-Blocking call)

.. index:: pair: function; elemSize
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a7e73b4fa94d32e0585564217ebe3fc6c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
	elemSize() const

returns element size in bytes

.. index:: pair: function; elemSize1
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a988831407704239eadc036df1b615de5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
	elemSize1() const

returns the size of element channel in bytes

.. index:: pair: function; empty
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a509710f61e3a7e13b5ebb2b40984900a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	empty() const

returns true if :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` data is NULL

.. index:: pair: function; isContinuous
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a400fc4c7880bf132f2ffea03892486b0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isContinuous() const

returns true iff the :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` data is continuous (i.e. when there are no gaps between successive rows)

.. index:: pair: function; locateROI
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a934d25560bfb1f03c0077e437d41e0cb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	locateROI(
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`& wholeSize,
		:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`& ofs
		) const

locates :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` header within a parent :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>`

.. index:: pair: function; operator()
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a2b3c25e36b0f82ca8f9f74b6ae68c41d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat
	operator()(
		:ref:`Range<doxid-d7/d65/classcv_1_1_range>` rowRange,
		:ref:`Range<doxid-d7/d65/classcv_1_1_range>` colRange
		) const

extracts a rectangular sub-GpuMat (this is a generalized form of row, rowRange etc.)

.. index:: pair: function; operator=
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ad1432eed28a34f995a641a296281e01c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat&
	operator=(const GpuMat& m)

assignment operators

.. index:: pair: function; ptr
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aa83fa0825c60eb22a11a87a98c3cd5ed:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`*
	ptr(int y = 0)

returns pointer to y-th row

.. index:: pair: function; ptr
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1af0389962003eec644007c7ca85a04f6d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename _Tp>
	_Tp*
	ptr(int y = 0)

template version of the above method

.. index:: pair: function; release
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a460951a00945774e9da0b1062ea0a319:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	release()

decreases reference counter, deallocate the data when reference counter reaches 0

.. index:: pair: function; reshape
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a408e22ed824d1ddf59f58bda895017a8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat
	reshape(
		int cn,
		int rows = 0
		) const

creates alternative :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` header for the same data, with different number of channels and/or different number of rows

.. index:: pair: function; row
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a8d6954870e3c3eacc0ea85cd38bd86b4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat
	row(int y) const

returns a new :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` header for the specified row

.. index:: pair: function; rowRange
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a0bf9a88fc518cc9986808aaf916f2182:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat
	rowRange(
		int startrow,
		int endrow
		) const

... for the specified row span

.. index:: pair: function; setTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ab263999dea4f7f28d4dd4ced6d2e970b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat&
	setTo(:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s)

sets some of the :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` elements to s (Blocking call)

.. index:: pair: function; setTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1aa155961a4c8c19bdb2c9b1886e45ce9a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat&
	setTo(
		:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
		)

sets some of the :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` elements to s (Non-Blocking call)

.. index:: pair: function; setTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a16cb9be32213df86f3b55ec131abff70:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat&
	setTo(
		:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask
		)

sets some of the :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` elements to s, according to the mask (Blocking call)

.. index:: pair: function; setTo
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a1090e7ff25e23cf6243809e9a031b51d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	GpuMat&
	setTo(
		:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` s,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
		)

sets some of the :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` elements to s, according to the mask (Non-Blocking call)

.. index:: pair: function; size
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ab02f97698d8272f0d253f3029329ed10:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`
	size() const

returns :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` size : width == number of columns, height == number of rows

.. index:: pair: function; step1
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a5ead91d096cca20e59ba9af8574187cc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>`
	step1() const

returns step/elemSize1()

.. index:: pair: function; swap
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a7135c058aef51c37884a2b2ae8151631:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	swap(GpuMat& mat)

swaps with other smart pointer

.. index:: pair: function; type
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1ab0c835e86e2af3c8fc14fee8a2937281:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	type() const

returns element type

.. index:: pair: function; upload
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a00ef5bfe18d14623dcf578a35e40a46b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	upload(:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` arr)

pefroms upload data to :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` (Blocking call)

.. index:: pair: function; upload
.. _doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat_1a89d1f885b9f5a479a7c4eb319e7368ae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	upload(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` arr,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream
		)

pefroms upload data to :ref:`GpuMat <doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` (Non-Blocking call)

