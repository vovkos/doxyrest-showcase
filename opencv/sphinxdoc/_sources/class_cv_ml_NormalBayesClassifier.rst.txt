.. index:: pair: class; cv::ml::NormalBayesClassifier
.. _doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier:

class cv::ml::NormalBayesClassifier
===================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Bayes classifier for normally distributed data. :ref:`More...<details-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <ml.hpp>
	
	class NormalBayesClassifier: public :ref:`cv::ml::StatModel<doxid-d9/d36/classcv_1_1ml_1_1_stat_model>`
	{
	public:
		// methods
	
		virtual
		float
		:ref:`predictProb<doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier_1a146e961a610d26f3c3c3b85da5406e08>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` inputs,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` outputs,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` outputProbs,
			int flags = 0
			) const = 0;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<NormalBayesClassifier>
		:ref:`create<doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier_1a785df31a648deca899a5d6ee56bcdab0>`();
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<NormalBayesClassifier>
		:ref:`load<doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier_1a147a2579967d89637f0434c261bfb1e0>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filepath,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& nodeName = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// enums
	
		enum :ref:`Flags<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1af1ea864e1c19796e6264ebb3950c0b9a>`;

		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		float
		:ref:`calcError<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1aa6a71b1ee5b7fa0b07b55e77106cda13>`(
			const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`TrainData<doxid-d3/daf/classcv_1_1ml_1_1_train_data>`>& data,
			bool test,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` resp
			) const;
	
		virtual
		bool
		:ref:`empty<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1a398fed53d9312b923e34aefd42f70e17>`() const;
	
		virtual
		int
		:ref:`getVarCount<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1a783b92c436c7a2978e2d4bbb3cfb6e0c>`() const = 0;
	
		virtual
		bool
		:ref:`isClassifier<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1a1121a835feedefdcdb8624966567aec6>`() const = 0;
	
		virtual
		bool
		:ref:`isTrained<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1aab380b59eb30b50254ef1b804774c4d8>`() const = 0;
	
		virtual
		float
		:ref:`predict<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1a1a7e49e1febd10392452727498771bc1>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` samples,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` results = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			int flags = 0
			) const = 0;
	
		virtual
		bool
		:ref:`train<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1af96a0e04f1677a835cc25263c7db3c0c>`(
			const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`TrainData<doxid-d3/daf/classcv_1_1ml_1_1_train_data>`>& trainData,
			int flags = 0
			);
	
		virtual
		bool
		:ref:`train<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1aeb25a75f438864fb25af182fb4b1b96f>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` samples,
			int layout,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` responses
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`train<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1af93a21ea5866cd305936a03742f69af8>`(
			const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`TrainData<doxid-d3/daf/classcv_1_1ml_1_1_train_data>`>& data,
			int flags = 0
			);

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Bayes classifier for normally distributed data.



.. rubric:: See also:

:ref:`Normal Bayes Classifier <doxid-dc/dd6/ml_intro_1ml_intro_bayes>`

Methods
-------

.. index:: pair: function; predictProb
.. _doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier_1a146e961a610d26f3c3c3b85da5406e08:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	float
	predictProb(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` inputs,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` outputs,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` outputProbs,
		int flags = 0
		) const = 0

Predicts the response for sample(s).

The method estimates the most probable classes for input vectors. Input vectors (one or more) are stored as rows of the matrix inputs. In case of multiple input vectors, there should be one output vector outputs. The predicted class for a single input vector is returned by the method. The vector outputProbs contains the output probabilities corresponding to each element of result.

.. index:: pair: function; create
.. _doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier_1a785df31a648deca899a5d6ee56bcdab0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<NormalBayesClassifier>
	create()

Creates empty model Use :ref:`StatModel::train <doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1af96a0e04f1677a835cc25263c7db3c0c>` to train the model after creation.

.. index:: pair: function; load
.. _doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier_1a147a2579967d89637f0434c261bfb1e0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<NormalBayesClassifier>
	load(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filepath,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& nodeName = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
		)

Loads and creates a serialized :ref:`NormalBayesClassifier <doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier>` from a file.

Use :ref:`NormalBayesClassifier::save <doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>` to serialize and store an :ref:`NormalBayesClassifier <doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier>` to disk. Load the :ref:`NormalBayesClassifier <doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier>` from this file again, by calling this function with the path to the file. Optionally specify the node for the file containing the classifier



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filepath

		- path to serialized :ref:`NormalBayesClassifier <doxid-d0/df9/classcv_1_1ml_1_1_normal_bayes_classifier>`

	*
		- nodeName

		- name of node containing the classifier

