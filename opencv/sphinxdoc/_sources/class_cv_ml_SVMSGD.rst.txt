.. index:: pair: class; cv::ml::SVMSGD
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d:

class cv::ml::SVMSGD
====================

.. toctree::
	:hidden:

	enum_cv_ml_SVMSGD_MarginType.rst
	enum_cv_ml_SVMSGD_SvmsgdType.rst

Overview
~~~~~~~~

Stochastic Gradient Descent :ref:`SVM <doxid-da/d05/classcv_1_1ml_1_1_s_v_m>` classifier. :ref:`More...<details-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <ml.hpp>
	
	class SVMSGD: public :ref:`cv::ml::StatModel<doxid-d9/d36/classcv_1_1ml_1_1_stat_model>`
	{
	public:
		// enums
	
		enum :ref:`MarginType<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9b5c495b5593ffda8a7055da07d0b751>`;
		enum :ref:`SvmsgdType<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ab028695cc8ec1491888d8d03f80bc8c2>`;

		// methods
	
		virtual
		float
		:ref:`getInitialStepSize<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a362d36881b56090a107f23c6fe48bd2c>`() const = 0;
	
		virtual
		float
		:ref:`getMarginRegularization<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1aa2254bcef562303cefefbf2bfe9fd1b5>`() const = 0;
	
		virtual
		int
		:ref:`getMarginType<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9c088f661905719298a325e2a9d65ddc>`() const = 0;
	
		virtual
		float
		:ref:`getShift<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1adedb13011cf8f2e7d45a4dff6361b274>`() = 0;
	
		virtual
		float
		:ref:`getStepDecreasingPower<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a7399ae26d6d54b1192d362fe5f1413ad>`() const = 0;
	
		virtual
		int
		:ref:`getSvmsgdType<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a53db2bca40cef926eb7d750f949fb942>`() const = 0;
	
		virtual
		:ref:`TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`
		:ref:`getTermCriteria<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1aedc9b61b3d4d8344034f61f0e6e3688d>`() const = 0;
	
		virtual
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
		:ref:`getWeights<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a37ad5308ff0ceebc60f4451a0bdc4e5b>`() = 0;
	
		virtual
		void
		:ref:`setInitialStepSize<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1abdba737e4293665f091f6433631f4dc9>`(float InitialStepSize) = 0;
	
		virtual
		void
		:ref:`setMarginRegularization<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a2e16734e58800183162d1ab6d7d8fe7f>`(float marginRegularization) = 0;
	
		virtual
		void
		:ref:`setMarginType<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a79385571c8163f5c0c157e7a7e607a0b>`(int marginType) = 0;
	
		virtual
		void
		:ref:`setOptimalParameters<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ac9ead52ddcce2953c61335185de4178c>`(
			int svmsgdType = :ref:`SVMSGD::ASGD<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ab028695cc8ec1491888d8d03f80bc8c2abb41d794ce113aa2123f45120e8354af>`,
			int marginType = :ref:`SVMSGD::SOFT_MARGIN<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9b5c495b5593ffda8a7055da07d0b751a8d6a7f40e040703bb29dd3896b86cc9c>`
			) = 0;
	
		virtual
		void
		:ref:`setStepDecreasingPower<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a681aa5262a86ff0c00c88c5e4dc5f72b>`(float stepDecreasingPower) = 0;
	
		virtual
		void
		:ref:`setSvmsgdType<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ae0c76a4387f722444128f206ba4dd0fc>`(int svmsgdType) = 0;
	
		virtual
		void
		:ref:`setTermCriteria<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1abf9c385dd82c06d6862c0c2aa62e4efc>`(const :ref:`cv::TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`& val) = 0;
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<SVMSGD>
		:ref:`create<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a8dcb30f2aa335cf943fe52c2b8b7e954>`();
	
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<SVMSGD>
		:ref:`load<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a6945188e89c36b33187ab57dbc2364dc>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filepath,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& nodeName = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// enums
	
		enum :ref:`Flags<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1af1ea864e1c19796e6264ebb3950c0b9a>`;

		// methods
	
		virtual
		void
		:ref:`clear<doxid-d1/d41/classcv_1_1_algorithm_1aec9c965448e4dc851d7cacd3abd84cd1>`();
	
		virtual
		bool
		:ref:`empty<doxid-d1/d41/classcv_1_1_algorithm_1ab6a18f1825475643e94381697d413972>`() const;
	
		virtual
		:ref:`String<doxid-dc/d0e/classcv_1_1_string>`
		:ref:`getDefaultName<doxid-d1/d41/classcv_1_1_algorithm_1a286fc82744ccab3d248aca44524266a9>`() const;
	
		virtual
		void
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1aef2ad3f4145bd6e8c3664eb1c4b5e1e6>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		void
		:ref:`save<doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename) const;
	
		virtual
		void
		:ref:`write<doxid-d1/d41/classcv_1_1_algorithm_1a1f8ad7b8add515077367fb9949a174d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`load<doxid-d1/d41/classcv_1_1_algorithm_1a623841c33b58ea9c4847da04607e067b>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filename,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`loadFromString<doxid-d1/d41/classcv_1_1_algorithm_1a3ba305a10d02479c13cf7d169c321547>`(
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& strModel,
			const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& objname = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`read<doxid-d1/d41/classcv_1_1_algorithm_1ad8c591bacb34c485f5b7a250c314fc53>`(const :ref:`FileNode<doxid-dc/d21/classcv_1_1_file_node>`& fn);
	
		virtual
		float
		:ref:`calcError<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1aa6a71b1ee5b7fa0b07b55e77106cda13>`(
			const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`TrainData<doxid-d3/daf/classcv_1_1ml_1_1_train_data>`>& data,
			bool test,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` resp
			) const;
	
		virtual
		bool
		:ref:`empty<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1a398fed53d9312b923e34aefd42f70e17>`() const;
	
		virtual
		int
		:ref:`getVarCount<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1a783b92c436c7a2978e2d4bbb3cfb6e0c>`() const = 0;
	
		virtual
		bool
		:ref:`isClassifier<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1a1121a835feedefdcdb8624966567aec6>`() const = 0;
	
		virtual
		bool
		:ref:`isTrained<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1aab380b59eb30b50254ef1b804774c4d8>`() const = 0;
	
		virtual
		float
		:ref:`predict<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1a1a7e49e1febd10392452727498771bc1>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` samples,
			:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` results = :ref:`noArray<doxid-dc/d84/group__core__basic_1gad9287b23bba2fed753b36ef561ae7346>`(),
			int flags = 0
			) const = 0;
	
		virtual
		bool
		:ref:`train<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1af96a0e04f1677a835cc25263c7db3c0c>`(
			const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`TrainData<doxid-d3/daf/classcv_1_1ml_1_1_train_data>`>& trainData,
			int flags = 0
			);
	
		virtual
		bool
		:ref:`train<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1aeb25a75f438864fb25af182fb4b1b96f>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` samples,
			int layout,
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` responses
			);
	
		template <typename _Tp>
		static
		:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<_Tp>
		:ref:`train<doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1af93a21ea5866cd305936a03742f69af8>`(
			const :ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`TrainData<doxid-d3/daf/classcv_1_1ml_1_1_train_data>`>& data,
			int flags = 0
			);

	protected:
		// methods
	
		void
		:ref:`writeFormat<doxid-d1/d41/classcv_1_1_algorithm_1a68eeca71617474ad3d4561786f0289d2>`(:ref:`FileStorage<doxid-d9/df9/classcv_1_1_file_storage>`& fs) const;

.. _details-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Stochastic Gradient Descent :ref:`SVM <doxid-da/d05/classcv_1_1ml_1_1_s_v_m>` classifier.

:ref:`SVMSGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d>` provides a fast and easy-to-use implementation of the :ref:`SVM <doxid-da/d05/classcv_1_1ml_1_1_s_v_m>` classifier using the Stochastic Gradient Descent approach, as presented in :ref:`[6] <doxid-d0/de3/citelist_1CITEREF_bottou2010large>`.

The classifier has following parameters:

* model type,

* margin type,

* margin regularization (:math:`\lambda`),

* initial step size (:math:`\gamma_0`),

* step decreasing power (:math:`c`),

* and termination criteria.

The model type may have one of the following values: :ref:`SGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ab028695cc8ec1491888d8d03f80bc8c2ab85c6ad25c382a69f12a7b5d970cb112>` and :ref:`ASGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ab028695cc8ec1491888d8d03f80bc8c2abb41d794ce113aa2123f45120e8354af>`.

* :ref:`SGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ab028695cc8ec1491888d8d03f80bc8c2ab85c6ad25c382a69f12a7b5d970cb112>` is the classic version of :ref:`SVMSGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d>` classifier: every next step is calculated by the formula
  
  .. math::
  
  	w_{t+1} = w_t - \gamma(t) \frac{dQ_i}{dw} |_{w = w_t}
  
  where
  
  * :math:`w_t` is the weights vector for decision function at step :math:`t`,
  
  * :math:`\gamma(t)` is the step size of model parameters at the iteration :math:`t`, it is decreased on each step by the formula :math:`\gamma(t) = \gamma_0 (1 + \lambda \gamma_0 t) ^ {-c}`
  
  * :math:`Q_i` is the target functional from :ref:`SVM <doxid-da/d05/classcv_1_1ml_1_1_s_v_m>` task for sample with number :math:`i`, this sample is chosen stochastically on each step of the algorithm.

* :ref:`ASGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ab028695cc8ec1491888d8d03f80bc8c2abb41d794ce113aa2123f45120e8354af>` is Average Stochastic Gradient Descent :ref:`SVM <doxid-da/d05/classcv_1_1ml_1_1_s_v_m>` Classifier. ASGD classifier averages weights vector on each step of algorithm by the formula :math:`\widehat{w}_{t+1} = \frac{t}{1+t}\widehat{w}_{t} + \frac{1}{1+t}w_{t+1}`

The recommended model type is ASGD (following :ref:`[6] <doxid-d0/de3/citelist_1CITEREF_bottou2010large>`).

The margin type may have one of the following values: :ref:`SOFT_MARGIN <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9b5c495b5593ffda8a7055da07d0b751a8d6a7f40e040703bb29dd3896b86cc9c>` or :ref:`HARD_MARGIN <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9b5c495b5593ffda8a7055da07d0b751acd1de0100047b02983977bc0a98ff86f>`.

* You should use :ref:`HARD_MARGIN <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9b5c495b5593ffda8a7055da07d0b751acd1de0100047b02983977bc0a98ff86f>` type, if you have linearly separable sets.

* You should use :ref:`SOFT_MARGIN <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9b5c495b5593ffda8a7055da07d0b751a8d6a7f40e040703bb29dd3896b86cc9c>` type, if you have non-linearly separable sets or sets with outliers.

* In the general case (if you know nothing about linear separability of your sets), use SOFT_MARGIN.

The other parameters may be described as follows:

* Margin regularization parameter is responsible for weights decreasing at each step and for the strength of restrictions on outliers (the less the parameter, the less probability that an outlier will be ignored). Recommended value for SGD model is 0.0001, for ASGD model is 0.00001.

* Initial step size parameter is the initial value for the step size :math:`\gamma(t)`. You will have to find the best initial step for your problem.

* Step decreasing power is the power parameter for :math:`\gamma(t)` decreasing by the formula, mentioned above. Recommended value for SGD model is 1, for ASGD model is 0.75.

* Termination criteria can be :ref:`TermCriteria::COUNT <doxid-df/d8a/classcv_1_1_term_criteria_1a56fecdc291ccaba8aad27d67ccf72c57aeb9da694ea67b3ef7d524521b580867d>`, :ref:`TermCriteria::EPS <doxid-df/d8a/classcv_1_1_term_criteria_1a56fecdc291ccaba8aad27d67ccf72c57a857609e73e7028e638d2ea649f3b45d5>` or :ref:`TermCriteria::COUNT <doxid-df/d8a/classcv_1_1_term_criteria_1a56fecdc291ccaba8aad27d67ccf72c57aeb9da694ea67b3ef7d524521b580867d>` + :ref:`TermCriteria::EPS <doxid-df/d8a/classcv_1_1_term_criteria_1a56fecdc291ccaba8aad27d67ccf72c57a857609e73e7028e638d2ea649f3b45d5>`. You will have to find the best termination criteria for your problem.

Note that the parameters margin regularization, initial step size, and step decreasing power should be positive.

To use :ref:`SVMSGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d>` algorithm do as follows:

* first, create the :ref:`SVMSGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d>` object. The algoorithm will set optimal parameters by default, but you can set your own parameters via functions :ref:`setSvmsgdType() <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ae0c76a4387f722444128f206ba4dd0fc>`, :ref:`setMarginType() <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a79385571c8163f5c0c157e7a7e607a0b>`, :ref:`setMarginRegularization() <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a2e16734e58800183162d1ab6d7d8fe7f>`, :ref:`setInitialStepSize() <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1abdba737e4293665f091f6433631f4dc9>`, and :ref:`setStepDecreasingPower() <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a681aa5262a86ff0c00c88c5e4dc5f72b>`.

* then the :ref:`SVM <doxid-da/d05/classcv_1_1ml_1_1_s_v_m>` model can be trained using the train features and the correspondent labels by the method :ref:`train() <doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1af96a0e04f1677a835cc25263c7db3c0c>`.

* after that, the label of a new feature vector can be predicted using the method :ref:`predict() <doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1a1a7e49e1febd10392452727498771bc1>`.

.. ref-code-block:: cpp

	// Create empty object
	cv::Ptr<SVMSGD> svmsgd = SVMSGD::create();
	
	// Train the Stochastic Gradient Descent SVM
	svmsgd->train(trainData);
	
	// Predict labels for the new samples
	svmsgd->predict(samples, responses);

Methods
-------

.. index:: pair: function; getInitialStepSize
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a362d36881b56090a107f23c6fe48bd2c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	float
	getInitialStepSize() const = 0

Parameter initialStepSize of a SVMSGD optimization problem.



.. rubric:: See also:

:ref:`setInitialStepSize <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1abdba737e4293665f091f6433631f4dc9>`

.. index:: pair: function; getMarginRegularization
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1aa2254bcef562303cefefbf2bfe9fd1b5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	float
	getMarginRegularization() const = 0

Parameter marginRegularization of a SVMSGD optimization problem.



.. rubric:: See also:

:ref:`setMarginRegularization <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a2e16734e58800183162d1ab6d7d8fe7f>`

.. index:: pair: function; getMarginType
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9c088f661905719298a325e2a9d65ddc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getMarginType() const = 0

Margin type, one of :ref:`SVMSGD::MarginType <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9b5c495b5593ffda8a7055da07d0b751>`.



.. rubric:: See also:

:ref:`setMarginType <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a79385571c8163f5c0c157e7a7e607a0b>`

.. index:: pair: function; getShift
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1adedb13011cf8f2e7d45a4dff6361b274:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	float
	getShift() = 0



.. rubric:: Returns:

the shift of the trained model (decision function f(x) = weights \* x + shift).

.. index:: pair: function; getStepDecreasingPower
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a7399ae26d6d54b1192d362fe5f1413ad:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	float
	getStepDecreasingPower() const = 0

Parameter stepDecreasingPower of a SVMSGD optimization problem.



.. rubric:: See also:

:ref:`setStepDecreasingPower <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a681aa5262a86ff0c00c88c5e4dc5f72b>`

.. index:: pair: function; getSvmsgdType
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a53db2bca40cef926eb7d750f949fb942:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	getSvmsgdType() const = 0

Algorithm type, one of :ref:`SVMSGD::SvmsgdType <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ab028695cc8ec1491888d8d03f80bc8c2>`.



.. rubric:: See also:

:ref:`setSvmsgdType <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ae0c76a4387f722444128f206ba4dd0fc>`

.. index:: pair: function; getTermCriteria
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1aedc9b61b3d4d8344034f61f0e6e3688d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`
	getTermCriteria() const = 0

Termination criteria of the training algorithm. You can specify the maximum number of iterations (maxCount) and/or how much the error could change between the iterations to make the algorithm continue (epsilon).



.. rubric:: See also:

:ref:`setTermCriteria <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1abf9c385dd82c06d6862c0c2aa62e4efc>`

.. index:: pair: function; getWeights
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a37ad5308ff0ceebc60f4451a0bdc4e5b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	getWeights() = 0



.. rubric:: Returns:

the weights of the trained model (decision function f(x) = weights \* x + shift).

.. index:: pair: function; setInitialStepSize
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1abdba737e4293665f091f6433631f4dc9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setInitialStepSize(float InitialStepSize) = 0

Parameter initialStepSize of a SVMSGD optimization problem.



.. rubric:: See also:

:ref:`getInitialStepSize <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a362d36881b56090a107f23c6fe48bd2c>`

.. index:: pair: function; setMarginRegularization
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a2e16734e58800183162d1ab6d7d8fe7f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setMarginRegularization(float marginRegularization) = 0

Parameter marginRegularization of a SVMSGD optimization problem.



.. rubric:: See also:

:ref:`getMarginRegularization <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1aa2254bcef562303cefefbf2bfe9fd1b5>`

.. index:: pair: function; setMarginType
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a79385571c8163f5c0c157e7a7e607a0b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setMarginType(int marginType) = 0

Margin type, one of :ref:`SVMSGD::MarginType <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9b5c495b5593ffda8a7055da07d0b751>`.



.. rubric:: See also:

:ref:`getMarginType <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9c088f661905719298a325e2a9d65ddc>`

.. index:: pair: function; setOptimalParameters
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ac9ead52ddcce2953c61335185de4178c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setOptimalParameters(
		int svmsgdType = :ref:`SVMSGD::ASGD<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ab028695cc8ec1491888d8d03f80bc8c2abb41d794ce113aa2123f45120e8354af>`,
		int marginType = :ref:`SVMSGD::SOFT_MARGIN<doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a9b5c495b5593ffda8a7055da07d0b751a8d6a7f40e040703bb29dd3896b86cc9c>`
		) = 0

Function sets optimal parameters values for chosen :ref:`SVM <doxid-da/d05/classcv_1_1ml_1_1_s_v_m>` SGD model.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- svmsgdType

		- is the type of :ref:`SVMSGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d>` classifier.

	*
		- marginType

		- is the type of margin constraint.

.. index:: pair: function; setStepDecreasingPower
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a681aa5262a86ff0c00c88c5e4dc5f72b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setStepDecreasingPower(float stepDecreasingPower) = 0

Parameter stepDecreasingPower of a SVMSGD optimization problem.



.. rubric:: See also:

:ref:`getStepDecreasingPower <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a7399ae26d6d54b1192d362fe5f1413ad>`

.. index:: pair: function; setSvmsgdType
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ae0c76a4387f722444128f206ba4dd0fc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setSvmsgdType(int svmsgdType) = 0

Algorithm type, one of :ref:`SVMSGD::SvmsgdType <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ab028695cc8ec1491888d8d03f80bc8c2>`.



.. rubric:: See also:

:ref:`getSvmsgdType <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a53db2bca40cef926eb7d750f949fb942>`

.. index:: pair: function; setTermCriteria
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1abf9c385dd82c06d6862c0c2aa62e4efc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setTermCriteria(const :ref:`cv::TermCriteria<doxid-df/d8a/classcv_1_1_term_criteria>`& val) = 0

Termination criteria of the training algorithm. You can specify the maximum number of iterations (maxCount) and/or how much the error could change between the iterations to make the algorithm continue (epsilon).



.. rubric:: See also:

:ref:`getTermCriteria <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1aedc9b61b3d4d8344034f61f0e6e3688d>`

.. index:: pair: function; create
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a8dcb30f2aa335cf943fe52c2b8b7e954:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<SVMSGD>
	create()

Creates empty model. Use :ref:`StatModel::train <doxid-d9/d36/classcv_1_1ml_1_1_stat_model_1af96a0e04f1677a835cc25263c7db3c0c>` to train the model. Since SVMSGD has several parameters, you may want to find the best parameters for your problem or use :ref:`setOptimalParameters() <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1ac9ead52ddcce2953c61335185de4178c>` to set some default parameters.

.. index:: pair: function; load
.. _doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d_1a6945188e89c36b33187ab57dbc2364dc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<SVMSGD>
	load(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& filepath,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& nodeName = :ref:`String<doxid-dc/d0e/classcv_1_1_string>`()
		)

Loads and creates a serialized :ref:`SVMSGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d>` from a file.

Use :ref:`SVMSGD::save <doxid-d1/d41/classcv_1_1_algorithm_1a0a880744bc4e3f45711444571df47d67>` to serialize and store an :ref:`SVMSGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d>` to disk. Load the :ref:`SVMSGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d>` from this file again, by calling this function with the path to the file. Optionally specify the node for the file containing the classifier



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- filepath

		- path to serialized :ref:`SVMSGD <doxid-d7/dcb/classcv_1_1ml_1_1_s_v_m_s_g_d>`

	*
		- nodeName

		- name of node containing the classifier

