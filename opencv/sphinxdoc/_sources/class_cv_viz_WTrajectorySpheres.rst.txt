.. index:: pair: class; cv::viz::WTrajectorySpheres
.. _doxid-d7/df3/classcv_1_1viz_1_1_w_trajectory_spheres:

class cv::viz::WTrajectorySpheres
=================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This 3D :ref:`Widget <doxid-d2/d4e/classcv_1_1viz_1_1_widget>` represents a trajectory using spheres and lines. :ref:`More...<details-d7/df3/classcv_1_1viz_1_1_w_trajectory_spheres>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <widgets.hpp>
	
	class WTrajectorySpheres: public :ref:`cv::viz::Widget3D<doxid-d0/d9d/classcv_1_1viz_1_1_widget3_d>`
	{
	public:
		// construction
	
		:ref:`WTrajectorySpheres<doxid-d7/df3/classcv_1_1viz_1_1_w_trajectory_spheres_1ac41ba95b84ce2883a4e647bb79db27d4>`(
			:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` path,
			double line_length = 0.05,
			double radius = 0.007,
			const :ref:`Color<doxid-df/d5b/classcv_1_1viz_1_1_color>`& from = :ref:`Color::red<doxid-df/d5b/classcv_1_1viz_1_1_color_1a1e1372991e755607437574ed62863701>`(),
			const :ref:`Color<doxid-df/d5b/classcv_1_1viz_1_1_color>`& to = :ref:`Color::white<doxid-df/d5b/classcv_1_1viz_1_1_color_1a9e57965ee56731f103c1d9e40bd460c1>`()
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		template <typename _W>
		_W
		:ref:`cast<doxid-d2/d4e/classcv_1_1viz_1_1_widget_1a837c0a3985ff52a6cfbf570082f418e8>`();
	
		:ref:`Widget2D<doxid-d3/d6a/classcv_1_1viz_1_1_widget2_d>`
		:ref:`cast<doxid-dc/d5c/group__viz__widget_1ga51cbb36f736aa62342ca02359236873b>`();
	
		:ref:`WWidgetMerger<doxid-d9/d1d/classcv_1_1viz_1_1_w_widget_merger>`
		:ref:`cast<doxid-d2/d4e/classcv_1_1viz_1_1_widget_1ga51cbb36f736aa62342ca02359236873b>`();
	
		double
		:ref:`getRenderingProperty<doxid-d2/d4e/classcv_1_1viz_1_1_widget_1a219a4c5fe99e91984d0daead4e8f5cca>`(int property) const;
	
		:ref:`Widget<doxid-d2/d4e/classcv_1_1viz_1_1_widget>`&
		:ref:`operator=<doxid-d2/d4e/classcv_1_1viz_1_1_widget_1a32e9fb3b4821e9aa0163c54fdcb8ce3c>`(const :ref:`Widget<doxid-d2/d4e/classcv_1_1viz_1_1_widget>`& other);
	
		void
		:ref:`setRenderingProperty<doxid-d2/d4e/classcv_1_1viz_1_1_widget_1af93f4866a4ceb8c3cdf6ab70bd5521ee>`(
			int property,
			double value
			);
	
		static
		:ref:`Widget<doxid-d2/d4e/classcv_1_1viz_1_1_widget>`
		:ref:`fromPlyFile<doxid-d2/d4e/classcv_1_1viz_1_1_widget_1a0bd62dc76ad1604c16752e4907f55fdb>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& file_name);
	
		void
		:ref:`applyTransform<doxid-d0/d9d/classcv_1_1viz_1_1_widget3_d_1a45a01c3f9e91367c7de5832bc8e60d0d>`(const :ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`& transform);
	
		:ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`
		:ref:`getPose<doxid-d0/d9d/classcv_1_1viz_1_1_widget3_d_1ac50d11aa2131bbabe4e2ad231b15842e>`() const;
	
		void
		:ref:`setColor<doxid-d0/d9d/classcv_1_1viz_1_1_widget3_d_1ab467fdefb482d6a0da42528ab98738a1>`(const :ref:`Color<doxid-df/d5b/classcv_1_1viz_1_1_color>`& color);
	
		void
		:ref:`setPose<doxid-d0/d9d/classcv_1_1viz_1_1_widget3_d_1a19f8b98423912d86deb35ded2cd62cca>`(const :ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`& pose);
	
		void
		:ref:`updatePose<doxid-d0/d9d/classcv_1_1viz_1_1_widget3_d_1a0e8ba5f6b65cb35444e3fb4431e6f995>`(const :ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`& pose);

.. _details-d7/df3/classcv_1_1viz_1_1_w_trajectory_spheres:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This 3D :ref:`Widget <doxid-d2/d4e/classcv_1_1viz_1_1_widget>` represents a trajectory using spheres and lines.

where spheres represent the positions of the camera, and lines represent the direction from previous position to the current. :

Construction
------------

.. index:: pair: function; WTrajectorySpheres
.. _doxid-d7/df3/classcv_1_1viz_1_1_w_trajectory_spheres_1ac41ba95b84ce2883a4e647bb79db27d4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	WTrajectorySpheres(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` path,
		double line_length = 0.05,
		double radius = 0.007,
		const :ref:`Color<doxid-df/d5b/classcv_1_1viz_1_1_color>`& from = :ref:`Color::red<doxid-df/d5b/classcv_1_1viz_1_1_color_1a1e1372991e755607437574ed62863701>`(),
		const :ref:`Color<doxid-df/d5b/classcv_1_1viz_1_1_color>`& to = :ref:`Color::white<doxid-df/d5b/classcv_1_1viz_1_1_color_1a9e57965ee56731f103c1d9e40bd460c1>`()
		)

Constructs a :ref:`WTrajectorySpheres <doxid-d7/df3/classcv_1_1viz_1_1_w_trajectory_spheres>`.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- path

		- List of poses on a trajectory. Takes std::vector<Affine<T>> with T == [float \| double]

	*
		- line_length

		- Max length of the lines which point to previous position

	*
		- radius

		- Radius of the spheres.

	*
		- from

		- :ref:`Color <doxid-df/d5b/classcv_1_1viz_1_1_color>` for first sphere.

	*
		- to

		- :ref:`Color <doxid-df/d5b/classcv_1_1viz_1_1_color>` for last sphere. Intermediate spheres will have interpolated color.

