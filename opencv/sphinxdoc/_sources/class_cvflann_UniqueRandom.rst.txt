.. index:: pair: class; cvflann::UniqueRandom
.. _doxid-d4/d73/classcvflann_1_1_unique_random:

class cvflann::UniqueRandom
===========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Random number generator that returns a distinct number from the [0,n) interval each time. :ref:`More...<details-d4/d73/classcvflann_1_1_unique_random>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <random.h>
	
	class UniqueRandom
	{
	public:
		// construction
	
		:ref:`UniqueRandom<doxid-d4/d73/classcvflann_1_1_unique_random_1ada45bca21eb9681b988f5c33c244a799>`(int n);

		// methods
	
		void
		:ref:`init<doxid-d4/d73/classcvflann_1_1_unique_random_1abeb16c6a5054c00dc4e8d5c501c3eb0d>`(int n);
	
		int
		:ref:`next<doxid-d4/d73/classcvflann_1_1_unique_random_1a95eb32308d0a5a2d99a03fe23d809c1f>`();
	};
.. _details-d4/d73/classcvflann_1_1_unique_random:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Random number generator that returns a distinct number from the [0,n) interval each time.

Construction
------------

.. index:: pair: function; UniqueRandom
.. _doxid-d4/d73/classcvflann_1_1_unique_random_1ada45bca21eb9681b988f5c33c244a799:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	UniqueRandom(int n)

Constructor.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- n

		- Size of the interval from which to generate



.. rubric:: Returns:

Methods
-------

.. index:: pair: function; init
.. _doxid-d4/d73/classcvflann_1_1_unique_random_1abeb16c6a5054c00dc4e8d5c501c3eb0d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	init(int n)

Initializes the number generator.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- n

		- the size of the interval from which to generate random numbers.

.. index:: pair: function; next
.. _doxid-d4/d73/classcvflann_1_1_unique_random_1a95eb32308d0a5a2d99a03fe23d809c1f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	next()

Return a distinct random integer in greater or equal to 0 and less than 'n' on each call. It should be called maximum 'n' times. Returns: a random integer

