.. index:: pair: enum; SmoothMethod_c
.. _doxid-df/d4e/group__imgproc__c_1ga68a3a4144ad5ad650bed7f0ede3611c2:

enum SmoothMethod_c
===================

Overview
~~~~~~~~

Image smooth methods :ref:`More...<details-df/d4e/group__imgproc__c_1ga68a3a4144ad5ad650bed7f0ede3611c2>`

.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <types_c.h>

	enum SmoothMethod_c
	{
	    :ref:`CV_BLUR_NO_SCALE<doxid-df/d4e/group__imgproc__c_1gga68a3a4144ad5ad650bed7f0ede3611c2aa06086448eff38b500b296baa0ff6590>` =0,
	    :ref:`CV_BLUR<doxid-df/d4e/group__imgproc__c_1gga68a3a4144ad5ad650bed7f0ede3611c2abd20b6c1b1f0779073712a370a3c64f9>`          =1,
	    :ref:`CV_GAUSSIAN<doxid-df/d4e/group__imgproc__c_1gga68a3a4144ad5ad650bed7f0ede3611c2a5f9c9d19089c103e1324b65ef51b77b1>`      =2,
	    :ref:`CV_MEDIAN<doxid-df/d4e/group__imgproc__c_1gga68a3a4144ad5ad650bed7f0ede3611c2a0110fa78c2574e7eceb7e4d3a9015a56>`        =3,
	    :ref:`CV_BILATERAL<doxid-df/d4e/group__imgproc__c_1gga68a3a4144ad5ad650bed7f0ede3611c2af3992d7005749422f871b7ea70e975b0>`     =4,
	};

.. _details-df/d4e/group__imgproc__c_1ga68a3a4144ad5ad650bed7f0ede3611c2:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Image smooth methods

Enum Values
-----------

.. index:: pair: enumvalue; CV_BLUR_NO_SCALE
.. _doxid-df/d4e/group__imgproc__c_1gga68a3a4144ad5ad650bed7f0ede3611c2aa06086448eff38b500b296baa0ff6590:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	CV_BLUR_NO_SCALE

linear convolution with :math:`\texttt{size1}\times\texttt{size2}` box kernel (all 1's). If you want to smooth different pixels with different-size box kernels, you can use the integral image that is computed using integral

.. index:: pair: enumvalue; CV_BLUR
.. _doxid-df/d4e/group__imgproc__c_1gga68a3a4144ad5ad650bed7f0ede3611c2abd20b6c1b1f0779073712a370a3c64f9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	CV_BLUR

linear convolution with :math:`\texttt{size1}\times\texttt{size2}` box kernel (all 1's) with subsequent scaling by :math:`1/(\texttt{size1}\cdot\texttt{size2})`

.. index:: pair: enumvalue; CV_GAUSSIAN
.. _doxid-df/d4e/group__imgproc__c_1gga68a3a4144ad5ad650bed7f0ede3611c2a5f9c9d19089c103e1324b65ef51b77b1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	CV_GAUSSIAN

linear convolution with a :math:`\texttt{size1}\times\texttt{size2}` Gaussian kernel

.. index:: pair: enumvalue; CV_MEDIAN
.. _doxid-df/d4e/group__imgproc__c_1gga68a3a4144ad5ad650bed7f0ede3611c2a0110fa78c2574e7eceb7e4d3a9015a56:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	CV_MEDIAN

median filter with a :math:`\texttt{size1}\times\texttt{size1}` square aperture

.. index:: pair: enumvalue; CV_BILATERAL
.. _doxid-df/d4e/group__imgproc__c_1gga68a3a4144ad5ad650bed7f0ede3611c2af3992d7005749422f871b7ea70e975b0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	CV_BILATERAL

bilateral filter with a :math:`\texttt{size1}\times\texttt{size1}` square aperture, color sigma= sigma1 and spatial sigma= sigma2. If size1=0, the aperture square side is set to cvRound(sigma2\*1.5)\*2+1. See :ref:`cv::bilateralFilter <doxid-d4/d86/group__imgproc__filter_1ga9d7064d478c95d60003cf839430737ed>`

