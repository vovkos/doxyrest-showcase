.. index:: pair: enum; HistCompMethods
.. _doxid-d6/dc7/group__imgproc__hist_1ga994f53817d621e2e4228fc646342d386:

enum cv::HistCompMethods
========================

Overview
~~~~~~~~

Histogram comparison methods :ref:`More...<details-d6/dc7/group__imgproc__hist_1ga994f53817d621e2e4228fc646342d386>`

.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <imgproc.hpp>

	enum HistCompMethods
	{
	    :ref:`HISTCMP_CORREL<doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386a38c6d2cb4ae572e00aebd5642fae2add>`        = 0,
	    :ref:`HISTCMP_CHISQR<doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386aa88d6751fb2bb79e07aa8c8717fda881>`        = 1,
	    :ref:`HISTCMP_INTERSECT<doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386ae6ca1479390f52007fc572f49501c85b>`     = 2,
	    :ref:`HISTCMP_BHATTACHARYYA<doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386ad75f6e8385d2e29479cf61ba87b57450>` = 3,
	    :ref:`HISTCMP_HELLINGER<doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386aab5ee4721e6f3b29ccacdeb318651f97>`     = HISTCMP_BHATTACHARYYA,
	    :ref:`HISTCMP_CHISQR_ALT<doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386a035d9882661edb22a95895516e441428>`    = 4,
	    :ref:`HISTCMP_KL_DIV<doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386a0ac2233c6785267fa7232a6cc2788840>`        = 5,
	};

.. _details-d6/dc7/group__imgproc__hist_1ga994f53817d621e2e4228fc646342d386:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Histogram comparison methods

Enum Values
-----------

.. index:: pair: enumvalue; HISTCMP_CORREL
.. _doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386a38c6d2cb4ae572e00aebd5642fae2add:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HISTCMP_CORREL

Correlation

.. math::

	d(H_1,H_2) = \frac{\sum_I (H_1(I) - \bar{H_1}) (H_2(I) - \bar{H_2})}{\sqrt{\sum_I(H_1(I) - \bar{H_1})^2 \sum_I(H_2(I) - \bar{H_2})^2}}

where

.. math::

	\bar{H_k} = \frac{1}{N} \sum _J H_k(J)

and :math:`N` is a total number of histogram bins.

.. index:: pair: enumvalue; HISTCMP_CHISQR
.. _doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386aa88d6751fb2bb79e07aa8c8717fda881:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HISTCMP_CHISQR

Chi-Square

.. math::

	d(H_1,H_2) = \sum _I \frac{\left(H_1(I)-H_2(I)\right)^2}{H_1(I)}

.. index:: pair: enumvalue; HISTCMP_INTERSECT
.. _doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386ae6ca1479390f52007fc572f49501c85b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HISTCMP_INTERSECT

Intersection

.. math::

	d(H_1,H_2) = \sum _I \min (H_1(I), H_2(I))

.. index:: pair: enumvalue; HISTCMP_BHATTACHARYYA
.. _doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386ad75f6e8385d2e29479cf61ba87b57450:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HISTCMP_BHATTACHARYYA

Bhattacharyya distance (In fact, OpenCV computes Hellinger distance, which is related to Bhattacharyya coefficient.)

.. math::

	d(H_1,H_2) = \sqrt{1 - \frac{1}{\sqrt{\bar{H_1} \bar{H_2} N^2}} \sum_I \sqrt{H_1(I) \cdot H_2(I)}}

.. index:: pair: enumvalue; HISTCMP_HELLINGER
.. _doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386aab5ee4721e6f3b29ccacdeb318651f97:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HISTCMP_HELLINGER

Synonym for HISTCMP_BHATTACHARYYA.

.. index:: pair: enumvalue; HISTCMP_CHISQR_ALT
.. _doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386a035d9882661edb22a95895516e441428:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HISTCMP_CHISQR_ALT

Alternative Chi-Square

.. math::

	d(H_1,H_2) = 2 * \sum _I \frac{\left(H_1(I)-H_2(I)\right)^2}{H_1(I)+H_2(I)}

This alternative formula is regularly used for texture comparison. See e.g. :ref:`[67] <doxid-d0/de3/citelist_1CITEREF_Puzicha1997>`

.. index:: pair: enumvalue; HISTCMP_KL_DIV
.. _doxid-d6/dc7/group__imgproc__hist_1gga994f53817d621e2e4228fc646342d386a0ac2233c6785267fa7232a6cc2788840:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HISTCMP_KL_DIV

Kullback-Leibler divergence

.. math::

	d(H_1,H_2) = \sum _I H_1(I) \log \left(\frac{H_1(I)}{H_2(I)}\right)

