.. index:: pair: group; Core functionality
.. _doxid-d0/de1/group__core:

Core functionality
==================

.. toctree::
	:hidden:

	group_core_basic.rst
	group_core_c.rst
	group_core_cluster.rst
	group_core_directx.rst
	group_core_eigen.rst
	group_core_hal.rst
	group_core_ipp.rst
	group_core_va_intel.rst
	group_core_opencl.rst
	group_core_opengl.rst
	group_core_array.rst
	group_core_optim.rst
	group_core_utils.rst
	group_core_xml.rst
	enum_cv_CovarFlags.rst
	enum_cv_HersheyFonts.rst
	enum_cv_KmeansFlags.rst
	enum_cv_LineTypes.rst
	enum_cv_ReduceTypes.rst
	class_cv_Affine3.rst
	class_cv_BufferPoolController.rst
	class_cv_WImage.rst
	class_cv_WImageBuffer.rst
	class_cv_WImageBufferC.rst
	class_cv_WImageC.rst
	class_cv_WImageView.rst
	class_cv_WImageViewC.rst

Overview
~~~~~~~~



|	:ref:`Basic structures<doxid-dc/d84/group__core__basic>`
|	:ref:`C structures and operations<doxid-d2/df8/group__core__c>`
|		:ref:`Connections with C++<doxid-d8/dd7/group__core__c__glue>`
|	:ref:`Clustering<doxid-d5/d38/group__core__cluster>`
|	:ref:`DirectX interoperability<doxid-de/dc1/group__core__directx>`
|	:ref:`Eigen support<doxid-d0/daf/group__core__eigen>`
|	:ref:`Hardware Acceleration Layer<doxid-de/d85/group__core__hal>`
|		:ref:`Functions<doxid-d3/ddd/group__core__hal__functions>`
|		:ref:`Interface<doxid-d1/d1b/group__core__hal__interface>`
|			:ref:`Atan calculation<doxid-d8/d12/group__core__hal__interface__fast_atan>`
|			:ref:`Bitwise logical operations<doxid-d2/d18/group__core__hal__interface__logical>`
|			:ref:`Channel merge<doxid-df/d2e/group__core__hal__interface__merge>`
|			:ref:`Channel split<doxid-df/df2/group__core__hal__interface__split>`
|			:ref:`Cholesky matrix decomposition<doxid-d8/d0e/group__core__hal__interface__decomp__cholesky>`
|			:ref:`Element-wise absolute difference<doxid-d5/dec/group__core__hal__interface__absdiff>`
|			:ref:`Element-wise add and subtract<doxid-d8/d6f/group__core__hal__interface__addsub>`
|			:ref:`Element-wise compare<doxid-d6/dab/group__core__hal__interface__compare>`
|			:ref:`Element-wise divide<doxid-dd/d2c/group__core__hal__interface__divide>`
|			:ref:`Element-wise minimum or maximum<doxid-dc/d19/group__core__hal__interface__minmax>`
|			:ref:`Element-wise multiply<doxid-de/db7/group__core__hal__interface__multiply>`
|			:ref:`Element-wise reciprocial<doxid-d4/de4/group__core__hal__interface__reciprocial>`
|			:ref:`Element-wise weighted sum<doxid-dc/dec/group__core__hal__interface__add_weighted>`
|			:ref:`Exponent calculation<doxid-d4/d8a/group__core__hal__interface__exp>`
|			:ref:`Inverse square root calculation<doxid-da/d38/group__core__hal__interface__inv_sqrt>`
|			:ref:`LU matrix decomposition<doxid-d5/d42/group__core__hal__interface__decomp__lu>`
|			:ref:`Magnitude calculation<doxid-d7/d99/group__core__hal__interface__magnitude>`
|			:ref:`Matrix multiplication<doxid-d2/dab/group__core__hal__interface__matrix__multiplication>`
|			:ref:`Natural logarithm calculation<doxid-d2/de4/group__core__hal__interface__log>`
|			:ref:`QR matrix decomposition<doxid-db/d36/group__core__hal__interface__decomp__qr>`
|			:ref:`Singular value matrix decomposition<doxid-dd/d2a/group__core__hal__interface__decomp__svd>`
|			:ref:`Square root calculation<doxid-d5/dc3/group__core__hal__interface__sqrt>`
|		:ref:`Universal intrinsics<doxid-df/d91/group__core__hal__intrin>`
|			:ref:`Private implementation helpers<doxid-dd/d96/group__core__hal__intrin__impl>`
|	:ref:`Intel IPP Asynchronous C/C++ Converters<doxid-d6/dcf/group__core__ipp>`
|	:ref:`Intel VA-API/OpenCL (CL-VA) interoperability<doxid-d1/daa/group__core__va__intel>`
|	:ref:`OpenCL support<doxid-dc/d83/group__core__opencl>`
|	:ref:`OpenGL interoperability<doxid-d2/d3c/group__core__opengl>`
|		:ref:`CUDA-accelerated Computer Vision<doxid-d1/d1e/group__cuda>`
|			:ref:`Background Segmentation<doxid-d6/d17/group__cudabgsegm>`
|			:ref:`Core part<doxid-d7/d05/group__cudacore>`
|				:ref:`Data Structures<doxid-d9/d41/group__cudacore__struct>`
|				:ref:`Initalization and Information<doxid-d8/d40/group__cudacore__init>`
|			:ref:`Device layer<doxid-df/dfc/group__cudev>`
|			:ref:`Feature Detection and Description<doxid-d6/d1d/group__cudafeatures2d>`
|			:ref:`Image Filtering<doxid-dc/d66/group__cudafilters>`
|			:ref:`Image Processing<doxid-d0/d05/group__cudaimgproc>`
|				:ref:`Color space processing<doxid-db/d8c/group__cudaimgproc__color>`
|				:ref:`Feature Detection<doxid-dc/d6d/group__cudaimgproc__feature>`
|				:ref:`Histogram Calculation<doxid-d8/d0e/group__cudaimgproc__hist>`
|				:ref:`Hough Transform<doxid-d2/d15/group__cudaimgproc__hough>`
|			:ref:`Image Warping<doxid-db/d29/group__cudawarping>`
|			:ref:`Legacy support<doxid-d5/dc3/group__cudalegacy>`
|				:ref:`NPPST Core<doxid-d5/ddd/group__core__npp>`
|				:ref:`NPPST Image Processing<doxid-d1/d0d/group__nppi>`
|				:ref:`NPPST Signal Processing<doxid-de/d25/group__npps>`
|			:ref:`Object Detection<doxid-d9/d3f/group__cudaobjdetect>`
|			:ref:`Operations on Matrices<doxid-d5/d8e/group__cudaarithm>`
|				:ref:`Arithm Operations on Matrices<doxid-d9/d88/group__cudaarithm__arithm>`
|				:ref:`Core Operations on Matrices<doxid-de/d09/group__cudaarithm__core>`
|				:ref:`Matrix Reductions<doxid-d5/de6/group__cudaarithm__reduce>`
|				:ref:`Per-element Operations<doxid-d8/d34/group__cudaarithm__elem>`
|			:ref:`Optical Flow<doxid-d7/d3f/group__cudaoptflow>`
|			:ref:`Stereo Correspondence<doxid-dd/d47/group__cudastereo>`
|			:ref:`Video Encoding/Decoding<doxid-d0/d61/group__cudacodec>`
|	:ref:`Operations on arrays<doxid-d2/de8/group__core__array>`
|	:ref:`Optimization Algorithms<doxid-da/d01/group__core__optim>`
|	:ref:`Utility and system functions and macros<doxid-db/de0/group__core__utils>`
|		:ref:`NEON utilities<doxid-d8/d45/group__core__utils__neon>`
|		:ref:`SSE utilities<doxid-d6/d06/group__core__utils__sse>`
|	:ref:`XML/YAML Persistence<doxid-d4/da4/group__core__xml>`



.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef :ref:`Affine3<doxid-d3/d84/classcv_1_1_affine3>`<double> :target:`cv::Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`;
	typedef :ref:`Affine3<doxid-d3/d84/classcv_1_1_affine3>`<float> :target:`cv::Affine3f<doxid-d0/de1/group__core_1gae10a81cba3f3232648be48e28759a7bc>`;
	typedef :ref:`WImageC<doxid-db/dde/classcv_1_1_w_image_c>`<short, 1> :target:`cv::WImage1_16s<doxid-d0/de1/group__core_1ga95b4170fb774ccabe337947df75e8077>`;
	typedef :ref:`WImageC<doxid-db/dde/classcv_1_1_w_image_c>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`, 1> :target:`cv::WImage1_16u<doxid-d0/de1/group__core_1ga8cb8cff567e704f41dfb24de712e3749>`;
	typedef :ref:`WImageC<doxid-db/dde/classcv_1_1_w_image_c>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`, 1> :target:`cv::WImage1_b<doxid-d0/de1/group__core_1ga87887881e42fb86e43bf394a9976f753>`;
	typedef :ref:`WImageC<doxid-db/dde/classcv_1_1_w_image_c>`<float, 1> :target:`cv::WImage1_f<doxid-d0/de1/group__core_1ga62fd751b5caf7b5db46700862722d7e7>`;
	typedef :ref:`WImageC<doxid-db/dde/classcv_1_1_w_image_c>`<short, 3> :target:`cv::WImage3_16s<doxid-d0/de1/group__core_1gaf725b83b5e715f55c38ea77161b92b7d>`;
	typedef :ref:`WImageC<doxid-db/dde/classcv_1_1_w_image_c>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`, 3> :target:`cv::WImage3_16u<doxid-d0/de1/group__core_1ga62043ed0855d93eb84d853e184fb3e1e>`;
	typedef :ref:`WImageC<doxid-db/dde/classcv_1_1_w_image_c>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`, 3> :target:`cv::WImage3_b<doxid-d0/de1/group__core_1ga136bbfe1abe91ca0c11e132bb918e8b7>`;
	typedef :ref:`WImageC<doxid-db/dde/classcv_1_1_w_image_c>`<float, 3> :target:`cv::WImage3_f<doxid-d0/de1/group__core_1ga123391ae59e07397630cd8e68abdb56d>`;
	typedef :ref:`WImage<doxid-d3/d68/classcv_1_1_w_image>`<short> :target:`cv::WImage_16s<doxid-d0/de1/group__core_1ga1f0f501d1d72d9fd9827ee2541daee0c>`;
	typedef :ref:`WImage<doxid-d3/d68/classcv_1_1_w_image>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`> :target:`cv::WImage_16u<doxid-d0/de1/group__core_1ga00cc3a2791c311b484c0403875a134a2>`;
	typedef :ref:`WImage<doxid-d3/d68/classcv_1_1_w_image>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`> :target:`cv::WImage_b<doxid-d0/de1/group__core_1ga6ea2aa55a7a9ace91400969584ce4c15>`;
	typedef :ref:`WImage<doxid-d3/d68/classcv_1_1_w_image>`<float> :target:`cv::WImage_f<doxid-d0/de1/group__core_1ga20e8bb75ebfc9f4b73a6aeac00e5c88c>`;
	typedef :ref:`WImageBufferC<doxid-d5/dcc/classcv_1_1_w_image_buffer_c>`<short, 1> :target:`cv::WImageBuffer1_16s<doxid-d0/de1/group__core_1gabf4bbb8e606d015d5ab4709aabf9863b>`;
	typedef :ref:`WImageBufferC<doxid-d5/dcc/classcv_1_1_w_image_buffer_c>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`, 1> :target:`cv::WImageBuffer1_16u<doxid-d0/de1/group__core_1ga0467e478a9dd89b3282cca89adb57dec>`;
	typedef :ref:`WImageBufferC<doxid-d5/dcc/classcv_1_1_w_image_buffer_c>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`, 1> :target:`cv::WImageBuffer1_b<doxid-d0/de1/group__core_1ga6bcf3e14addddf38efdb10a18bfdda7e>`;
	typedef :ref:`WImageBufferC<doxid-d5/dcc/classcv_1_1_w_image_buffer_c>`<float, 1> :target:`cv::WImageBuffer1_f<doxid-d0/de1/group__core_1gaecd0cb3de874e5373ea299377ec50124>`;
	typedef :ref:`WImageBufferC<doxid-d5/dcc/classcv_1_1_w_image_buffer_c>`<short, 3> :target:`cv::WImageBuffer3_16s<doxid-d0/de1/group__core_1ga265fc2a9a168a4664b755888937495e9>`;
	typedef :ref:`WImageBufferC<doxid-d5/dcc/classcv_1_1_w_image_buffer_c>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`, 3> :target:`cv::WImageBuffer3_16u<doxid-d0/de1/group__core_1ga37cd49aa05df85d538be90db7ee06261>`;
	typedef :ref:`WImageBufferC<doxid-d5/dcc/classcv_1_1_w_image_buffer_c>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`, 3> :target:`cv::WImageBuffer3_b<doxid-d0/de1/group__core_1ga7b6a522e7940e4a73ae6d1068c949d90>`;
	typedef :ref:`WImageBufferC<doxid-d5/dcc/classcv_1_1_w_image_buffer_c>`<float, 3> :target:`cv::WImageBuffer3_f<doxid-d0/de1/group__core_1gaa925d7a36c6414e09983dfa1d93b1692>`;
	typedef :ref:`WImageBuffer<doxid-d3/d9e/classcv_1_1_w_image_buffer>`<short> :target:`cv::WImageBuffer_16s<doxid-d0/de1/group__core_1gad84f4a76e9720722ef93c4a203d70571>`;
	typedef :ref:`WImageBuffer<doxid-d3/d9e/classcv_1_1_w_image_buffer>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`> :target:`cv::WImageBuffer_16u<doxid-d0/de1/group__core_1gabbe00fc5ffa35ae7754b179341b26d17>`;
	typedef :ref:`WImageBuffer<doxid-d3/d9e/classcv_1_1_w_image_buffer>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`> :target:`cv::WImageBuffer_b<doxid-d0/de1/group__core_1ga7082915d248c7924926d9ff171f66a0e>`;
	typedef :ref:`WImageBuffer<doxid-d3/d9e/classcv_1_1_w_image_buffer>`<float> :target:`cv::WImageBuffer_f<doxid-d0/de1/group__core_1gac1de4a8df2bb26728a7c91a56f72163b>`;
	typedef :ref:`WImageViewC<doxid-d1/dc9/classcv_1_1_w_image_view_c>`<short, 1> :target:`cv::WImageView1_16s<doxid-d0/de1/group__core_1gacf6a9857de553fb47f4076417637c6f6>`;
	typedef :ref:`WImageViewC<doxid-d1/dc9/classcv_1_1_w_image_view_c>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`, 1> :target:`cv::WImageView1_16u<doxid-d0/de1/group__core_1gafec125f14f64d8570b812a7c5c89c725>`;
	typedef :ref:`WImageViewC<doxid-d1/dc9/classcv_1_1_w_image_view_c>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`, 1> :target:`cv::WImageView1_b<doxid-d0/de1/group__core_1ga745cbf3c8295c90b2a2273d7f8efec9a>`;
	typedef :ref:`WImageViewC<doxid-d1/dc9/classcv_1_1_w_image_view_c>`<float, 1> :target:`cv::WImageView1_f<doxid-d0/de1/group__core_1gafeba36ccc68c85cc367327a3203a2e70>`;
	typedef :ref:`WImageViewC<doxid-d1/dc9/classcv_1_1_w_image_view_c>`<short, 3> :target:`cv::WImageView3_16s<doxid-d0/de1/group__core_1gacf8d03ce864b6ba1800b9c4ea93891e7>`;
	typedef :ref:`WImageViewC<doxid-d1/dc9/classcv_1_1_w_image_view_c>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`, 3> :target:`cv::WImageView3_16u<doxid-d0/de1/group__core_1gad56c25913d459a9e0f3360917d29fac0>`;
	typedef :ref:`WImageViewC<doxid-d1/dc9/classcv_1_1_w_image_view_c>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`, 3> :target:`cv::WImageView3_b<doxid-d0/de1/group__core_1ga000ba67fdc42303847a3c5492fbf719b>`;
	typedef :ref:`WImageViewC<doxid-d1/dc9/classcv_1_1_w_image_view_c>`<float, 3> :target:`cv::WImageView3_f<doxid-d0/de1/group__core_1ga0fbdd8b13d1a3cc2dfe10dd129b45e1c>`;
	typedef :ref:`WImageView<doxid-d9/d30/classcv_1_1_w_image_view>`<short> :target:`cv::WImageView_16s<doxid-d0/de1/group__core_1ga28b30f855d4161ab48dd0ec2537978e9>`;
	typedef :ref:`WImageView<doxid-d9/d30/classcv_1_1_w_image_view>`<:ref:`ushort<doxid-d1/d1b/group__core__hal__interface_1gab95f123a6c9bcfee6a343170ef8c5f69>`> :target:`cv::WImageView_16u<doxid-d0/de1/group__core_1ga7d7b068686c8e4926bad8923b8ad9123>`;
	typedef :ref:`WImageView<doxid-d9/d30/classcv_1_1_w_image_view>`<:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`> :target:`cv::WImageView_b<doxid-d0/de1/group__core_1ga966697b65f7ca3a659fe858eafc5cd5f>`;
	typedef :ref:`WImageView<doxid-d9/d30/classcv_1_1_w_image_view>`<float> :target:`cv::WImageView_f<doxid-d0/de1/group__core_1ga34af04727584c386fc1731f47dc24746>`;

	// enums

	enum :ref:`cv::CovarFlags<doxid-d0/de1/group__core_1ga719ebd4a73f30f4fab258ab7616d0f0f>`;
	enum :ref:`cv::HersheyFonts<doxid-d0/de1/group__core_1ga0f9314ea6e35f99bb23f29567fc16e11>`;
	enum :ref:`cv::KmeansFlags<doxid-d0/de1/group__core_1ga276000efe55ee2756e0c471c7b270949>`;
	enum :ref:`cv::LineTypes<doxid-d0/de1/group__core_1gaf076ef45de481ac96e0ab3dc2c29a777>`;
	enum :ref:`cv::ReduceTypes<doxid-d0/de1/group__core_1ga14cdedf2933367eb9395ec16798af994>`;

	// classes

	template <typename T>
	class :ref:`cv::Affine3<doxid-d3/d84/classcv_1_1_affine3>`;

	class :ref:`cv::BufferPoolController<doxid-d3/de3/classcv_1_1_buffer_pool_controller>`;

	template <typename T>
	class :ref:`cv::WImage<doxid-d3/d68/classcv_1_1_w_image>`;

	template <typename T>
	class :ref:`cv::WImageBuffer<doxid-d3/d9e/classcv_1_1_w_image_buffer>`;

	template <
		typename T,
		int C
		>
	class :ref:`cv::WImageBufferC<doxid-d5/dcc/classcv_1_1_w_image_buffer_c>`;

	template <
		typename T,
		int C
		>
	class :ref:`cv::WImageC<doxid-db/dde/classcv_1_1_w_image_c>`;

	template <typename T>
	class :ref:`cv::WImageView<doxid-d9/d30/classcv_1_1_w_image_view>`;

	template <
		typename T,
		int C
		>
	class :ref:`cv::WImageViewC<doxid-d1/dc9/classcv_1_1_w_image_view_c>`;

	// global functions

	template <typename T>
	static
	:ref:`Affine3<doxid-d3/d84/classcv_1_1_affine3>`<T>
	:target:`cv::operator*<doxid-d0/de1/group__core_1gac57f9a35a5d4d1d3ba23d7871113cbd3>`(
		const :ref:`Affine3<doxid-d3/d84/classcv_1_1_affine3>`<T>& affine1,
		const :ref:`Affine3<doxid-d3/d84/classcv_1_1_affine3>`<T>& affine2
		);

	template <
		typename T,
		typename V
		>
	static
	V
	:target:`cv::operator*<doxid-d0/de1/group__core_1gae9c102e6fd783bcf801e3432aca22e7b>`(
		const :ref:`Affine3<doxid-d3/d84/classcv_1_1_affine3>`<T>& affine,
		const V& vector
		);

	static
	:ref:`Vec3f<doxid-dc/d84/group__core__basic_1gab9e0ab642a3e01742916763173b72232>`
	:target:`cv::operator*<doxid-d0/de1/group__core_1ga548eb6a25623179405f13cad3954c01e>`(
		const :ref:`Affine3f<doxid-d0/de1/group__core_1gae10a81cba3f3232648be48e28759a7bc>`& affine,
		const :ref:`Vec3f<doxid-dc/d84/group__core__basic_1gab9e0ab642a3e01742916763173b72232>`& vector
		);

	static
	:ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`
	:target:`cv::operator*<doxid-d0/de1/group__core_1gaa607fd3c66c5c525cc4d39dc83ffd177>`(
		const :ref:`Affine3d<doxid-d0/de1/group__core_1ga0b49177f52ed1b43e3f5a198baeee203>`& affine,
		const :ref:`Vec3d<doxid-dc/d84/group__core__basic_1ga370d94209693b5b13437ab4991cabf73>`& vector
		);

	void
	:ref:`cv::swap<doxid-d0/de1/group__core_1gafbc8f513f40dc1b7c2d48ea6a5a81776>`(
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& a,
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& b
		);

	void
	:ref:`cv::swap<doxid-d0/de1/group__core_1gaac41913cb7239fd2771b3c3f25349fe0>`(
		:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`& a,
		:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`& b
		);

.. _details-d0/de1/group__core:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Global Functions
----------------

.. index:: pair: function; swap
.. _doxid-d0/de1/group__core_1gafbc8f513f40dc1b7c2d48ea6a5a81776:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::swap(
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& a,
		:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& b
		)

Swaps two matrices.

.. index:: pair: function; swap
.. _doxid-d0/de1/group__core_1gaac41913cb7239fd2771b3c3f25349fe0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::swap(
		:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`& a,
		:ref:`UMat<doxid-d8/d82/classcv_1_1_u_mat>`& b
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

