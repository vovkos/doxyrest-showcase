.. index:: pair: group; Bitwise logical operations
.. _doxid-d2/d18/group__core__hal__interface__logical:

Bitwise logical operations
==========================

.. toctree::
	:hidden:

Bitwise AND: *dst[i] = src1[i] & src2[i]*

Bitwise OR: *dst[i] = src1[i] \| src2[i]*

Bitwise XOR: *dst[i] = src1[i] ^ src2[i]*

Bitwise NOT: *dst[i] = !src[i]*



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src1_data

		- 

	*
		- src1_step

		- first source image data and step

	*
		- src2_data

		- 

	*
		- src2_step

		- second source image data and step

	*
		- dst_data

		- 

	*
		- dst_step

		- destination image data and step

	*
		- width

		- 

	*
		- height

		- dimensions of the images


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// global functions

	int
	:target:`hal_ni_and8u<doxid-d2/d18/group__core__hal__interface__logical_1gae388fee5c9ce0170366a9cb31fcaeaee>`(
		const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* src1_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` src1_step,
		const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* src2_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` src2_step,
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* dst_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` dst_step,
		int width,
		int height
		);

	int
	:target:`hal_ni_not8u<doxid-d2/d18/group__core__hal__interface__logical_1gab95202213ed0dfbf19a5adf39a367fe3>`(
		const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* src_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` src_step,
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* dst_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` dst_step,
		int width,
		int height
		);

	int
	:target:`hal_ni_or8u<doxid-d2/d18/group__core__hal__interface__logical_1ga93204cd91fdcdfcf6752c216b1fa6a51>`(
		const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* src1_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` src1_step,
		const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* src2_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` src2_step,
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* dst_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` dst_step,
		int width,
		int height
		);

	int
	:target:`hal_ni_xor8u<doxid-d2/d18/group__core__hal__interface__logical_1gad531f2b142319e9b75e7334f76893d7d>`(
		const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* src1_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` src1_step,
		const :ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* src2_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` src2_step,
		:ref:`uchar<doxid-d1/d1b/group__core__hal__interface_1ga65f85814a8290f9797005d3b28e7e5fc>`* dst_data,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` dst_step,
		int width,
		int height
		);

