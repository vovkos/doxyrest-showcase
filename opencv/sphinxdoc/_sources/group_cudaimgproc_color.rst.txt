.. index:: pair: group; Color space processing
.. _doxid-db/d8c/group__cudaimgproc__color:

Color space processing
======================

.. toctree::
	:hidden:

	enum_cv_cuda_AlphaCompTypes.rst
	enum_cv_cuda_DemosaicTypes.rst

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// enums

	enum :ref:`cv::cuda::AlphaCompTypes<doxid-db/d8c/group__cudaimgproc__color_1ga320de8db3b0d8624e9b92fc6b117b694>`;
	enum :ref:`cv::cuda::DemosaicTypes<doxid-db/d8c/group__cudaimgproc__color_1gaa9e40b798350356f45667e609d5d82f9>`;

	// global functions

	void
	:ref:`cv::cuda::alphaComp<doxid-db/d8c/group__cudaimgproc__color_1ga08a698700458d9311390997b57fbf8dc>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img1,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img2,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int alpha_op,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	void
	:ref:`cv::cuda::cvtColor<doxid-db/d8c/group__cudaimgproc__color_1ga48d0f208181d5ca370d8ff6b62cbe826>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int code,
		int dcn = 0,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	void
	:ref:`cv::cuda::demosaicing<doxid-db/d8c/group__cudaimgproc__color_1ga7fb153572b573ebd2d7610fcbe64166e>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int code,
		int dcn = -1,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	void
	:ref:`cv::cuda::gammaCorrection<doxid-db/d8c/group__cudaimgproc__color_1gaf4195a8409c3b8fbfa37295c2b2c4729>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		bool forward = true,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	void
	:ref:`cv::cuda::swapChannels<doxid-db/d8c/group__cudaimgproc__color_1ga75a29cc4a97cde0d43ea066b01de927e>`(
		:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` image,
		const int dstOrder [4],
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

.. _details-db/d8c/group__cudaimgproc__color:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Global Functions
----------------

.. index:: pair: function; alphaComp
.. _doxid-db/d8c/group__cudaimgproc__color_1ga08a698700458d9311390997b57fbf8dc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::alphaComp(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img1,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` img2,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int alpha_op,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Composites two images using alpha opacity values contained in each image.

* An example demonstrating the use of alphaComp can be found at opencv_source_code/samples/gpu/alpha_comp.cpp



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- img1

		- First image. Supports CV_8UC4 , CV_16UC4 , CV_32SC4 and CV_32FC4 types.

	*
		- img2

		- Second image. Must have the same size and the same type as img1 .

	*
		- dst

		- Destination image.

	*
		- alpha_op

		- 
		  Flag specifying the alpha-blending operation:
		  
		  * **ALPHA_OVER**
		  
		  * **ALPHA_IN**
		  
		  * **ALPHA_OUT**
		  
		  * **ALPHA_ATOP**
		  
		  * **ALPHA_XOR**
		  
		  * **ALPHA_PLUS**
		  
		  * **ALPHA_OVER_PREMUL**
		  
		  * **ALPHA_IN_PREMUL**
		  
		  * **ALPHA_OUT_PREMUL**
		  
		  * **ALPHA_ATOP_PREMUL**
		  
		  * **ALPHA_XOR_PREMUL**
		  
		  * **ALPHA_PLUS_PREMUL**
		  
		  * **ALPHA_PREMUL**

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.

.. index:: pair: function; cvtColor
.. _doxid-db/d8c/group__cudaimgproc__color_1ga48d0f208181d5ca370d8ff6b62cbe826:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::cvtColor(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int code,
		int dcn = 0,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Converts an image from one color space to another.

3-channel color spaces (like HSV, XYZ, and so on) can be stored in a 4-channel image for better performance.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- Source image with CV_8U , CV_16U , or CV_32F depth and 1, 3, or 4 channels.

	*
		- dst

		- Destination image.

	*
		- code

		- Color space conversion code. For details, see cvtColor .

	*
		- dcn

		- Number of channels in the destination image. If the parameter is 0, the number of the channels is derived automatically from src and the code .

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.



.. rubric:: See also:

:ref:`cvtColor <doxid-db/d8c/group__cudaimgproc__color_1ga48d0f208181d5ca370d8ff6b62cbe826>`

.. index:: pair: function; demosaicing
.. _doxid-db/d8c/group__cudaimgproc__color_1ga7fb153572b573ebd2d7610fcbe64166e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::demosaicing(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		int code,
		int dcn = -1,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Converts an image from Bayer pattern to RGB or grayscale.

The function can do the following transformations:

* Demosaicing using bilinear interpolation
  
  > - COLOR_BayerBG2GRAY , COLOR_BayerGB2GRAY , COLOR_BayerRG2GRAY , COLOR_BayerGR2GRAY > - COLOR_BayerBG2BGR , COLOR_BayerGB2BGR , COLOR_BayerRG2BGR , COLOR_BayerGR2BGR

* Demosaicing using Malvar-He-Cutler algorithm (:ref:`[32] <doxid-d0/de3/citelist_1CITEREF_MHT2011>`)
  
  > - COLOR_BayerBG2GRAY_MHT , COLOR_BayerGB2GRAY_MHT , COLOR_BayerRG2GRAY_MHT , > COLOR_BayerGR2GRAY_MHT > - COLOR_BayerBG2BGR_MHT , COLOR_BayerGB2BGR_MHT , COLOR_BayerRG2BGR_MHT , > COLOR_BayerGR2BGR_MHT



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- Source image (8-bit or 16-bit single channel).

	*
		- dst

		- Destination image.

	*
		- code

		- Color space conversion code (see the description below).

	*
		- dcn

		- Number of channels in the destination image. If the parameter is 0, the number of the channels is derived automatically from src and the code .

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.



.. rubric:: See also:

:ref:`cvtColor <doxid-db/d8c/group__cudaimgproc__color_1ga48d0f208181d5ca370d8ff6b62cbe826>`

.. index:: pair: function; gammaCorrection
.. _doxid-db/d8c/group__cudaimgproc__color_1gaf4195a8409c3b8fbfa37295c2b2c4729:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::gammaCorrection(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		bool forward = true,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Routines for correcting image color gamma.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- Source image (3- or 4-channel 8 bit).

	*
		- dst

		- Destination image.

	*
		- forward

		- true for forward gamma correction or false for inverse gamma correction.

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.

.. index:: pair: function; swapChannels
.. _doxid-db/d8c/group__cudaimgproc__color_1ga75a29cc4a97cde0d43ea066b01de927e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::swapChannels(
		:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` image,
		const int dstOrder [4],
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Exchanges the color channels of an image in-place.

The methods support arbitrary permutations of the original channels, including replication.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- image

		- Source image. Supports only CV_8UC4 type.

	*
		- dstOrder

		- Integer array describing how channel values are permutated. The n-th entry of the array contains the number of the channel that is stored in the n-th channel of the output image. E.g. Given an RGBA image, aDstOrder = [3,2,1,0] converts this to ABGR channel order.

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.

