.. index:: pair: group; Histogram Calculation
.. _doxid-d8/d0e/group__cudaimgproc__hist:

Histogram Calculation
=====================

.. toctree::
	:hidden:

	class_cv_cuda_CLAHE.rst

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// classes

	class :ref:`cv::cuda::CLAHE<doxid-df/d64/classcv_1_1cuda_1_1_c_l_a_h_e>`;

	// global functions

	void
	:ref:`cv::cuda::calcHist<doxid-d8/d0e/group__cudaimgproc__hist_1gaaf3944106890947020bb4522a7619c26>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` hist,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	void
	:ref:`cv::cuda::calcHist<doxid-d8/d0e/group__cudaimgproc__hist_1ga2d55b444ce776c8bbd3087cc90c47f32>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` hist,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`cuda::CLAHE<doxid-df/d64/classcv_1_1cuda_1_1_c_l_a_h_e>`>
	:ref:`cv::cuda::createCLAHE<doxid-d8/d0e/group__cudaimgproc__hist_1ga950d3228b77b368a452553dcf57308c0>`(
		double clipLimit = 40.0,
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` tileGridSize = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(8, 8)
		);

	void
	:ref:`cv::cuda::equalizeHist<doxid-d8/d0e/group__cudaimgproc__hist_1ga2384be74bd2feba7e6c46815513f0060>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	void
	:ref:`cv::cuda::evenLevels<doxid-d8/d0e/group__cudaimgproc__hist_1ga2f2cbd21dc6d7367a7c4ee1a826f389d>`(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` levels,
		int nLevels,
		int lowerLevel,
		int upperLevel,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	void
	:ref:`cv::cuda::histEven<doxid-d8/d0e/group__cudaimgproc__hist_1gacd3b14279fb77a57a510cb8c89a1856f>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` hist,
		int histSize,
		int lowerLevel,
		int upperLevel,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	void
	:ref:`cv::cuda::histEven<doxid-d8/d0e/group__cudaimgproc__hist_1gae9dc72ce8e5467704f2a5777b61b1831>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` hist [4],
		int histSize [4],
		int lowerLevel [4],
		int upperLevel [4],
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	void
	:ref:`cv::cuda::histRange<doxid-d8/d0e/group__cudaimgproc__hist_1ga87819085c1059186d9cdeacd92cea783>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` hist,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` levels,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

	void
	:ref:`cv::cuda::histRange<doxid-d8/d0e/group__cudaimgproc__hist_1ga8816f4cbb3e796264901f9a42eb4884d>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` hist [4],
		const :ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` levels [4],
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		);

.. _details-d8/d0e/group__cudaimgproc__hist:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Global Functions
----------------

.. index:: pair: function; calcHist
.. _doxid-d8/d0e/group__cudaimgproc__hist_1gaaf3944106890947020bb4522a7619c26:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::calcHist(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` hist,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Calculates histogram for one channel 8-bit image.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- Source image with CV_8UC1 type.

	*
		- hist

		- Destination histogram with one row, 256 columns, and the CV_32SC1 type.

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.

.. index:: pair: function; calcHist
.. _doxid-d8/d0e/group__cudaimgproc__hist_1ga2d55b444ce776c8bbd3087cc90c47f32:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::calcHist(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` mask,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` hist,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Calculates histogram for one channel 8-bit image confined in given mask.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- Source image with CV_8UC1 type.

	*
		- hist

		- Destination histogram with one row, 256 columns, and the CV_32SC1 type.

	*
		- mask

		- A mask image same size as src and of type CV_8UC1.

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.

.. index:: pair: function; createCLAHE
.. _doxid-d8/d0e/group__cudaimgproc__hist_1ga950d3228b77b368a452553dcf57308c0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Ptr<doxid-d2/d56/structcv_1_1_ptr>`<:ref:`cuda::CLAHE<doxid-df/d64/classcv_1_1cuda_1_1_c_l_a_h_e>`>
	cv::cuda::createCLAHE(
		double clipLimit = 40.0,
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` tileGridSize = :ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(8, 8)
		)

Creates implementation for :ref:`cuda::CLAHE <doxid-df/d64/classcv_1_1cuda_1_1_c_l_a_h_e>`.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- clipLimit

		- Threshold for contrast limiting.

	*
		- tileGridSize

		- Size of grid for histogram equalization. Input image will be divided into equally sized rectangular tiles. tileGridSize defines the number of tiles in row and column.

.. index:: pair: function; equalizeHist
.. _doxid-d8/d0e/group__cudaimgproc__hist_1ga2384be74bd2feba7e6c46815513f0060:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::equalizeHist(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` dst,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Equalizes the histogram of a grayscale image.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- Source image with CV_8UC1 type.

	*
		- dst

		- Destination image.

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.



.. rubric:: See also:

:ref:`equalizeHist <doxid-d8/d0e/group__cudaimgproc__hist_1ga2384be74bd2feba7e6c46815513f0060>`

.. index:: pair: function; evenLevels
.. _doxid-d8/d0e/group__cudaimgproc__hist_1ga2f2cbd21dc6d7367a7c4ee1a826f389d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::evenLevels(
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` levels,
		int nLevels,
		int lowerLevel,
		int upperLevel,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Computes levels with even distribution.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- levels

		- Destination array. levels has 1 row, nLevels columns, and the CV_32SC1 type.

	*
		- nLevels

		- Number of computed levels. nLevels must be at least 2.

	*
		- lowerLevel

		- Lower boundary value of the lowest level.

	*
		- upperLevel

		- Upper boundary value of the greatest level.

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.

.. index:: pair: function; histEven
.. _doxid-d8/d0e/group__cudaimgproc__hist_1gacd3b14279fb77a57a510cb8c89a1856f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::histEven(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` hist,
		int histSize,
		int lowerLevel,
		int upperLevel,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Calculates a histogram with evenly distributed bins.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- Source image. CV_8U, CV_16U, or CV_16S depth and 1 or 4 channels are supported. For a four-channel image, all channels are processed separately.

	*
		- hist

		- Destination histogram with one row, histSize columns, and the CV_32S type.

	*
		- histSize

		- Size of the histogram.

	*
		- lowerLevel

		- Lower boundary of lowest-level bin.

	*
		- upperLevel

		- Upper boundary of highest-level bin.

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.

.. index:: pair: function; histEven
.. _doxid-d8/d0e/group__cudaimgproc__hist_1gae9dc72ce8e5467704f2a5777b61b1831:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::histEven(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` hist [4],
		int histSize [4],
		int lowerLevel [4],
		int upperLevel [4],
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

.. index:: pair: function; histRange
.. _doxid-d8/d0e/group__cudaimgproc__hist_1ga87819085c1059186d9cdeacd92cea783:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::histRange(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`OutputArray<doxid-dc/d84/group__core__basic_1gaad17fda1d0f0d1ee069aebb1df2913c0>` hist,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` levels,
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

Calculates a histogram with bins determined by the levels array.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- src

		- Source image. CV_8U , CV_16U , or CV_16S depth and 1 or 4 channels are supported. For a four-channel image, all channels are processed separately.

	*
		- hist

		- Destination histogram with one row, (levels.cols-1) columns, and the CV_32SC1 type.

	*
		- levels

		- Number of levels in the histogram.

	*
		- stream

		- :ref:`Stream <doxid-d1/d04/classcv_1_1cuda_1_1_stream>` for the asynchronous version.

.. index:: pair: function; histRange
.. _doxid-d8/d0e/group__cudaimgproc__hist_1ga8816f4cbb3e796264901f9a42eb4884d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::cuda::histRange(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` src,
		:ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` hist [4],
		const :ref:`GpuMat<doxid-d5/da3/classcv_1_1cuda_1_1_gpu_mat>` levels [4],
		:ref:`Stream<doxid-d1/d04/classcv_1_1cuda_1_1_stream>`& stream = :ref:`Stream::Null<doxid-d1/d04/classcv_1_1cuda_1_1_stream_1a680af5adfeeb1cdaa5b7b13f680c0131>`()
		)

This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.

