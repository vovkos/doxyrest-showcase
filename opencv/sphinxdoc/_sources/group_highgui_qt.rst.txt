.. index:: pair: group; Qt New Functions
.. _doxid-dc/d46/group__highgui__qt:

Qt New Functions
================

.. toctree::
	:hidden:

	struct_cv_QtFont.rst

Overview
~~~~~~~~

.. :ref:`More...<details-dc/d46/group__highgui__qt>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// structs

	struct :ref:`cv::QtFont<doxid-de/d51/structcv_1_1_qt_font>`;

	// global functions

	void
	:ref:`cv::addText<doxid-dc/d46/group__highgui__qt_1ga4e2751b94f709c848f0658d78007e449>`(
		const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& img,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& text,
		:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>` org,
		const :ref:`QtFont<doxid-de/d51/structcv_1_1_qt_font>`& font
		);

	void
	:ref:`cv::addText<doxid-dc/d46/group__highgui__qt_1gad589fa15d231b4c6190c31a3034cd04e>`(
		const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& img,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& text,
		:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>` org,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& nameFont,
		int pointSize = -1,
		:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` color = :ref:`Scalar::all<doxid-d7/d13/classcv_1_1_scalar___1ac1509a4b8454fe7fe29db069e13a2e6f>`(0),
		int weight = :ref:`QT_FONT_NORMAL<doxid-d7/dfc/group__highgui_1ggacd4a7935f4c2b336f8bbde275d952927a541a5375e2348899274ead17e119b00e>`,
		int style = :ref:`QT_STYLE_NORMAL<doxid-d7/dfc/group__highgui_1gga985c48f130e04061bd651de78441082ea72d697afca937b7674103569cc62f6d1>`,
		int spacing = 0
		);

	int
	:ref:`cv::createButton<doxid-dc/d46/group__highgui__qt_1ga938dc3ab0a9f115156439bd380816e2c>`(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& bar_name,
		:ref:`ButtonCallback<doxid-d7/dfc/group__highgui_1ga17ffcbb2343dc06e56f980b8414e3566>` on_change,
		void* userdata = 0,
		int type = :ref:`QT_PUSH_BUTTON<doxid-d7/dfc/group__highgui_1ggad15c7adb377e778dc907c0e318be193ea58964398bbcbd6f8a83e9767ed485880>`,
		bool initial_button_state = false
		);

	void
	:ref:`cv::displayOverlay<doxid-dc/d46/group__highgui__qt_1ga704e0387318cd1e7928e6fe17e81d6aa>`(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& winname,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& text,
		int delayms = 0
		);

	void
	:ref:`cv::displayStatusBar<doxid-dc/d46/group__highgui__qt_1gac56ae86269eb4fbd9c8d8cb7babfbf64>`(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& winname,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& text,
		int delayms = 0
		);

	:ref:`QtFont<doxid-de/d51/structcv_1_1_qt_font>`
	:ref:`cv::fontQt<doxid-dc/d46/group__highgui__qt_1ga6281d0939583c9e0ee36372dfeb52ae3>`(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& nameFont,
		int pointSize = -1,
		:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` color = :ref:`Scalar::all<doxid-d7/d13/classcv_1_1_scalar___1ac1509a4b8454fe7fe29db069e13a2e6f>`(0),
		int weight = :ref:`QT_FONT_NORMAL<doxid-d7/dfc/group__highgui_1ggacd4a7935f4c2b336f8bbde275d952927a541a5375e2348899274ead17e119b00e>`,
		int style = :ref:`QT_STYLE_NORMAL<doxid-d7/dfc/group__highgui_1gga985c48f130e04061bd651de78441082ea72d697afca937b7674103569cc62f6d1>`,
		int spacing = 0
		);

	void
	:ref:`cv::loadWindowParameters<doxid-dc/d46/group__highgui__qt_1ga8e6806c75e016cf22d998b4d454b3bfd>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& windowName);

	void
	:ref:`cv::saveWindowParameters<doxid-dc/d46/group__highgui__qt_1gadf97be240277ba20442fa7ca7f6bc957>`(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& windowName);

	int
	:target:`cv::startLoop<doxid-dc/d46/group__highgui__qt_1gae1ae035082d76c7fb981203a974bd4ba>`(
		int(*)(int argc, char*argv[]) pt2Func,
		int argc,
		char* argv []
		);

	void
	:target:`cv::stopLoop<doxid-dc/d46/group__highgui__qt_1gad4783dd50a6844a04ac8cb4fe158fdf3>`();

.. _details-dc/d46/group__highgui__qt:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

.. image:: qtgui.png
	:alt: image

This figure explains new functionality implemented with Qt\* GUI. The new GUI provides a statusbar, a toolbar, and a control panel. The control panel can have trackbars and buttonbars attached to it. If you cannot see the control panel, press Ctrl+P or right-click any Qt window and select **Display properties window**.

* To attach a trackbar, the window name parameter must be NULL.

* To attach a buttonbar, a button must be created. If the last bar attached to the control panel is a buttonbar, the new button is added to the right of the last button. If the last bar attached to the control panel is a trackbar, or the control panel is empty, a new buttonbar is created. Then, a new button is attached to it.

See below the example used to generate the figure:

.. ref-code-block:: cpp

	int main(int argc, char *argv[])
	{
	
	    int value = 50;
	    int value2 = 0;
	
	
	    namedWindow("main1",WINDOW_NORMAL);
	    namedWindow("main2",WINDOW_AUTOSIZE | CV_GUI_NORMAL);
	    createTrackbar( "track1", "main1", &value, 255,  NULL);
	
	    String nameb1 = "button1";
	    String nameb2 = "button2";
	
	    createButton(nameb1,callbackButton,&nameb1,QT_CHECKBOX,1);
	    createButton(nameb2,callbackButton,NULL,QT_CHECKBOX,0);
	    createTrackbar( "track2", NULL, &value2, 255, NULL);
	    createButton("button5",callbackButton1,NULL,QT_RADIOBOX,0);
	    createButton("button6",callbackButton2,NULL,QT_RADIOBOX,1);
	
	    setMouseCallback( "main2",on_mouse,NULL );
	
	    Mat img1 = imread("files/flower.jpg");
	    VideoCapture video;
	    video.open("files/hockey.avi");
	
	    Mat img2,img3;
	
	    while( waitKey(33) != 27 )
	    {
	        img1.convertTo(img2,-1,1,value);
	        video >> img3;
	
	        imshow("main1",img2);
	        imshow("main2",img3);
	    }
	
	    destroyAllWindows();
	
	    return 0;
	}

Global Functions
----------------

.. index:: pair: function; addText
.. _doxid-dc/d46/group__highgui__qt_1ga4e2751b94f709c848f0658d78007e449:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::addText(
		const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& img,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& text,
		:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>` org,
		const :ref:`QtFont<doxid-de/d51/structcv_1_1_qt_font>`& font
		)

Draws a text on the image.

The function addText draws *text* on the image *img* using a specific font *font* (see example :ref:`cv::fontQt <doxid-dc/d46/group__highgui__qt_1ga6281d0939583c9e0ee36372dfeb52ae3>`)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- img

		- 8-bit 3-channel image where the text should be drawn.

	*
		- text

		- Text to write on an image.

	*
		- org

		- Point(x,y) where the text should start on an image.

	*
		- font

		- Font to use to draw a text.

.. index:: pair: function; addText
.. _doxid-dc/d46/group__highgui__qt_1gad589fa15d231b4c6190c31a3034cd04e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::addText(
		const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& img,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& text,
		:ref:`Point<doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>` org,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& nameFont,
		int pointSize = -1,
		:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` color = :ref:`Scalar::all<doxid-d7/d13/classcv_1_1_scalar___1ac1509a4b8454fe7fe29db069e13a2e6f>`(0),
		int weight = :ref:`QT_FONT_NORMAL<doxid-d7/dfc/group__highgui_1ggacd4a7935f4c2b336f8bbde275d952927a541a5375e2348899274ead17e119b00e>`,
		int style = :ref:`QT_STYLE_NORMAL<doxid-d7/dfc/group__highgui_1gga985c48f130e04061bd651de78441082ea72d697afca937b7674103569cc62f6d1>`,
		int spacing = 0
		)

Draws a text on the image.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- img

		- 8-bit 3-channel image where the text should be drawn.

	*
		- text

		- Text to write on an image.

	*
		- org

		- Point(x,y) where the text should start on an image.

	*
		- nameFont

		- Name of the font. The name should match the name of a system font (such as Times\*). If the font is not found, a default one is used.

	*
		- pointSize

		- Size of the font. If not specified, equal zero or negative, the point size of the font is set to a system-dependent default value. Generally, this is 12 points.

	*
		- color

		- Color of the font in BGRA where A = 255 is fully transparent.

	*
		- weight

		- Font weight. Available operation flags are : :ref:`cv::QtFontWeights <doxid-d7/dfc/group__highgui_1gacd4a7935f4c2b336f8bbde275d952927>` You can also specify a positive integer for better control.

	*
		- style

		- Font style. Available operation flags are : :ref:`cv::QtFontStyles <doxid-d7/dfc/group__highgui_1ga985c48f130e04061bd651de78441082e>`

	*
		- spacing

		- Spacing between characters. It can be negative or positive.

.. index:: pair: function; createButton
.. _doxid-dc/d46/group__highgui__qt_1ga938dc3ab0a9f115156439bd380816e2c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	cv::createButton(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& bar_name,
		:ref:`ButtonCallback<doxid-d7/dfc/group__highgui_1ga17ffcbb2343dc06e56f980b8414e3566>` on_change,
		void* userdata = 0,
		int type = :ref:`QT_PUSH_BUTTON<doxid-d7/dfc/group__highgui_1ggad15c7adb377e778dc907c0e318be193ea58964398bbcbd6f8a83e9767ed485880>`,
		bool initial_button_state = false
		)

Attaches a button to the control panel.

The function createButton attaches a button to the control panel. Each button is added to a buttonbar to the right of the last button. A new buttonbar is created if nothing was attached to the control panel before, or if the last element attached to the control panel was a trackbar or if the QT_NEW_BUTTONBAR flag is added to the type.

See below various examples of the :ref:`cv::createButton <doxid-dc/d46/group__highgui__qt_1ga938dc3ab0a9f115156439bd380816e2c>` function call: :

.. ref-code-block:: cpp

	createButton(NULL,callbackButton);//create a push button "button 0", that will call callbackButton.
	createButton("button2",callbackButton,NULL,QT_CHECKBOX,0);
	createButton("button3",callbackButton,&value);
	createButton("button5",callbackButton1,NULL,QT_RADIOBOX);
	createButton("button6",callbackButton2,NULL,QT_PUSH_BUTTON,1);
	createButton("button6",callbackButton2,NULL,QT_PUSH_BUTTON|QT_NEW_BUTTONBAR);// create a push button in a new row



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- bar_name

		- Name of the button.

	*
		- on_change

		- Pointer to the function to be called every time the button changes its state. This function should be prototyped as void Foo(int state,\*void); . *state* is the current state of the button. It could be -1 for a push button, 0 or 1 for a check/radio box button.

	*
		- userdata

		- Pointer passed to the callback function.

	*
		- type

		- Optional type of the button. Available types are: (:ref:`cv::QtButtonTypes <doxid-d7/dfc/group__highgui_1gad15c7adb377e778dc907c0e318be193e>`)

	*
		- initial_button_state

		- Default state of the button. Use for checkbox and radiobox. Its value could be 0 or 1. (**Optional**)

.. index:: pair: function; displayOverlay
.. _doxid-dc/d46/group__highgui__qt_1ga704e0387318cd1e7928e6fe17e81d6aa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::displayOverlay(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& winname,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& text,
		int delayms = 0
		)

Displays a text on a window image as an overlay for a specified duration.

The function displayOverlay displays useful information/tips on top of the window for a certain amount of time *delayms*. The function does not modify the image, displayed in the window, that is, after the specified delay the original content of the window is restored.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- winname

		- Name of the window.

	*
		- text

		- Overlay text to write on a window image.

	*
		- delayms

		- The period (in milliseconds), during which the overlay text is displayed. If this function is called before the previous overlay text timed out, the timer is restarted and the text is updated. If this value is zero, the text never disappears.

.. index:: pair: function; displayStatusBar
.. _doxid-dc/d46/group__highgui__qt_1gac56ae86269eb4fbd9c8d8cb7babfbf64:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::displayStatusBar(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& winname,
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& text,
		int delayms = 0
		)

Displays a text on the window statusbar during the specified period of time.

The function displayStatusBar displays useful information/tips on top of the window for a certain amount of time *delayms*. This information is displayed on the window statusbar (the window must be created with the CV_GUI_EXPANDED flags).



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- winname

		- Name of the window.

	*
		- text

		- Text to write on the window statusbar.

	*
		- delayms

		- Duration (in milliseconds) to display the text. If this function is called before the previous text timed out, the timer is restarted and the text is updated. If this value is zero, the text never disappears.

.. index:: pair: function; fontQt
.. _doxid-dc/d46/group__highgui__qt_1ga6281d0939583c9e0ee36372dfeb52ae3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`QtFont<doxid-de/d51/structcv_1_1_qt_font>`
	cv::fontQt(
		const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& nameFont,
		int pointSize = -1,
		:ref:`Scalar<doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>` color = :ref:`Scalar::all<doxid-d7/d13/classcv_1_1_scalar___1ac1509a4b8454fe7fe29db069e13a2e6f>`(0),
		int weight = :ref:`QT_FONT_NORMAL<doxid-d7/dfc/group__highgui_1ggacd4a7935f4c2b336f8bbde275d952927a541a5375e2348899274ead17e119b00e>`,
		int style = :ref:`QT_STYLE_NORMAL<doxid-d7/dfc/group__highgui_1gga985c48f130e04061bd651de78441082ea72d697afca937b7674103569cc62f6d1>`,
		int spacing = 0
		)

Creates the font to draw a text on an image.

The function fontQt creates a :ref:`cv::QtFont <doxid-de/d51/structcv_1_1_qt_font>` object. This :ref:`cv::QtFont <doxid-de/d51/structcv_1_1_qt_font>` is not compatible with putText .

A basic usage of this function is the following: :

.. ref-code-block:: cpp

	QtFont font = fontQt("Times");
	addText( img1, "Hello World !", Point(50,50), font);



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- nameFont

		- Name of the font. The name should match the name of a system font (such as Times\*). If the font is not found, a default one is used.

	*
		- pointSize

		- Size of the font. If not specified, equal zero or negative, the point size of the font is set to a system-dependent default value. Generally, this is 12 points.

	*
		- color

		- Color of the font in BGRA where A = 255 is fully transparent. Use the macro CV_RGB for simplicity.

	*
		- weight

		- Font weight. Available operation flags are : :ref:`cv::QtFontWeights <doxid-d7/dfc/group__highgui_1gacd4a7935f4c2b336f8bbde275d952927>` You can also specify a positive integer for better control.

	*
		- style

		- Font style. Available operation flags are : :ref:`cv::QtFontStyles <doxid-d7/dfc/group__highgui_1ga985c48f130e04061bd651de78441082e>`

	*
		- spacing

		- Spacing between characters. It can be negative or positive.

.. index:: pair: function; loadWindowParameters
.. _doxid-dc/d46/group__highgui__qt_1ga8e6806c75e016cf22d998b4d454b3bfd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::loadWindowParameters(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& windowName)

Loads parameters of the specified window.

The function loadWindowParameters loads size, location, flags, trackbars value, zoom and panning location of the window windowName.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- windowName

		- Name of the window.

.. index:: pair: function; saveWindowParameters
.. _doxid-dc/d46/group__highgui__qt_1gadf97be240277ba20442fa7ca7f6bc957:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cv::saveWindowParameters(const :ref:`String<doxid-dc/d0e/classcv_1_1_string>`& windowName)

Saves parameters of the specified window.

The function saveWindowParameters saves size, location, flags, trackbars value, zoom and panning location of the window windowName.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- windowName

		- Name of the window.

