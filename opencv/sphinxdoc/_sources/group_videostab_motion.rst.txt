.. index:: pair: group; Global Motion Estimation
.. _doxid-d4/d2c/group__videostab__motion:

Global Motion Estimation
========================

.. toctree::
	:hidden:

	enum_cv_videostab_MotionModel.rst
	struct_cv_videostab_RansacParams.rst
	class_cv_videostab_FromFileMotionReader.rst
	class_cv_videostab_GaussianMotionFilter.rst
	class_cv_videostab_IMotionStabilizer.rst
	class_cv_videostab_ImageMotionEstimatorBase.rst
	class_cv_videostab_KeypointBasedMotionEstimator.rst
	class_cv_videostab_LpMotionStabilizer.rst
	class_cv_videostab_MotionEstimatorBase.rst
	class_cv_videostab_MotionEstimatorL1.rst
	class_cv_videostab_MotionEstimatorRansacL2.rst
	class_cv_videostab_MotionFilterBase.rst
	class_cv_videostab_MotionStabilizationPipeline.rst
	class_cv_videostab_ToFileMotionWriter.rst

Overview
~~~~~~~~

The video stabilization module contains a set of functions and classes for global motion estimation between point clouds or between images. :ref:`More...<details-d4/d2c/group__videostab__motion>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// enums

	enum :ref:`cv::videostab::MotionModel<doxid-d4/d2c/group__videostab__motion_1gac61e59db30b7d13983885d3ad3116ce1>`;

	// structs

	struct :ref:`cv::videostab::RansacParams<doxid-d9/d49/structcv_1_1videostab_1_1_ransac_params>`;

	// classes

	class :ref:`cv::videostab::FromFileMotionReader<doxid-de/d27/classcv_1_1videostab_1_1_from_file_motion_reader>`;
	class :ref:`cv::videostab::GaussianMotionFilter<doxid-d8/d8e/classcv_1_1videostab_1_1_gaussian_motion_filter>`;
	class :ref:`cv::videostab::IMotionStabilizer<doxid-de/db9/classcv_1_1videostab_1_1_i_motion_stabilizer>`;
	class :ref:`cv::videostab::ImageMotionEstimatorBase<doxid-db/d18/classcv_1_1videostab_1_1_image_motion_estimator_base>`;
	class :ref:`cv::videostab::KeypointBasedMotionEstimator<doxid-d7/dbc/classcv_1_1videostab_1_1_keypoint_based_motion_estimator>`;
	class :ref:`cv::videostab::LpMotionStabilizer<doxid-d2/d01/classcv_1_1videostab_1_1_lp_motion_stabilizer>`;
	class :ref:`cv::videostab::MotionEstimatorBase<doxid-da/dc4/classcv_1_1videostab_1_1_motion_estimator_base>`;
	class :ref:`cv::videostab::MotionEstimatorL1<doxid-d9/dd0/classcv_1_1videostab_1_1_motion_estimator_l1>`;
	class :ref:`cv::videostab::MotionEstimatorRansacL2<doxid-de/dd3/classcv_1_1videostab_1_1_motion_estimator_ransac_l2>`;
	class :ref:`cv::videostab::MotionFilterBase<doxid-d4/d01/classcv_1_1videostab_1_1_motion_filter_base>`;
	class :ref:`cv::videostab::MotionStabilizationPipeline<doxid-dd/d0f/classcv_1_1videostab_1_1_motion_stabilization_pipeline>`;
	class :ref:`cv::videostab::ToFileMotionWriter<doxid-dd/d63/classcv_1_1videostab_1_1_to_file_motion_writer>`;

	// global functions

	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	:target:`cv::videostab::ensureInclusionConstraint<doxid-d4/d2c/group__videostab__motion_1ga8e28e77e2b7582f3c022e9772117d045>`(
		const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& M,
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` size,
		float trimRatio
		);

	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	:ref:`cv::videostab::estimateGlobalMotionLeastSquares<doxid-d4/d2c/group__videostab__motion_1ga8fa2f6a88df65ad78241783faffc26a8>`(
		:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` points0,
		:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` points1,
		int model = :ref:`MM_AFFINE<doxid-d4/d2c/group__videostab__motion_1ggac61e59db30b7d13983885d3ad3116ce1a30b3b23d3cdd42fd8a7c4e286472de36>`,
		float* rmse = 0
		);

	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	:ref:`cv::videostab::estimateGlobalMotionRansac<doxid-d4/d2c/group__videostab__motion_1ga6260bd61792a7ec94ea974af9d94ead7>`(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` points0,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` points1,
		int model = :ref:`MM_AFFINE<doxid-d4/d2c/group__videostab__motion_1ggac61e59db30b7d13983885d3ad3116ce1a30b3b23d3cdd42fd8a7c4e286472de36>`,
		const :ref:`RansacParams<doxid-d9/d49/structcv_1_1videostab_1_1_ransac_params>`& params = :ref:`RansacParams::default2dMotion<doxid-d9/d49/structcv_1_1videostab_1_1_ransac_params_1a30dc41affb537f4c8af23bebc18defa1>`(:ref:`MM_AFFINE<doxid-d4/d2c/group__videostab__motion_1ggac61e59db30b7d13983885d3ad3116ce1a30b3b23d3cdd42fd8a7c4e286472de36>`),
		float* rmse = 0,
		int* ninliers = 0
		);

	float
	:target:`cv::videostab::estimateOptimalTrimRatio<doxid-d4/d2c/group__videostab__motion_1gab049af45e7db622406b58686e81fa5e2>`(
		const :ref:`Mat<doxid-db/de6/classcv_1_1_mat>`& M,
		:ref:`Size<doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>` size
		);

	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	:ref:`cv::videostab::getMotion<doxid-d4/d2c/group__videostab__motion_1ga1ea168631bcaeda9fb62aa5bab4dddd2>`(
		int from,
		int to,
		const std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>& motions
		);

.. _details-d4/d2c/group__videostab__motion:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

The video stabilization module contains a set of functions and classes for global motion estimation between point clouds or between images. In the last case features are extracted and matched internally. For the sake of convenience the motion estimation functions are wrapped into classes. Both the functions and the classes are available.

Global Functions
----------------

.. index:: pair: function; estimateGlobalMotionLeastSquares
.. _doxid-d4/d2c/group__videostab__motion_1ga8fa2f6a88df65ad78241783faffc26a8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	cv::videostab::estimateGlobalMotionLeastSquares(
		:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` points0,
		:ref:`InputOutputArray<doxid-dc/d84/group__core__basic_1gaf77c9a14ef956c50c1efd4547f444e63>` points1,
		int model = :ref:`MM_AFFINE<doxid-d4/d2c/group__videostab__motion_1ggac61e59db30b7d13983885d3ad3116ce1a30b3b23d3cdd42fd8a7c4e286472de36>`,
		float* rmse = 0
		)

Estimates best global motion between two 2D point clouds in the least-squares sense.

Works in-place and changes input point arrays.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- points0

		- Source set of 2D points (32F).

	*
		- points1

		- Destination set of 2D points (32F).

	*
		- model

		- Motion model (up to MM_AFFINE).

	*
		- rmse

		- Final root-mean-square error.



.. rubric:: Returns:

3x3 2D transformation matrix (32F).

.. index:: pair: function; estimateGlobalMotionRansac
.. _doxid-d4/d2c/group__videostab__motion_1ga6260bd61792a7ec94ea974af9d94ead7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	cv::videostab::estimateGlobalMotionRansac(
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` points0,
		:ref:`InputArray<doxid-dc/d84/group__core__basic_1ga353a9de602fe76c709e12074a6f362ba>` points1,
		int model = :ref:`MM_AFFINE<doxid-d4/d2c/group__videostab__motion_1ggac61e59db30b7d13983885d3ad3116ce1a30b3b23d3cdd42fd8a7c4e286472de36>`,
		const :ref:`RansacParams<doxid-d9/d49/structcv_1_1videostab_1_1_ransac_params>`& params = :ref:`RansacParams::default2dMotion<doxid-d9/d49/structcv_1_1videostab_1_1_ransac_params_1a30dc41affb537f4c8af23bebc18defa1>`(:ref:`MM_AFFINE<doxid-d4/d2c/group__videostab__motion_1ggac61e59db30b7d13983885d3ad3116ce1a30b3b23d3cdd42fd8a7c4e286472de36>`),
		float* rmse = 0,
		int* ninliers = 0
		)

Estimates best global motion between two 2D point clouds robustly (using RANSAC method).



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- points0

		- Source set of 2D points (32F).

	*
		- points1

		- Destination set of 2D points (32F).

	*
		- model

		- Motion model. See :ref:`cv::videostab::MotionModel <doxid-d4/d2c/group__videostab__motion_1gac61e59db30b7d13983885d3ad3116ce1>`.

	*
		- params

		- RANSAC method parameters. See :ref:`videostab::RansacParams <doxid-d9/d49/structcv_1_1videostab_1_1_ransac_params>`.

	*
		- rmse

		- Final root-mean-square error.

	*
		- ninliers

		- Final number of inliers.

.. index:: pair: function; getMotion
.. _doxid-d4/d2c/group__videostab__motion_1ga1ea168631bcaeda9fb62aa5bab4dddd2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`
	cv::videostab::getMotion(
		int from,
		int to,
		const std::vector<:ref:`Mat<doxid-db/de6/classcv_1_1_mat>`>& motions
		)

Computes motion between two frames assuming that all the intermediate motions are known.



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- from

		- Source frame index.

	*
		- to

		- Destination frame index.

	*
		- motions

		- Pair-wise motions. motions[i] denotes motion from the frame i to the frame i+1



.. rubric:: Returns:

Motion from the frame from to the frame to.

