.. index:: pair: page; Finding contours in your image
.. _doxid-df/d0d/tutorial_find_contours:

Finding contours in your image
==============================

.. rubric:: Goal

In this tutorial you will learn how to:

* Use the OpenCV function :ref:`cv::findContours <doxid-d3/dc0/group__imgproc__shape_1ga17ed9f5d79ae97bd4c7cf18403e1689a>`

* Use the OpenCV function :ref:`cv::drawContours <doxid-d6/d6e/group__imgproc__draw_1ga746c0625f1781f1ffc9056259103edbc>`

.. rubric:: Theory

.. rubric:: Code

This tutorial code's is shown lines below. You can also download it from `here <https://github.com/opencv/opencv/tree/master/samples/cpp/tutorial_code/ShapeDescriptors/findContours_demo.cpp>`__

.. ref-code-block:: cpp

	
	#include "opencv2/imgcodecs.hpp"
	#include "opencv2/highgui.hpp"
	#include "opencv2/imgproc.hpp"
	#include <iostream>
	
	using namespace :ref:`cv <doxid-d2/d75/namespacecv>`;
	using namespace :ref:`std <doxid-d8/dcc/namespacestd>`;
	
	:ref:`Mat <doxid-db/de6/classcv_1_1_mat>` src; :ref:`Mat <doxid-db/de6/classcv_1_1_mat>` src_gray;
	int thresh = 100;
	int max_thresh = 255;
	:ref:`RNG <doxid-d3/df8/classcv_1_1_r_n_g>` rng(12345);
	
	void thresh_callback(int, void* );
	
	int main( int, char** argv )
	{
	  src = :ref:`imread <doxid-d4/da8/group__imgcodecs_1ga288b8b3da0892bd651fce07b3bbd3a56>`(argv[1], :ref:`IMREAD_COLOR <doxid-d4/da8/group__imgcodecs_1gga61d9b0126a3e57d9277ac48327799c80af660544735200cbe942eea09232eb822>`);
	  if (src.:ref:`empty <doxid-db/de6/classcv_1_1_mat_1abbec3525a852e77998aba034813fded4>`())
	  {
	    cerr << "No image supplied ..." << endl;
	    return -1;
	  }
	
	  :ref:`cvtColor <doxid-d7/d1b/group__imgproc__misc_1ga397ae87e1288a81d2363b61574eb8cab>`( src, src_gray, :ref:`COLOR_BGR2GRAY <doxid-d7/d1b/group__imgproc__misc_1gga4e0972be5de079fed4e3a10e24ef5ef0a353a4b8db9040165db4dacb5bcefb6ea>` );
	  :ref:`blur <doxid-d4/d86/group__imgproc__filter_1ga8c45db9afe636703801b0b2e440fce37>`( src_gray, src_gray, :ref:`Size <doxid-dc/d84/group__core__basic_1ga346f563897249351a34549137c8532a0>`(3,3) );
	
	  const char* source_window = "Source";
	  :ref:`namedWindow <doxid-d7/dfc/group__highgui_1ga5afdf8410934fd099df85c75b2e0888b>`( source_window, :ref:`WINDOW_AUTOSIZE <doxid-d7/dfc/group__highgui_1ggabf7d2c5625bc59ac130287f925557ac3acf621ace7a54954cbac01df27e47228f>` );
	  :ref:`imshow <doxid-d7/dfc/group__highgui_1ga453d42fe4cb60e5723281a89973ee563>`( source_window, src );
	
	  :ref:`createTrackbar <doxid-d7/dfc/group__highgui_1gaf78d2155d30b728fc413803745b67a9b>`( " Canny thresh:", "Source", &thresh, max_thresh, thresh_callback );
	  thresh_callback( 0, 0 );
	
	  :ref:`waitKey <doxid-d7/dfc/group__highgui_1ga5628525ad33f52eab17feebcfba38bd7>`(0);
	  return(0);
	}
	
	void thresh_callback(int, void* )
	{
	  :ref:`Mat <doxid-db/de6/classcv_1_1_mat>` canny_output;
	  vector<vector<Point> > contours;
	  vector<Vec4i> hierarchy;
	
	  :ref:`Canny <doxid-dd/d1a/group__imgproc__feature_1ga04723e007ed888ddf11d9ba04e2232de>`( src_gray, canny_output, thresh, thresh*2, 3 );
	  :ref:`findContours <doxid-d3/dc0/group__imgproc__shape_1ga17ed9f5d79ae97bd4c7cf18403e1689a>`( canny_output, contours, hierarchy, :ref:`RETR_TREE <doxid-d3/dc0/group__imgproc__shape_1gga819779b9857cc2f8601e6526a3a5bc71ab10df56aed56c89a026580adc9431f58>`, :ref:`CHAIN_APPROX_SIMPLE <doxid-d3/dc0/group__imgproc__shape_1gga4303f45752694956374734a03c54d5ffa5f2883048e654999209f88ba04c302f5>`, :ref:`Point <doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`(0, 0) );
	
	  :ref:`Mat <doxid-db/de6/classcv_1_1_mat>` drawing = :ref:`Mat::zeros <doxid-db/de6/classcv_1_1_mat_1a0b57b6a326c8876d944d188a46e0f556>`( canny_output.:ref:`size <doxid-db/de6/classcv_1_1_mat_1a146f8e8dda07d1365a575ab83d9828d1>`(), :ref:`CV_8UC3 <doxid-d1/d1b/group__core__hal__interface_1ga88c4cd9de76f678f33928ef1e3f96047>` );
	  for( size_t i = 0; i< contours.size(); i++ )
	     {
	       Scalar color = :ref:`Scalar <doxid-dc/d84/group__core__basic_1ga599fe92e910c027be274233eccad7beb>`( rng.uniform(0, 255), rng.uniform(0,255), rng.uniform(0,255) );
	       :ref:`drawContours <doxid-d6/d6e/group__imgproc__draw_1ga746c0625f1781f1ffc9056259103edbc>`( drawing, contours, (int)i, color, 2, 8, hierarchy, 0, :ref:`Point <doxid-dc/d84/group__core__basic_1ga1e83eafb2d26b3c93f09e8338bcab192>`() );
	     }
	
	  :ref:`namedWindow <doxid-d7/dfc/group__highgui_1ga5afdf8410934fd099df85c75b2e0888b>`( "Contours", :ref:`WINDOW_AUTOSIZE <doxid-d7/dfc/group__highgui_1ggabf7d2c5625bc59ac130287f925557ac3acf621ace7a54954cbac01df27e47228f>` );
	  :ref:`imshow <doxid-d7/dfc/group__highgui_1ga453d42fe4cb60e5723281a89973ee563>`( "Contours", drawing );
	}

.. rubric:: Explanation

.. rubric:: Result

Here it is:

.. image:: Find_Contours_Original_Image.jpg



.. image:: Find_Contours_Result.jpg

