.. index:: pair: struct; cvflann::Hamming
.. _doxid-de/d8a/structcvflann_1_1_hamming:

template struct cvflann::Hamming
================================

.. toctree::
	:hidden:

:ref:`Hamming <doxid-de/d8a/structcvflann_1_1_hamming>` distance functor (pop count between two binary vectors, i.e. xor them and count the number of bits set) That code was taken from brief.cpp in OpenCV


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <dist.h>
	
	template <class T>
	struct Hamming
	{
		// typedefs
	
		typedef T :target:`ElementType<doxid-de/d8a/structcvflann_1_1_hamming_1a2be434e23cf78b659dc72d6a0d5fa41e>`;
		typedef :ref:`False<doxid-d4/d38/classcvflann_1_1_false>` :target:`is_kdtree_distance<doxid-de/d8a/structcvflann_1_1_hamming_1a3b2a3e130d86c02b8cac98ae58645bad>`;
		typedef :ref:`False<doxid-d4/d38/classcvflann_1_1_false>` :target:`is_vector_space_distance<doxid-de/d8a/structcvflann_1_1_hamming_1ac59dee15cce5d7a01bf8dc54ef30a305>`;
		typedef int :target:`ResultType<doxid-de/d8a/structcvflann_1_1_hamming_1a08d0b008dcd6bce54b0f305176478d29>`;

		// methods
	
		template <
			typename Iterator1,
			typename Iterator2
			>
		:ref:`ResultType<doxid-de/d8a/structcvflann_1_1_hamming_1a08d0b008dcd6bce54b0f305176478d29>`
		:target:`operator()<doxid-de/d8a/structcvflann_1_1_hamming_1a7a1a8aa3e8e073fc5ae2eee7cc0d61ad>`(
			Iterator1 a,
			Iterator2 b,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` size,
			:ref:`ResultType<doxid-de/d8a/structcvflann_1_1_hamming_1a08d0b008dcd6bce54b0f305176478d29>` = -1
			) const;
	};
