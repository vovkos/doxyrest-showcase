.. index:: pair: struct; cvflann::MinkowskiDistance
.. _doxid-d5/d4c/structcvflann_1_1_minkowski_distance:

template struct cvflann::MinkowskiDistance
==========================================

.. toctree::
	:hidden:

Overview
~~~~~~~~




.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <dist.h>
	
	template <class T>
	struct MinkowskiDistance
	{
		// typedefs
	
		typedef T :target:`ElementType<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1ade76f2298b0f811a466afdf72b18846b>`;
		typedef :ref:`True<doxid-d7/daa/classcvflann_1_1_true>` :target:`is_kdtree_distance<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1ab0f43baaf0a36a5598a88b2ee55a3e01>`;
		typedef :ref:`True<doxid-d7/daa/classcvflann_1_1_true>` :target:`is_vector_space_distance<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a84506bd48e3b43e87d56e9b60d9fb464>`;
		typedef :ref:`Accumulator<doxid-d4/d03/structcvflann_1_1_accumulator>`<T>::Type :target:`ResultType<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a21baf56e06b45cdea5de1530c2e7c0ec>`;

		// fields
	
		int :target:`order<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a2703b6de832914cac0163cab19803759>`;

		// construction
	
		:target:`MinkowskiDistance<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a47e723962a1c64dc6f488f6e2e481d29>`(int order_);

		// methods
	
		template <
			typename U,
			typename V
			>
		:ref:`ResultType<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a21baf56e06b45cdea5de1530c2e7c0ec>`
		:ref:`accum_dist<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a23fdd27122e5dce6bc8207abdffc0d41>`(
			const U& a,
			const V& b,
			int
			) const;
	
		template <
			typename Iterator1,
			typename Iterator2
			>
		:ref:`ResultType<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a21baf56e06b45cdea5de1530c2e7c0ec>`
		:ref:`operator()<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a8700d07e23a41a30783b4ec2d470534b>`(
			Iterator1 a,
			Iterator2 b,
			:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` size,
			:ref:`ResultType<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a21baf56e06b45cdea5de1530c2e7c0ec>` worst_dist = -1
			) const;
	};
.. _details-d5/d4c/structcvflann_1_1_minkowski_distance:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~



Methods
-------

.. index:: pair: function; accum_dist
.. _doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a23fdd27122e5dce6bc8207abdffc0d41:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename U,
		typename V
		>
	:ref:`ResultType<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a21baf56e06b45cdea5de1530c2e7c0ec>`
	accum_dist(
		const U& a,
		const V& b,
		int
		) const

Partial distance, used by the kd-tree.

.. index:: pair: function; operator()
.. _doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a8700d07e23a41a30783b4ec2d470534b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename Iterator1,
		typename Iterator2
		>
	:ref:`ResultType<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a21baf56e06b45cdea5de1530c2e7c0ec>`
	operator()(
		Iterator1 a,
		Iterator2 b,
		:ref:`size_t<doxid-da/d06/autogenerated_2opencl__core_8hpp_1a6ff403ead16f7faa1f7228274eb6b01d>` size,
		:ref:`ResultType<doxid-d5/d4c/structcvflann_1_1_minkowski_distance_1a21baf56e06b45cdea5de1530c2e7c0ec>` worst_dist = -1
		) const

Compute the Minkowsky (L_p) distance between two vectors.

This is highly optimised, with loop unrolling, as it is one of the most expensive inner loops.

The computation of squared root at the end is omitted for efficiency.

