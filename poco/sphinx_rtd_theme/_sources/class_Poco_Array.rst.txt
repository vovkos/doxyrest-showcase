.. index:: pair: class; Poco::Array
.. _doxid-class_poco_1_1_array:

template class Poco::Array
==========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

STL container like C-style array replacement class. :ref:`More...<details-class_poco_1_1_array>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <Array.h>
	
	template <
		class T,
		std::size_t N
		>
	class Array
	{
	public:
		// typedefs
	
		typedef T :target:`value_type<doxid-class_poco_1_1_array_1ac15c36014b98199dea706147f7d38c34>`;
		typedef T* :target:`iterator<doxid-class_poco_1_1_array_1a3714bd89ccb882d20660d865dbc1230b>`;
		typedef :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T* :target:`const_iterator<doxid-class_poco_1_1_array_1a4bb21e10ec1057255fde59845253bf41>`;
		typedef T& :target:`reference<doxid-class_poco_1_1_array_1a8c5a7ebf6484f97a32897bfb33e9e3f0>`;
		typedef :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& :target:`const_reference<doxid-class_poco_1_1_array_1a860571220011aaa7afbe22d6235848fe>`;
		typedef std::size_t :target:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>`;
		typedef std::ptrdiff_t :target:`difference_type<doxid-class_poco_1_1_array_1a66d48db5a08f98a7c678ecd5af27278c>`;
		typedef std::reverse_iterator<:ref:`iterator<doxid-class_poco_1_1_array_1a3714bd89ccb882d20660d865dbc1230b>`> :target:`reverse_iterator<doxid-class_poco_1_1_array_1a91e9e76a0627c942021427a7cbe33b9f>`;
		typedef std::reverse_iterator<:ref:`const_iterator<doxid-class_poco_1_1_array_1a4bb21e10ec1057255fde59845253bf41>`> :target:`const_reverse_iterator<doxid-class_poco_1_1_array_1abf1d491e969a205ffe2ca6aa44767ebf>`;

		// enums
	
		enum
		{
		    :target:`static_size<doxid-class_poco_1_1_array_1a25a03c2792838c53c083160082fcd14ea4afec5f6c8f3059d082aa6d724ad0d75>` = N,
		};

		// fields
	
		T :ref:`elems<doxid-class_poco_1_1_array_1a8628633040d40e870cebe05c4d3991ce>`[N];

		// methods
	
		:ref:`iterator<doxid-class_poco_1_1_array_1a3714bd89ccb882d20660d865dbc1230b>`
		:target:`begin<doxid-class_poco_1_1_array_1a0c9a1828d13b4221f29475df8b553036>`();
	
		:ref:`const_iterator<doxid-class_poco_1_1_array_1a4bb21e10ec1057255fde59845253bf41>`
		:target:`begin<doxid-class_poco_1_1_array_1a5c81c9b8224fd50a2991a2774fb62dd7>`() const;
	
		:ref:`iterator<doxid-class_poco_1_1_array_1a3714bd89ccb882d20660d865dbc1230b>`
		:target:`end<doxid-class_poco_1_1_array_1acd96762ba8fc885a5d45d73938605504>`();
	
		:ref:`const_iterator<doxid-class_poco_1_1_array_1a4bb21e10ec1057255fde59845253bf41>`
		:target:`end<doxid-class_poco_1_1_array_1a9a09a05fce7b7548ffa5136ada20a979>`() const;
	
		:ref:`reverse_iterator<doxid-class_poco_1_1_array_1a91e9e76a0627c942021427a7cbe33b9f>`
		:target:`rbegin<doxid-class_poco_1_1_array_1a3373a3bf287b600e2b80c60d6d3b30a8>`();
	
		:ref:`const_reverse_iterator<doxid-class_poco_1_1_array_1abf1d491e969a205ffe2ca6aa44767ebf>`
		:target:`rbegin<doxid-class_poco_1_1_array_1a94fcd95afa1288f47d2dd23544d1c3ec>`() const;
	
		:ref:`reverse_iterator<doxid-class_poco_1_1_array_1a91e9e76a0627c942021427a7cbe33b9f>`
		:target:`rend<doxid-class_poco_1_1_array_1a5ac9710717b6158b8fd6693b8c948674>`();
	
		:ref:`const_reverse_iterator<doxid-class_poco_1_1_array_1abf1d491e969a205ffe2ca6aa44767ebf>`
		:target:`rend<doxid-class_poco_1_1_array_1a0ac6ba5542fd29209258d5d67cad76c3>`() const;
	
		:ref:`reference<doxid-class_poco_1_1_array_1a8c5a7ebf6484f97a32897bfb33e9e3f0>`
		:ref:`operator[]<doxid-class_poco_1_1_array_1ac02bdbae8709253076610307f0ea2ca7>`(:ref:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>` i);
	
		:ref:`const_reference<doxid-class_poco_1_1_array_1a860571220011aaa7afbe22d6235848fe>`
		:ref:`operator[]<doxid-class_poco_1_1_array_1a2f3d7335452156872f03a1da920e1292>`(:ref:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>` i) const;
	
		:ref:`reference<doxid-class_poco_1_1_array_1a8c5a7ebf6484f97a32897bfb33e9e3f0>`
		:ref:`at<doxid-class_poco_1_1_array_1af2aa4e14eda0ed7ff13d9965b9fc5f43>`(:ref:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>` i);
	
		:ref:`const_reference<doxid-class_poco_1_1_array_1a860571220011aaa7afbe22d6235848fe>`
		:ref:`at<doxid-class_poco_1_1_array_1a3a7e3c116b370c4122a4900cc412aa07>`(:ref:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>` i) const;
	
		:ref:`reference<doxid-class_poco_1_1_array_1a8c5a7ebf6484f97a32897bfb33e9e3f0>`
		:target:`front<doxid-class_poco_1_1_array_1a1a0bbfed75bd9fb3f96f3b6c1873d75c>`();
	
		:ref:`const_reference<doxid-class_poco_1_1_array_1a860571220011aaa7afbe22d6235848fe>`
		:target:`front<doxid-class_poco_1_1_array_1a0e32cf84bd68d291f40da93dc674883c>`() const;
	
		:ref:`reference<doxid-class_poco_1_1_array_1a8c5a7ebf6484f97a32897bfb33e9e3f0>`
		:target:`back<doxid-class_poco_1_1_array_1aba2ec731b2b8465962f5ab75d25fda80>`();
	
		:ref:`const_reference<doxid-class_poco_1_1_array_1a860571220011aaa7afbe22d6235848fe>`
		:target:`back<doxid-class_poco_1_1_array_1ab1382df604b6fc279da1b1fc17e1ba85>`() const;
	
		void
		:target:`swap<doxid-class_poco_1_1_array_1a07a5be6b4989bde36ae8b948de15e498>`(Array<T, N>& y);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T*
		:ref:`data<doxid-class_poco_1_1_array_1a533dbe6d0033d0da064f97065a0b000a>`() const;
	
		T*
		:target:`data<doxid-class_poco_1_1_array_1a31935cc87892ff5c2769f11adaf3b0f8>`();
	
		T*
		:ref:`c_array<doxid-class_poco_1_1_array_1a2cc4997d4c25298a9da981237632d5d9>`();
	
		template <typename Other>
		Array<T, N>&
		:ref:`operator=<doxid-class_poco_1_1_array_1a1c988aeea8f4569e640536e14b99e198>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Array<Other, N>& rhs);
	
		void
		:ref:`assign<doxid-class_poco_1_1_array_1a569907fd4886aef32a7a07f918e823ce>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& value);
	
		static
		:ref:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>`
		:target:`size<doxid-class_poco_1_1_array_1a962b6d71926c87d871adcbf33d2d1761>`();
	
		static
		bool
		:target:`empty<doxid-class_poco_1_1_array_1a9ff45561a98ddce86ec4db34d518028f>`();
	
		static
		:ref:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>`
		:target:`max_size<doxid-class_poco_1_1_array_1a6c95dfecc822c523f03019d862cd7b11>`();
	};
.. _details-class_poco_1_1_array:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

STL container like C-style array replacement class.

This implementation is based on the idea of Nicolai Josuttis. His original implementation can be found at `http://www.josuttis.com/cppcode/array.html <http://www.josuttis.com/cppcode/array.html>`__.

Fields
------

.. index:: pair: variable; elems
.. _doxid-class_poco_1_1_array_1a8628633040d40e870cebe05c4d3991ce:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	T elems[N]

Fixed-size array of elements of type T, public specifier used to make this class a aggregate.

Methods
-------

.. index:: pair: function; operator[]
.. _doxid-class_poco_1_1_array_1ac02bdbae8709253076610307f0ea2ca7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`reference<doxid-class_poco_1_1_array_1a8c5a7ebf6484f97a32897bfb33e9e3f0>`
	operator[](:ref:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>` i)

Element access without range check. If the index is not small than the given size, the behavior is undefined.

.. index:: pair: function; operator[]
.. _doxid-class_poco_1_1_array_1a2f3d7335452156872f03a1da920e1292:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const_reference<doxid-class_poco_1_1_array_1a860571220011aaa7afbe22d6235848fe>`
	operator[](:ref:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>` i) const

Element access without range check. If the index is not small than the given size, the behavior is undefined.

.. index:: pair: function; at
.. _doxid-class_poco_1_1_array_1af2aa4e14eda0ed7ff13d9965b9fc5f43:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`reference<doxid-class_poco_1_1_array_1a8c5a7ebf6484f97a32897bfb33e9e3f0>`
	at(:ref:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>` i)

Element access with range check. Throws Poco::InvalidArgumentException if the index is over range.

.. index:: pair: function; at
.. _doxid-class_poco_1_1_array_1a3a7e3c116b370c4122a4900cc412aa07:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const_reference<doxid-class_poco_1_1_array_1a860571220011aaa7afbe22d6235848fe>`
	at(:ref:`size_type<doxid-class_poco_1_1_array_1aec203c37afbdcf3f6938192232b54b33>` i) const

Element access with range check. Throws Poco::InvalidArgumentException if the index is over range.

.. index:: pair: function; data
.. _doxid-class_poco_1_1_array_1a533dbe6d0033d0da064f97065a0b000a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T*
	data() const

Direct access to data (read-only)

.. index:: pair: function; c_array
.. _doxid-class_poco_1_1_array_1a2cc4997d4c25298a9da981237632d5d9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	T*
	c_array()

Use array as C array (direct read/write access to data)

.. index:: pair: function; operator=
.. _doxid-class_poco_1_1_array_1a1c988aeea8f4569e640536e14b99e198:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename Other>
	Array<T, N>&
	operator=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Array<Other, N>& rhs)

Assignment with type conversion.

.. index:: pair: function; assign
.. _doxid-class_poco_1_1_array_1a569907fd4886aef32a7a07f918e823ce:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	assign(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& value)

Assign one value to all elements.

