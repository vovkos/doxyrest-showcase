.. index:: pair: class; Poco::BasicFIFOBuffer
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer:

template class Poco::BasicFIFOBuffer
====================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

A simple buffer class with support for re-entrant, FIFO-style read/write operations, as well as (optional) empty/non-empty/full (i.e. :ref:`More...<details-class_poco_1_1_basic_f_i_f_o_buffer>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <FIFOBuffer.h>
	
	template <class T>
	class BasicFIFOBuffer
	{
	public:
		// typedefs
	
		typedef T :target:`Type<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a83b3f6bbe3dcdf55ff100d6960ba814e>`;

		// fields
	
		:ref:`Poco::BasicEvent<doxid-class_poco_1_1_basic_event>`<bool> :ref:`writable<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1aa5a024e58fa2ae89e107c88ba97045b5>`;
		:ref:`Poco::BasicEvent<doxid-class_poco_1_1_basic_event>`<bool> :ref:`readable<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a573bfc03741a2798550e5fe21f6fe337>`;

		// construction
	
		:target:`BasicFIFOBuffer<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a7bba198a85d5e07f6b7a16a5e7f6a663>`(
			std::size_t size,
			bool notify = false
			);
	
		:target:`BasicFIFOBuffer<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1af14df7ff03043633c38c06ee8aeacf99>`(
			T* pBuffer,
			std::size_t size,
			bool notify = false
			);
	
		:target:`BasicFIFOBuffer<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a0270386dec5a5a14849e108b9ce0912b>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T* pBuffer,
			std::size_t size,
			bool notify = false
			);

		// methods
	
		void
		:ref:`resize<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a8ac921a122c774ab059e95ef85e5b32c>`(
			std::size_t newSize,
			bool preserveContent = true
			);
	
		std::size_t
		:ref:`peek<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a37dc83ee60f38c67a0a31aab38267d2c>`(
			T* pBuffer,
			std::size_t length
			) const;
	
		std::size_t
		:ref:`peek<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1ae732d043dc985085735a3357f6719782>`(
			:ref:`Poco::Buffer<doxid-class_poco_1_1_buffer>`<T>& buffer,
			std::size_t length = 0
			) const;
	
		std::size_t
		:ref:`read<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a236942ca33240e861b6f5a82cb6a6b6e>`(
			T* pBuffer,
			std::size_t length
			);
	
		std::size_t
		:ref:`read<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1aced098ea64074608c4a5089455932169>`(
			:ref:`Poco::Buffer<doxid-class_poco_1_1_buffer>`<T>& buffer,
			std::size_t length = 0
			);
	
		std::size_t
		:ref:`write<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a704ce5abb458526710ff90b2916701bd>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T* pBuffer,
			std::size_t length
			);
	
		std::size_t
		:ref:`write<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a76afe94a9065a7511e5069e80b01870a>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Buffer<doxid-class_poco_1_1_buffer>`<T>& buffer,
			std::size_t length = 0
			);
	
		std::size_t
		:ref:`size<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1adbcc608a36b70f58de8da4cd87865867>`() const;
	
		std::size_t
		:ref:`used<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a9a4a5c61ab64d15fa212058ebeb9cad7>`() const;
	
		std::size_t
		:ref:`available<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a66717277a226805c8b9a188640bcb4f5>`() const;
	
		void
		:ref:`drain<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a0f462e1ed9f2f0e8d5d1858865898e2c>`(std::size_t length = 0);
	
		void
		:ref:`copy<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1aa2293652ceba519620d908ee6e06fe88>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T* ptr,
			std::size_t length
			);
	
		void
		:ref:`advance<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a57fe6b6ef5c229d51a8aec22eefbb6ae>`(std::size_t length);
	
		T*
		:ref:`begin<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a3f13e8540f7a8cfe7e8a1204c45d34d0>`();
	
		T*
		:ref:`next<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a000fa31cbb001443ca6cd1c8a09b8a9d>`();
	
		T&
		:ref:`operator[]<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1ab69b100da790f9f7b3aa5a9ada5e7c42>`(std::size_t index);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T&
		:ref:`operator[]<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1af6b8f542bcabc43059e899da8d3e74c7>`(std::size_t index) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Buffer<doxid-class_poco_1_1_buffer>`<T>&
		:ref:`buffer<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a0a32eec8e357415c4353760ced1e156a>`() const;
	
		void
		:ref:`setError<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a8a95f9ea3aa869f9ffd894816835d70a>`(bool error = true);
	
		bool
		:ref:`isValid<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a218d3f9d47a349e0ddfda2daeddde9a8>`() const;
	
		void
		:ref:`setEOF<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a78b49ca539862982ec2f7504bf3f4788>`(bool eof = true);
	
		bool
		:ref:`hasEOF<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1ab988dae1be5312fff9ff7898f1aa3c1e>`() const;
	
		bool
		:ref:`isEOF<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a05796d2cb8eb51c21333960a285c48bc>`() const;
	
		bool
		:ref:`isEmpty<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a30bc69e366373a34957870e60ad4b877>`() const;
	
		bool
		:ref:`isFull<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a1fc67f7981d00ac4a2655f366fa08ed4>`() const;
	
		bool
		:ref:`isReadable<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a7294440636064728e59254c73bb33811>`() const;
	
		bool
		:ref:`isWritable<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1ae5405543c6d4a033f3db54416d0023d4>`() const;
	
		void
		:ref:`setNotify<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a90d66d6ef49f806e934df455b77cb8a1>`(bool notify = true);
	
		bool
		:ref:`getNotify<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a44dd0ea7ea443c55625b20dc66d21642>`() const;
	
		:ref:`Mutex<doxid-class_poco_1_1_mutex>`&
		:ref:`mutex<doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a523017bb4c117139c279baa622fe62a1>`();
	};
.. _details-class_poco_1_1_basic_f_i_f_o_buffer:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

A simple buffer class with support for re-entrant, FIFO-style read/write operations, as well as (optional) empty/non-empty/full (i.e.

writable/readable) transition notifications. :ref:`Buffer <doxid-class_poco_1_1_buffer>` can be flagged with end-of-file and error flags, which renders it un-readable/writable.

Critical portions of code are protected by a recursive mutex. However, to achieve thread-safety in cases where multiple member function calls are involved and have to be atomic, the mutex must be locked externally.

:ref:`Buffer <doxid-class_poco_1_1_buffer>` size, as well as amount of unread data and available space introspections are supported as well.

This class is useful anywhere where a FIFO functionality is needed.

Fields
------

.. index:: pair: variable; writable
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1aa5a024e58fa2ae89e107c88ba97045b5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Poco::BasicEvent<doxid-class_poco_1_1_basic_event>`<bool> writable

:ref:`Event <doxid-class_poco_1_1_event>` indicating "writability" of the buffer, triggered as follows:

* when buffer transitions from non-full to full,
  
  .. ref-code-block:: cpp
  
  	Writable event observers are notified, with 
  	false value as the argument

* when buffer transitions from full to non-full,
  
  .. ref-code-block:: cpp
  
  	Writable event observers are notified, with 
  	true value as the argument

.. index:: pair: variable; readable
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a573bfc03741a2798550e5fe21f6fe337:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Poco::BasicEvent<doxid-class_poco_1_1_basic_event>`<bool> readable

:ref:`Event <doxid-class_poco_1_1_event>` indicating "readability" of the buffer, triggered as follows:

* when buffer transitions from non-empty to empty,
  
  .. ref-code-block:: cpp
  
  	Readable event observers are notified, with false  
  	value as the argument

* when FIFOBuffer transitions from empty to non-empty,
  
  .. ref-code-block:: cpp
  
  	Readable event observers are notified, with true value
  	as the argument

Construction
------------

.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a1464dc205c3469d80793904f4c70ec6b:
.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	~BasicFIFOBuffer()

Destroys the FIFOBuffer.

Methods
-------

.. index:: pair: function; resize
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a8ac921a122c774ab059e95ef85e5b32c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	resize(
		std::size_t newSize,
		bool preserveContent = true
		)

Resizes the buffer.

If preserveContent is true, the content of the old buffer is preserved. New size can be larger or smaller than the current size, but it must not be 0. Additionally, if the new length is smaller than currently used length and preserveContent is true, InvalidAccessException is thrown.

.. index:: pair: function; peek
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a37dc83ee60f38c67a0a31aab38267d2c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	peek(
		T* pBuffer,
		std::size_t length
		) const

Peeks into the data currently in the FIFO without actually extracting it.

If length is zero, the return is immediate. If length is greater than used length, it is substituted with the the current FIFO used length.

Returns the number of elements copied in the supplied buffer.

.. index:: pair: function; peek
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1ae732d043dc985085735a3357f6719782:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	peek(
		:ref:`Poco::Buffer<doxid-class_poco_1_1_buffer>`<T>& buffer,
		std::size_t length = 0
		) const

Peeks into the data currently in the FIFO without actually extracting it.

Resizes the supplied buffer to the size of data written to it. If length is not supplied by the caller or is greater than length of currently used data, the current FIFO used data length is substituted for it.

Returns the number of elements copied in the supplied buffer.

.. index:: pair: function; read
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a236942ca33240e861b6f5a82cb6a6b6e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	read(
		T* pBuffer,
		std::size_t length
		)

Copies the data currently in the FIFO into the supplied buffer, which must be preallocated to at least the length size before calling this function.

Returns the size of the copied data.

.. index:: pair: function; read
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1aced098ea64074608c4a5089455932169:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	read(
		:ref:`Poco::Buffer<doxid-class_poco_1_1_buffer>`<T>& buffer,
		std::size_t length = 0
		)

Copies the data currently in the FIFO into the supplied buffer.

Resizes the supplied buffer to the size of data written to it.

Returns the size of the copied data.

.. index:: pair: function; write
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a704ce5abb458526710ff90b2916701bd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	write(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T* pBuffer,
		std::size_t length
		)

Writes data from supplied buffer to the FIFO buffer.

If there is no sufficient space for the whole buffer to be written, data up to available length is written. The length of data to be written is determined from the length argument. Function does nothing and returns zero if length argument is equal to zero.

Returns the length of data written.

.. index:: pair: function; write
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a76afe94a9065a7511e5069e80b01870a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	write(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Buffer<doxid-class_poco_1_1_buffer>`<T>& buffer,
		std::size_t length = 0
		)

Writes data from supplied buffer to the FIFO buffer.

If there is no sufficient space for the whole buffer to be written, data up to available length is written. The length of data to be written is determined from the length argument or buffer size (when length argument is default zero or greater than buffer size).

Returns the length of data written.

.. index:: pair: function; size
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1adbcc608a36b70f58de8da4cd87865867:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	size() const

Returns the size of the buffer.

.. index:: pair: function; used
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a9a4a5c61ab64d15fa212058ebeb9cad7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	used() const

Returns the size of the used portion of the buffer.

.. index:: pair: function; available
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a66717277a226805c8b9a188640bcb4f5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	available() const

Returns the size of the available portion of the buffer.

.. index:: pair: function; drain
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a0f462e1ed9f2f0e8d5d1858865898e2c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	drain(std::size_t length = 0)

Drains length number of elements from the buffer.

If length is zero or greater than buffer current content length, buffer is emptied.

.. index:: pair: function; copy
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1aa2293652ceba519620d908ee6e06fe88:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	copy(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T* ptr,
		std::size_t length
		)

Copies the supplied data to the buffer and adjusts the used buffer size.

.. index:: pair: function; advance
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a57fe6b6ef5c229d51a8aec22eefbb6ae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	advance(std::size_t length)

Advances buffer by length elements.

Should be called AFTER the data was copied into the buffer.

.. index:: pair: function; begin
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a3f13e8540f7a8cfe7e8a1204c45d34d0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	T*
	begin()

Returns the pointer to the beginning of the buffer.

.. index:: pair: function; next
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a000fa31cbb001443ca6cd1c8a09b8a9d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	T*
	next()

Returns the pointer to the next available position in the buffer.

.. index:: pair: function; operator[]
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1ab69b100da790f9f7b3aa5a9ada5e7c42:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	T&
	operator[](std::size_t index)

Returns value at index position.

Throws InvalidAccessException if index is larger than the last valid (used) buffer position.

.. index:: pair: function; operator[]
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1af6b8f542bcabc43059e899da8d3e74c7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T&
	operator[](std::size_t index) const

Returns value at index position.

Throws InvalidAccessException if index is larger than the last valid (used) buffer position.

.. index:: pair: function; buffer
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a0a32eec8e357415c4353760ced1e156a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Buffer<doxid-class_poco_1_1_buffer>`<T>&
	buffer() const

Returns const reference to the underlying buffer.

.. index:: pair: function; setError
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a8a95f9ea3aa869f9ffd894816835d70a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setError(bool error = true)

Sets the error flag on the buffer and empties it.

If notifications are enabled, they will be triggered if appropriate.

Setting error flag to true prevents reading and writing to the buffer; to re-enable FIFOBuffer for reading/writing, the error flag must be set to false.

.. index:: pair: function; isValid
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a218d3f9d47a349e0ddfda2daeddde9a8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isValid() const

Returns true if error flag is not set on the buffer, otherwise returns false.

.. index:: pair: function; setEOF
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a78b49ca539862982ec2f7504bf3f4788:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setEOF(bool eof = true)

Sets end-of-file flag on the buffer.

Setting EOF flag to true prevents writing to the buffer; reading from the buffer will still be allowed until all data present in the buffer at the EOF set time is drained. After that, to re-enable FIFOBuffer for reading/writing, EOF must be set to false.

Setting EOF flag to false clears EOF state if it was previously set. If EOF was not set, it has no effect.

.. index:: pair: function; hasEOF
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1ab988dae1be5312fff9ff7898f1aa3c1e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	hasEOF() const

Returns true if EOF flag has been set.

.. index:: pair: function; isEOF
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a05796d2cb8eb51c21333960a285c48bc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isEOF() const

Returns true if EOF flag has been set and buffer is empty.

.. index:: pair: function; isEmpty
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a30bc69e366373a34957870e60ad4b877:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isEmpty() const

Returns true is buffer is empty, false otherwise.

.. index:: pair: function; isFull
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a1fc67f7981d00ac4a2655f366fa08ed4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isFull() const

Returns true is buffer is full, false otherwise.

.. index:: pair: function; isReadable
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a7294440636064728e59254c73bb33811:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isReadable() const

Returns true if buffer contains data and is not in error state.

.. index:: pair: function; isWritable
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1ae5405543c6d4a033f3db54416d0023d4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isWritable() const

Returns true if buffer is not full and is not in error state.

.. index:: pair: function; setNotify
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a90d66d6ef49f806e934df455b77cb8a1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setNotify(bool notify = true)

Enables/disables notifications.

.. index:: pair: function; getNotify
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a44dd0ea7ea443c55625b20dc66d21642:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	getNotify() const

Returns true if notifications are enabled, false otherwise.

.. index:: pair: function; mutex
.. _doxid-class_poco_1_1_basic_f_i_f_o_buffer_1a523017bb4c117139c279baa622fe62a1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Mutex<doxid-class_poco_1_1_mutex>`&
	mutex()

Returns reference to mutex.

