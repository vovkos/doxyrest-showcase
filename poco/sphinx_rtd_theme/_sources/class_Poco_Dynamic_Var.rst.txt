.. index:: pair: class; Poco::Dynamic::Var
.. _doxid-class_poco_1_1_dynamic_1_1_var:

class Poco::Dynamic::Var
========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

:ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` allows to store data of different types and to convert between these types transparently. :ref:`More...<details-class_poco_1_1_dynamic_1_1_var>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <Var.h>
	
	class Var
	{
	public:
		// typedefs
	
		typedef :ref:`SharedPtr<doxid-class_poco_1_1_shared_ptr>`<Var> :target:`Ptr<doxid-class_poco_1_1_dynamic_1_1_var_1a44a5969dfd5d168834424bec141f4a1b>`;
		typedef :ref:`Poco::Dynamic::VarIterator<doxid-class_poco_1_1_dynamic_1_1_var_iterator>` :target:`Iterator<doxid-class_poco_1_1_dynamic_1_1_var_1a53b21e4b577b99a64dc91d37ed85a35d>`;
		typedef :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`VarIterator<doxid-class_poco_1_1_dynamic_1_1_var_iterator>` :target:`ConstIterator<doxid-class_poco_1_1_dynamic_1_1_var_1a1d060d625ef9edbdf971211c4eb21e03>`;

		// construction
	
		:ref:`Var<doxid-class_poco_1_1_dynamic_1_1_var_1a52079a104abd6578e70e4639b46d461c>`();
	
		template <typename T>
		:ref:`Var<doxid-class_poco_1_1_dynamic_1_1_var_1adcc025d76ec6baa13e753a5986464a9a>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& val);
	
		:target:`Var<doxid-class_poco_1_1_dynamic_1_1_var_1a5d5b796401f6a015ff1dbb47384efa5d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* pVal);
		:ref:`Var<doxid-class_poco_1_1_dynamic_1_1_var_1a3f2959e89cc829bf6a709d74b47e8434>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other);

		// methods
	
		void
		:ref:`swap<doxid-class_poco_1_1_dynamic_1_1_var_1a3a3131650522927e2b7b576372a80ca7>`(Var& other);
	
		:ref:`ConstIterator<doxid-class_poco_1_1_dynamic_1_1_var_1a1d060d625ef9edbdf971211c4eb21e03>`
		:ref:`begin<doxid-class_poco_1_1_dynamic_1_1_var_1a4762a8261b566467bdeecead3f06137e>`() const;
	
		:ref:`ConstIterator<doxid-class_poco_1_1_dynamic_1_1_var_1a1d060d625ef9edbdf971211c4eb21e03>`
		:ref:`end<doxid-class_poco_1_1_dynamic_1_1_var_1ab505ed097b81d7c2587afd4e6b0b4fbf>`() const;
	
		:ref:`Iterator<doxid-class_poco_1_1_dynamic_1_1_var_1a53b21e4b577b99a64dc91d37ed85a35d>`
		:ref:`begin<doxid-class_poco_1_1_dynamic_1_1_var_1a0c7b9af69ae6a15957195a3966b6322a>`();
	
		:ref:`Iterator<doxid-class_poco_1_1_dynamic_1_1_var_1a53b21e4b577b99a64dc91d37ed85a35d>`
		:ref:`end<doxid-class_poco_1_1_dynamic_1_1_var_1af3684353d49dd797150af70b679db6ef>`();
	
		template <typename T>
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_1aa71081ae2c04e2f6a46283d528633ceb>`(T& val) const;
	
		template <typename T>
		T
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_1aaa287bae21188af98956db4e67231efc>`() const;
	
		template <typename T>
		:ref:`operator T<doxid-class_poco_1_1_dynamic_1_1_var_1a795e216aaa3b1b5d74cb3e945fc67579>`() const;
	
		template <typename T>
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T&
		:ref:`extract<doxid-class_poco_1_1_dynamic_1_1_var_1a025f129d1e0a8441034d17617443e837>`() const;
	
		template <typename T>
		Var&
		:ref:`operator=<doxid-class_poco_1_1_dynamic_1_1_var_1a653bd2154a27cbd6042169ebbc0ac0af>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other);
	
		bool
		:ref:`operator!<doxid-class_poco_1_1_dynamic_1_1_var_1a7e674d7685e5584362e53721188929eb>`() const;
	
		Var&
		:ref:`operator=<doxid-class_poco_1_1_dynamic_1_1_var_1a99fa8f1a8d3f2608fff01d02b2f57ae8>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other);
	
		template <typename T>
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator+<doxid-class_poco_1_1_dynamic_1_1_var_1a8dea9c8c951ff20c7f805a4cffc1fa87>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator+<doxid-class_poco_1_1_dynamic_1_1_var_1afd158c35faf4ecf814baad443309a565>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator+<doxid-class_poco_1_1_dynamic_1_1_var_1ab97420fb5500d5cf8a2a162b56f5e89d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* other) const;
	
		Var&
		:ref:`operator++<doxid-class_poco_1_1_dynamic_1_1_var_1a4b32d03db0dd452019411bd0f95d03d0>`();
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator++<doxid-class_poco_1_1_dynamic_1_1_var_1a95fea882fc20cdb54f2735a5a90d87c5>`(int);
	
		Var&
		:ref:`operator--<doxid-class_poco_1_1_dynamic_1_1_var_1a3204575efad901d4a1bbfd03c2af58c4>`();
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator--<doxid-class_poco_1_1_dynamic_1_1_var_1a6dfb7f00320bfec9a3990c4492c8a7ad>`(int);
	
		template <typename T>
		Var&
		:ref:`operator+=<doxid-class_poco_1_1_dynamic_1_1_var_1afc310cbbc1c08e81e9b1cedfd61f8a4d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other);
	
		Var&
		:ref:`operator+=<doxid-class_poco_1_1_dynamic_1_1_var_1a589b7e49e7cb8786c563c2f92fa9d1a7>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other);
	
		Var&
		:ref:`operator+=<doxid-class_poco_1_1_dynamic_1_1_var_1a8648451a320d9a5287ac34ceacdb6fa9>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* other);
	
		template <typename T>
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator-<doxid-class_poco_1_1_dynamic_1_1_var_1af4e7f113cf94b5cc82483abefcce924e>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator-<doxid-class_poco_1_1_dynamic_1_1_var_1aeafe0cf940b6554c9cdd661978981f3d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		template <typename T>
		Var&
		:ref:`operator-=<doxid-class_poco_1_1_dynamic_1_1_var_1a5278c6f2f16a3919a3e33980f5493955>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other);
	
		Var&
		:ref:`operator-=<doxid-class_poco_1_1_dynamic_1_1_var_1a90b66da7958552ebc3f466e0b69f277b>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other);
	
		template <typename T>
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator*<doxid-class_poco_1_1_dynamic_1_1_var_1a7249a00e9a939941be38018fdce88bbf>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator*<doxid-class_poco_1_1_dynamic_1_1_var_1a1900da29e3c4c6bfd8708ac0eb4f5dec>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		template <typename T>
		Var&
		:ref:`operator*=<doxid-class_poco_1_1_dynamic_1_1_var_1acb02a56f06e86260e82cc05021e8692c>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other);
	
		Var&
		:ref:`operator*=<doxid-class_poco_1_1_dynamic_1_1_var_1a4f65d32eb67b678d46dbcec0874952a5>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other);
	
		template <typename T>
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator/<doxid-class_poco_1_1_dynamic_1_1_var_1ad8c8215595cfd77e38d4b559db064e93>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
		:ref:`operator/<doxid-class_poco_1_1_dynamic_1_1_var_1a039a71faabd8e7ee5ca3fdbdeae75d5c>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		template <typename T>
		Var&
		:ref:`operator/=<doxid-class_poco_1_1_dynamic_1_1_var_1a20163f2cb9248d954d588d6ace51b25d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other);
	
		Var&
		:ref:`operator/=<doxid-class_poco_1_1_dynamic_1_1_var_1a27af8405c987f2eae7739bff42fa7b74>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other);
	
		template <typename T>
		bool
		:ref:`operator==<doxid-class_poco_1_1_dynamic_1_1_var_1aaa6ef99f0abf61cb80e05268a89fd7a0>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		bool
		:ref:`operator==<doxid-class_poco_1_1_dynamic_1_1_var_1af8a4f26487549232d3af52997bfb3543>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* other) const;
	
		bool
		:ref:`operator==<doxid-class_poco_1_1_dynamic_1_1_var_1a13e6c087992010d5fa125021d9828236>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		template <typename T>
		bool
		:ref:`operator!=<doxid-class_poco_1_1_dynamic_1_1_var_1ad7f073397671e5cb42e71c43fc6588da>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		bool
		:ref:`operator!=<doxid-class_poco_1_1_dynamic_1_1_var_1a38c86f01d5733a73be252e8d91a8806b>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		bool
		:ref:`operator!=<doxid-class_poco_1_1_dynamic_1_1_var_1ad7ac5f411ba5fefa9972b26cdbd5411d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* other) const;
	
		template <typename T>
		bool
		:ref:`operator<<doxid-class_poco_1_1_dynamic_1_1_var_1a4847c187f43819ee8adb5154168ad1fb>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		bool
		:ref:`operator<<doxid-class_poco_1_1_dynamic_1_1_var_1ab46f9d4a4e774f4d1c49e02b1baa28c8>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		template <typename T>
		bool
		:ref:`operator<=<doxid-class_poco_1_1_dynamic_1_1_var_1abfd43653dc57af7db764e33d3d824aeb>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		bool
		:ref:`operator<=<doxid-class_poco_1_1_dynamic_1_1_var_1a2a528c2f57a3f7997b0d5a7a78c4275c>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		template <typename T>
		bool
		:ref:`operator><doxid-class_poco_1_1_dynamic_1_1_var_1afeb376638d9685125bef5ed98c8538a3>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		bool
		:ref:`operator><doxid-class_poco_1_1_dynamic_1_1_var_1a6e171c38b12fe75fc7604d131d029b96>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		template <typename T>
		bool
		:ref:`operator>=<doxid-class_poco_1_1_dynamic_1_1_var_1a5f6607fe1c6d1192940b58b032e9a0f1>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		bool
		:ref:`operator>=<doxid-class_poco_1_1_dynamic_1_1_var_1a10995a57ab0cbc0f8f53affa20b77bbb>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		template <typename T>
		bool
		:ref:`operator||<doxid-class_poco_1_1_dynamic_1_1_var_1aeaa00f70c359a8e9d1dca125bfa51f5d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		bool
		:ref:`operator||<doxid-class_poco_1_1_dynamic_1_1_var_1a2a18a69f472c67b02f1b04925f92cfc1>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		template <typename T>
		bool
		:ref:`operator&&<doxid-class_poco_1_1_dynamic_1_1_var_1a68b02ecc1931dde9bc09e85cb20cf657>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const;
	
		bool
		:ref:`operator&&<doxid-class_poco_1_1_dynamic_1_1_var_1aa6e2c9989581faa1bef976685552e72d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const;
	
		bool
		:ref:`isArray<doxid-class_poco_1_1_dynamic_1_1_var_1a105b2ee1de628d79c249ff9b01b8eafc>`() const;
	
		bool
		:ref:`isVector<doxid-class_poco_1_1_dynamic_1_1_var_1a7222ebeef77518f0871488461e0566f4>`() const;
	
		bool
		:ref:`isList<doxid-class_poco_1_1_dynamic_1_1_var_1a62bd73739ceced079b4d70da7a5fff32>`() const;
	
		bool
		:ref:`isDeque<doxid-class_poco_1_1_dynamic_1_1_var_1a5a1cc5b73b581abbd5b9e5d77fe0fc4e>`() const;
	
		bool
		:ref:`isStruct<doxid-class_poco_1_1_dynamic_1_1_var_1afa256c04a5106a5a5da3215a6ae4a865>`() const;
	
		char&
		:ref:`at<doxid-class_poco_1_1_dynamic_1_1_var_1a279938418842671811f1d7b0645d1e98>`(std::size_t n);
	
		template <typename T>
		Var&
		:target:`operator[]<doxid-class_poco_1_1_dynamic_1_1_var_1abf1a3e2b2837b0b882e978b56964638d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& n);
	
		template <typename T>
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var&
		:target:`operator[]<doxid-class_poco_1_1_dynamic_1_1_var_1a214b0a188281c6f911cfe3570af8e32c>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& n) const;
	
		Var&
		:ref:`operator[]<doxid-class_poco_1_1_dynamic_1_1_var_1a6302e823fd7e5edbf20714a0e5cf2f53>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var&
		:ref:`operator[]<doxid-class_poco_1_1_dynamic_1_1_var_1afc80054caa997d57dbafef75ecd36045>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::type_info&
		:ref:`type<doxid-class_poco_1_1_dynamic_1_1_var_1a286c3caca155a292e598802d2387ca6b>`() const;
	
		void
		:ref:`empty<doxid-class_poco_1_1_dynamic_1_1_var_1a351f2f314a9be1e4a24bd51b4a0bafc2>`();
	
		bool
		:ref:`isEmpty<doxid-class_poco_1_1_dynamic_1_1_var_1a3ca72be4fb53004efada3ce36b1d2ea1>`() const;
	
		bool
		:ref:`isInteger<doxid-class_poco_1_1_dynamic_1_1_var_1a9deccd6f963970bc4dffc065321473c8>`() const;
	
		bool
		:ref:`isSigned<doxid-class_poco_1_1_dynamic_1_1_var_1afe234afbe2e4df00a13692f37c33829f>`() const;
	
		bool
		:ref:`isNumeric<doxid-class_poco_1_1_dynamic_1_1_var_1a71973bac5a328b01fdd96fa27262b53a>`() const;
	
		bool
		:ref:`isBoolean<doxid-class_poco_1_1_dynamic_1_1_var_1af8b29320774548aa12f85afa34719d2f>`() const;
	
		bool
		:ref:`isString<doxid-class_poco_1_1_dynamic_1_1_var_1a846dabed5302322244d8c9e2b0318b88>`() const;
	
		std::size_t
		:ref:`size<doxid-class_poco_1_1_dynamic_1_1_var_1a62fb54319d7f0fa5185f6acdf83de0c6>`() const;
	
		std::string
		:ref:`toString<doxid-class_poco_1_1_dynamic_1_1_var_1a62e35c530b24c2910a26312e70a69278>`() const;
	
		static
		Var
		:ref:`parse<doxid-class_poco_1_1_dynamic_1_1_var_1a4e200c95f16926279569ff53ffd734b1>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& val);
	
		static
		std::string
		:ref:`toString<doxid-class_poco_1_1_dynamic_1_1_var_1ae2ae384e2353d72666d5c846e1ed3b75>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& var);
	};
.. _details-class_poco_1_1_dynamic_1_1_var:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` allows to store data of different types and to convert between these types transparently.

:ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` puts forth the best effort to provide intuitive and reasonable conversion semantics and prevent unexpected data loss, particularly when performing narrowing or signedness conversions of numeric data types.

An attempt to convert or extract from a non-initialized ("empty") :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` variable shall result in an exception being thrown.

Loss of signedness is not allowed for numeric values. This means that if an attempt is made to convert the internal value which is a negative signed integer to an unsigned integer type storage, a RangeException is thrown. Overflow is not allowed, so if the internal value is a larger number than the target numeric type size can accomodate, a RangeException is thrown.

Precision loss, such as in conversion from floating-point types to integers or from double to float on platforms where they differ in size (provided internal actual value fits in float min/max range), is allowed.

String truncation is allowed it is possible to convert between string and character when string length is greater than 1. An empty string gets converted to the char '\0', a non-empty string is truncated to the first character.

Boolean conversion is performed as follows:

A string value "false" (not case sensitive), "0" or "" (empty string) can be converted to a boolean value false, any other string not being false by the above criteria evaluates to true (e.g: "hi" -> true). Integer 0 values are false, everything else is true. Floating point values equal to the minimal FP representation on a given platform are false, everything else is true.

Arithmetic operations with POD types as well as between :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` 's are supported, subject to following limitations:

* for std::string and const char\* values, only '+' and '+=' operations are supported

* for integral and floating point numeric values, following operations are supported:
  
  .. ref-code-block:: cpp
  
  	'+', '+=', '-', '-=', '*', '*=' , '/' and '/='

* for integral values, following operations are supported:
  
  .. ref-code-block:: cpp
  
  	prefix and postfix increment (++) and decrement (--)

* for all other types, InvalidArgumentException is thrown upon attempt of an arithmetic operation

A :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` can be created from and converted to a value of any type for which a specialization of :ref:`VarHolderImpl <doxid-class_poco_1_1_dynamic_1_1_var_holder_impl>` is available. For supported types, see :ref:`VarHolder <doxid-class_poco_1_1_dynamic_1_1_var_holder>` documentation.

Construction
------------

.. index:: pair: function; Var
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a52079a104abd6578e70e4639b46d461c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var()

Creates an empty :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; Var
.. _doxid-class_poco_1_1_dynamic_1_1_var_1adcc025d76ec6baa13e753a5986464a9a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	Var(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& val)

Creates the :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` from the given value.

.. index:: pair: function; Var
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a3f2959e89cc829bf6a709d74b47e8434:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other)

Copy constructor.

Methods
-------

.. index:: pair: function; swap
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a3a3131650522927e2b7b576372a80ca7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	swap(Var& other)

Swaps the content of the this :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` with the other :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; begin
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a4762a8261b566467bdeecead3f06137e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`ConstIterator<doxid-class_poco_1_1_dynamic_1_1_var_1a1d060d625ef9edbdf971211c4eb21e03>`
	begin() const

Returns the const :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` iterator.

.. index:: pair: function; end
.. _doxid-class_poco_1_1_dynamic_1_1_var_1ab505ed097b81d7c2587afd4e6b0b4fbf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`ConstIterator<doxid-class_poco_1_1_dynamic_1_1_var_1a1d060d625ef9edbdf971211c4eb21e03>`
	end() const

Returns the const :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` iterator.

.. index:: pair: function; begin
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a0c7b9af69ae6a15957195a3966b6322a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Iterator<doxid-class_poco_1_1_dynamic_1_1_var_1a53b21e4b577b99a64dc91d37ed85a35d>`
	begin()

Returns the :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` iterator.

.. index:: pair: function; end
.. _doxid-class_poco_1_1_dynamic_1_1_var_1af3684353d49dd797150af70b679db6ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Iterator<doxid-class_poco_1_1_dynamic_1_1_var_1a53b21e4b577b99a64dc91d37ed85a35d>`
	end()

Returns the :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` iterator.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_1aa71081ae2c04e2f6a46283d528633ceb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	void
	convert(T& val) const

Invoke this method to perform a safe conversion.

Example usage:

.. ref-code-block:: cpp

	Var any("42");
	int i;
	any.convert(i);

Throws a RangeException if the value does not fit into the result variable. Throws a NotImplementedException if conversion is not available for the given type. Throws InvalidAccessException if :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` is empty.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_1aaa287bae21188af98956db4e67231efc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	T
	convert() const

Invoke this method to perform a safe conversion.

Example usage:

.. ref-code-block:: cpp

	Var any("42");
	int i = any.convert<int>();

Throws a RangeException if the value does not fit into the result variable. Throws a NotImplementedException if conversion is not available for the given type. Throws InvalidAccessException if :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` is empty.

.. index:: pair: function; operator T
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a795e216aaa3b1b5d74cb3e945fc67579:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	operator T() const

Safe conversion operator for implicit type conversions.

If the requested type T is same as the type being held, the operation performed is direct extraction, otherwise it is the conversion of the value from type currently held to the one requested.

Throws a RangeException if the value does not fit into the result variable. Throws a NotImplementedException if conversion is not available for the given type. Throws InvalidAccessException if :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` is empty.

.. index:: pair: function; extract
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a025f129d1e0a8441034d17617443e837:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T&
	extract() const

Returns a const reference to the actual value.

Must be instantiated with the exact type of the stored value, otherwise a BadCastException is thrown. Throws InvalidAccessException if :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` is empty.

.. index:: pair: function; operator=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a653bd2154a27cbd6042169ebbc0ac0af:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	Var&
	operator=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other)

Assignment operator for assigning POD to :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator!
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a7e674d7685e5584362e53721188929eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator!() const

Logical NOT operator.

.. index:: pair: function; operator=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a99fa8f1a8d3f2608fff01d02b2f57ae8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var&
	operator=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other)

Assignment operator specialization for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator+
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a8dea9c8c951ff20c7f805a4cffc1fa87:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator+(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Addition operator for adding POD to :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator+
.. _doxid-class_poco_1_1_dynamic_1_1_var_1afd158c35faf4ecf814baad443309a565:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator+(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Addition operator specialization for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator+
.. _doxid-class_poco_1_1_dynamic_1_1_var_1ab97420fb5500d5cf8a2a162b56f5e89d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator+(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* other) const

Addition operator specialization for adding const char\* to :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator++
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a4b32d03db0dd452019411bd0f95d03d0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var&
	operator++()

Pre-increment operator.

.. index:: pair: function; operator++
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a95fea882fc20cdb54f2735a5a90d87c5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator++(int)

Post-increment operator.

.. index:: pair: function; operator--
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a3204575efad901d4a1bbfd03c2af58c4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var&
	operator--()

Pre-decrement operator.

.. index:: pair: function; operator--
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a6dfb7f00320bfec9a3990c4492c8a7ad:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator--(int)

Post-decrement operator.

.. index:: pair: function; operator+=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1afc310cbbc1c08e81e9b1cedfd61f8a4d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	Var&
	operator+=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other)

Addition asignment operator for addition/assignment of POD to :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator+=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a589b7e49e7cb8786c563c2f92fa9d1a7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var&
	operator+=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other)

Addition asignment operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator+=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a8648451a320d9a5287ac34ceacdb6fa9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var&
	operator+=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* other)

Addition asignment operator overload for const char\*.

.. index:: pair: function; operator-
.. _doxid-class_poco_1_1_dynamic_1_1_var_1af4e7f113cf94b5cc82483abefcce924e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator-(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Subtraction operator for subtracting POD from :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator-
.. _doxid-class_poco_1_1_dynamic_1_1_var_1aeafe0cf940b6554c9cdd661978981f3d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator-(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Subtraction operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator-=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a5278c6f2f16a3919a3e33980f5493955:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	Var&
	operator-=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other)

Subtraction asignment operator.

.. index:: pair: function; operator-=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a90b66da7958552ebc3f466e0b69f277b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var&
	operator-=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other)

Subtraction asignment operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator*
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a7249a00e9a939941be38018fdce88bbf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator*(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Multiplication operator for multiplying :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` with POD.

.. index:: pair: function; operator*
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a1900da29e3c4c6bfd8708ac0eb4f5dec:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator*(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Multiplication operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator*=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1acb02a56f06e86260e82cc05021e8692c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	Var&
	operator*=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other)

Multiplication asignment operator.

.. index:: pair: function; operator*=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a4f65d32eb67b678d46dbcec0874952a5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var&
	operator*=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other)

Multiplication asignment operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator/
.. _doxid-class_poco_1_1_dynamic_1_1_var_1ad8c8215595cfd77e38d4b559db064e93:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator/(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Division operator for dividing :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` with POD.

.. index:: pair: function; operator/
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a039a71faabd8e7ee5ca3fdbdeae75d5c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var
	operator/(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Division operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator/=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a20163f2cb9248d954d588d6ace51b25d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	Var&
	operator/=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other)

Division asignment operator.

.. index:: pair: function; operator/=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a27af8405c987f2eae7739bff42fa7b74:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var&
	operator/=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other)

Division asignment operator specialization for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator==
.. _doxid-class_poco_1_1_dynamic_1_1_var_1aaa6ef99f0abf61cb80e05268a89fd7a0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	bool
	operator==(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Equality operator.

.. index:: pair: function; operator==
.. _doxid-class_poco_1_1_dynamic_1_1_var_1af8a4f26487549232d3af52997bfb3543:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator==(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* other) const

Equality operator overload for const char\*.

.. index:: pair: function; operator==
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a13e6c087992010d5fa125021d9828236:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator==(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Equality operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator!=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1ad7f073397671e5cb42e71c43fc6588da:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	bool
	operator!=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Inequality operator.

.. index:: pair: function; operator!=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a38c86f01d5733a73be252e8d91a8806b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator!=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Inequality operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator!=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1ad7ac5f411ba5fefa9972b26cdbd5411d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator!=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* other) const

Inequality operator overload for const char\*.

.. index:: pair: function; operator<
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a4847c187f43819ee8adb5154168ad1fb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	bool
	operator<(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Less than operator.

.. index:: pair: function; operator<
.. _doxid-class_poco_1_1_dynamic_1_1_var_1ab46f9d4a4e774f4d1c49e02b1baa28c8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator<(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Less than operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator<=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1abfd43653dc57af7db764e33d3d824aeb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	bool
	operator<=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Less than or equal operator.

.. index:: pair: function; operator<=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a2a528c2f57a3f7997b0d5a7a78c4275c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator<=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Less than or equal operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator>
.. _doxid-class_poco_1_1_dynamic_1_1_var_1afeb376638d9685125bef5ed98c8538a3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	bool
	operator>(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Greater than operator.

.. index:: pair: function; operator>
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a6e171c38b12fe75fc7604d131d029b96:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator>(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Greater than operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator>=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a5f6607fe1c6d1192940b58b032e9a0f1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	bool
	operator>=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Greater than or equal operator.

.. index:: pair: function; operator>=
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a10995a57ab0cbc0f8f53affa20b77bbb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator>=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Greater than or equal operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator||
.. _doxid-class_poco_1_1_dynamic_1_1_var_1aeaa00f70c359a8e9d1dca125bfa51f5d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	bool
	operator||(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Logical OR operator.

.. index:: pair: function; operator||
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a2a18a69f472c67b02f1b04925f92cfc1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator||(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Logical OR operator operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; operator&&
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a68b02ecc1931dde9bc09e85cb20cf657:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	bool
	operator&&(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& other) const

Logical AND operator.

.. index:: pair: function; operator&&
.. _doxid-class_poco_1_1_dynamic_1_1_var_1aa6e2c9989581faa1bef976685552e72d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator&&(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& other) const

Logical AND operator operator overload for :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; isArray
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a105b2ee1de628d79c249ff9b01b8eafc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isArray() const

Returns true if :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` is not empty.

.. index:: pair: function; isVector
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a7222ebeef77518f0871488461e0566f4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isVector() const

Returns true if :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` represents a vector.

.. index:: pair: function; isList
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a62bd73739ceced079b4d70da7a5fff32:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isList() const

Returns true if :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` represents a list.

.. index:: pair: function; isDeque
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a5a1cc5b73b581abbd5b9e5d77fe0fc4e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isDeque() const

Returns true if :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` represents a deque.

.. index:: pair: function; isStruct
.. _doxid-class_poco_1_1_dynamic_1_1_var_1afa256c04a5106a5a5da3215a6ae4a865:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isStruct() const

Returns true if :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` represents a struct.

.. index:: pair: function; at
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a279938418842671811f1d7b0645d1e98:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char&
	at(std::size_t n)

Returns character at position n.

This function only works with :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` containing a std::string.

.. index:: pair: function; operator[]
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a6302e823fd7e5edbf20714a0e5cf2f53:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Var&
	operator[](:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name)

Index operator by name, only use on Vars where isStruct returns true! In all other cases InvalidAccessException is thrown.

.. index:: pair: function; operator[]
.. _doxid-class_poco_1_1_dynamic_1_1_var_1afc80054caa997d57dbafef75ecd36045:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var&
	operator[](:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const

Index operator by name, only use on Vars where isStruct returns true! In all other cases InvalidAccessException is thrown.

.. index:: pair: function; type
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a286c3caca155a292e598802d2387ca6b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::type_info&
	type() const

Returns the type information of the stored content.

.. index:: pair: function; empty
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a351f2f314a9be1e4a24bd51b4a0bafc2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	empty()

Empties :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

.. index:: pair: function; isEmpty
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a3ca72be4fb53004efada3ce36b1d2ea1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isEmpty() const

Returns true if empty.

.. index:: pair: function; isInteger
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a9deccd6f963970bc4dffc065321473c8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isInteger() const

Returns true if stored value is integer.

.. index:: pair: function; isSigned
.. _doxid-class_poco_1_1_dynamic_1_1_var_1afe234afbe2e4df00a13692f37c33829f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isSigned() const

Returns true if stored value is signed.

.. index:: pair: function; isNumeric
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a71973bac5a328b01fdd96fa27262b53a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isNumeric() const

Returns true if stored value is numeric.

Returns false for numeric strings (e.g. "123" is string, not number)

.. index:: pair: function; isBoolean
.. _doxid-class_poco_1_1_dynamic_1_1_var_1af8b29320774548aa12f85afa34719d2f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isBoolean() const

Returns true if stored value is boolean.

Returns false for boolean strings (e.g. "true" is string, not number)

.. index:: pair: function; isString
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a846dabed5302322244d8c9e2b0318b88:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isString() const

Returns true if stored value is std::string.

.. index:: pair: function; size
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a62fb54319d7f0fa5185f6acdf83de0c6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	size() const

Returns the size of this :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>`.

This function returns 0 when :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` is empty, 1 for POD or the size (i.e. length) for held container.

.. index:: pair: function; toString
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a62e35c530b24c2910a26312e70a69278:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::string
	toString() const

Returns the stored value as string.

.. index:: pair: function; parse
.. _doxid-class_poco_1_1_dynamic_1_1_var_1a4e200c95f16926279569ff53ffd734b1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	Var
	parse(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& val)

Parses the string which must be in :ref:`JSON <doxid-namespace_poco_1_1_j_s_o_n>` format.

.. index:: pair: function; toString
.. _doxid-class_poco_1_1_dynamic_1_1_var_1ae2ae384e2353d72666d5c846e1ed3b75:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	std::string
	toString(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Var& var)

Converts the :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` to a string in :ref:`JSON <doxid-namespace_poco_1_1_j_s_o_n>` format.

Note that :ref:`toString(const Var&) <doxid-class_poco_1_1_dynamic_1_1_var_1ae2ae384e2353d72666d5c846e1ed3b75>` will return a different result than :ref:`Var::convert\<std::string>() <doxid-class_poco_1_1_dynamic_1_1_var_1aa71081ae2c04e2f6a46283d528633ceb>` and :ref:`Var::toString() <doxid-class_poco_1_1_dynamic_1_1_var_1a62e35c530b24c2910a26312e70a69278>`!

