.. index:: pair: class; Poco::LocalDateTime
.. _doxid-class_poco_1_1_local_date_time:

class Poco::LocalDateTime
=========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This class represents an instant in local time (as opposed to UTC), expressed in years, months, days, hours, minutes, seconds and milliseconds based on the Gregorian calendar. :ref:`More...<details-class_poco_1_1_local_date_time>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <LocalDateTime.h>
	
	class LocalDateTime
	{
	public:
		// construction
	
		:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time_1afea4dc29cd4c09b842695874a4cba866>`();
	
		:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time_1a324408990d4bc6a70c69e88732ee0415>`(
			int year,
			int month,
			int day,
			int hour = 0,
			int minute = 0,
			int second = 0,
			int millisecond = 0,
			int microsecond = 0
			);
	
		:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time_1a9c0bbe0ac7ec2361daace83065801e37>`(
			int tzd,
			int year,
			int month,
			int day,
			int hour,
			int minute,
			int second,
			int millisecond,
			int microsecond
			);
	
		:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time_1a0b9959ece23a8b56466a039af460ff65>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`DateTime<doxid-class_poco_1_1_date_time>`& dateTime);
	
		:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time_1aae5d6697588c3a6ee2f82e0ac493cd97>`(
			int tzd,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`DateTime<doxid-class_poco_1_1_date_time>`& dateTime
			);
	
		:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time_1af94725a06bc0984eb2bf1e796b106226>`(
			int tzd,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`DateTime<doxid-class_poco_1_1_date_time>`& dateTime,
			bool adjust
			);
	
		:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time_1a18aa760fe2279207381a770db989a587>`(double julianDay);
	
		:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time_1aa284c186dd881468473ac01c8dbe6730>`(
			int tzd,
			double julianDay
			);
	
		:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time_1a18c71996ad3d478353919cce6eec0453>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime);

		// methods
	
		LocalDateTime&
		:ref:`operator=<doxid-class_poco_1_1_local_date_time_1aba7d3c2b63568ae3e61fffe9de47a0fe>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime);
	
		LocalDateTime&
		:ref:`operator=<doxid-class_poco_1_1_local_date_time_1a15b1e8fbcb1ac50610055ffe71fa01c0>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Timestamp<doxid-class_poco_1_1_timestamp>`& timestamp);
	
		LocalDateTime&
		:ref:`operator=<doxid-class_poco_1_1_local_date_time_1a8d37ac7460f4236de2dd11a797189907>`(double julianDay);
	
		LocalDateTime&
		:ref:`assign<doxid-class_poco_1_1_local_date_time_1a593849fdd75ebe9cc18893fa9036927e>`(
			int year,
			int month,
			int day,
			int hour = 0,
			int minute = 0,
			int second = 0,
			int millisecond = 0,
			int microseconds = 0
			);
	
		LocalDateTime&
		:ref:`assign<doxid-class_poco_1_1_local_date_time_1a139fc398c0fb4ca13ae8be1d9811e905>`(
			int tzd,
			int year,
			int month,
			int day,
			int hour,
			int minute,
			int second,
			int millisecond,
			int microseconds
			);
	
		LocalDateTime&
		:ref:`assign<doxid-class_poco_1_1_local_date_time_1aeea45e81de91eb01c426c871c352033d>`(
			int tzd,
			double julianDay
			);
	
		void
		:ref:`swap<doxid-class_poco_1_1_local_date_time_1a75da4600627fbe0e3aace337df810f1b>`(LocalDateTime& dateTime);
	
		int
		:ref:`year<doxid-class_poco_1_1_local_date_time_1ab89918f5265119ef42bf247f253f94ed>`() const;
	
		int
		:ref:`month<doxid-class_poco_1_1_local_date_time_1ad40ae00cee05778847b85a4d4556848e>`() const;
	
		int
		:ref:`week<doxid-class_poco_1_1_local_date_time_1a9bfd878e06dca2004994b242bc732d40>`(int firstDayOfWeek = :ref:`DateTime::MONDAY<doxid-class_poco_1_1_date_time_1a7ebedf052bc79beae5b355587fae0629aebcfe95041ec9d2f454c7781b999a523>`) const;
	
		int
		:ref:`day<doxid-class_poco_1_1_local_date_time_1a9c99cb97f76b393bdad4427c0b9341eb>`() const;
	
		int
		:ref:`dayOfWeek<doxid-class_poco_1_1_local_date_time_1a0494eb6ccd7f7b45c489371630765b89>`() const;
	
		int
		:ref:`dayOfYear<doxid-class_poco_1_1_local_date_time_1a96da83bde69564ca4732fb525bc1edf0>`() const;
	
		int
		:ref:`hour<doxid-class_poco_1_1_local_date_time_1af69963df6766779948dab8c64d296e36>`() const;
	
		int
		:ref:`hourAMPM<doxid-class_poco_1_1_local_date_time_1a5371457718b26bac991116bb179f7fa2>`() const;
	
		bool
		:ref:`isAM<doxid-class_poco_1_1_local_date_time_1aca2ecae3f187f1d8c265f6c597597501>`() const;
	
		bool
		:ref:`isPM<doxid-class_poco_1_1_local_date_time_1a1272cfc7e33a4c3d1ef60dcd7bbe53c9>`() const;
	
		int
		:ref:`minute<doxid-class_poco_1_1_local_date_time_1a0d288047e1d5132956d3f0b60bc03a12>`() const;
	
		int
		:ref:`second<doxid-class_poco_1_1_local_date_time_1a6be6bf0549fa00472b8c8d0635d8cf4b>`() const;
	
		int
		:ref:`millisecond<doxid-class_poco_1_1_local_date_time_1ad32641050f3fedd042e8a8248a078661>`() const;
	
		int
		:ref:`microsecond<doxid-class_poco_1_1_local_date_time_1acac6fee83d4a1815fd7d692a876eef18>`() const;
	
		double
		:ref:`julianDay<doxid-class_poco_1_1_local_date_time_1a7a021db5d37fd9c4f9c4ebd7c8a92372>`() const;
	
		int
		:ref:`tzd<doxid-class_poco_1_1_local_date_time_1a5d67633fcd76298acae0778ea167aab8>`() const;
	
		:ref:`DateTime<doxid-class_poco_1_1_date_time>`
		:ref:`utc<doxid-class_poco_1_1_local_date_time_1a763b2e727ad70e4133bc1e79ef0d65b8>`() const;
	
		:ref:`Timestamp<doxid-class_poco_1_1_timestamp>`
		:ref:`timestamp<doxid-class_poco_1_1_local_date_time_1a45d0cc18700e1c9889b6fced1c745714>`() const;
	
		:ref:`Timestamp::UtcTimeVal<doxid-class_poco_1_1_timestamp_1a06b805d545e2f0261b4e4d20f8e445c4>`
		:ref:`utcTime<doxid-class_poco_1_1_local_date_time_1a31f118064130bfb580e03390701ed67d>`() const;
	
		bool
		:target:`operator==<doxid-class_poco_1_1_local_date_time_1ab655da70afdda6f1446e72b82021c68b>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime) const;
	
		bool
		:target:`operator!=<doxid-class_poco_1_1_local_date_time_1aaa94c6a780992e40bf9bd38dcb4ab653>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime) const;
	
		bool
		:target:`operator<<doxid-class_poco_1_1_local_date_time_1a0b8b97b14d429983d78af431426ddf37>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime) const;
	
		bool
		:target:`operator<=<doxid-class_poco_1_1_local_date_time_1ac3d62518714ea1424ed7db6189f8a0de>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime) const;
	
		bool
		:target:`operator><doxid-class_poco_1_1_local_date_time_1af0e9ba6238a8adc2cc110c5f033607f9>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime) const;
	
		bool
		:target:`operator>=<doxid-class_poco_1_1_local_date_time_1af07cb3bf27c5776edc4506a22137b7d8>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime) const;
	
		LocalDateTime
		:target:`operator+<doxid-class_poco_1_1_local_date_time_1a973101dc88a5a41781f32fb511ab9e5b>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Timespan<doxid-class_poco_1_1_timespan>`& span) const;
	
		LocalDateTime
		:target:`operator-<doxid-class_poco_1_1_local_date_time_1ae992fa69fe3788a87a2608f2ab3fdd63>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Timespan<doxid-class_poco_1_1_timespan>`& span) const;
	
		:ref:`Timespan<doxid-class_poco_1_1_timespan>`
		:target:`operator-<doxid-class_poco_1_1_local_date_time_1ac033fc7b7dbda218e52c5d39798d9dad>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime) const;
	
		LocalDateTime&
		:target:`operator+=<doxid-class_poco_1_1_local_date_time_1a2a2834c261f841d2f13c1b593cc484ba>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Timespan<doxid-class_poco_1_1_timespan>`& span);
	
		LocalDateTime&
		:target:`operator-=<doxid-class_poco_1_1_local_date_time_1ac4072b45d8a84683690bd83367d9bb01>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Timespan<doxid-class_poco_1_1_timespan>`& span);

	protected:
		// construction
	
		:target:`LocalDateTime<doxid-class_poco_1_1_local_date_time_1a8dde4a3908d7e4e0d79fa6456762a264>`(
			:ref:`Timestamp::UtcTimeVal<doxid-class_poco_1_1_timestamp_1a06b805d545e2f0261b4e4d20f8e445c4>` utcTime,
			:ref:`Timestamp::TimeDiff<doxid-class_poco_1_1_timestamp_1a23501cdddede36b1551ce48525777b31>` diff,
			int tzd
			);

		// methods
	
		void
		:ref:`determineTzd<doxid-class_poco_1_1_local_date_time_1a1522fdd010f8660d62cdd71d046aae14>`(bool adjust = false);
	
		void
		:ref:`adjustForTzd<doxid-class_poco_1_1_local_date_time_1a54a0b19090ea3e4382f78111e696e18e>`();
	
		std::time_t
		:ref:`dstOffset<doxid-class_poco_1_1_local_date_time_1ac563ab9df3520627d2f7107707036b34>`(int& dstOffset) const;
	};
.. _details-class_poco_1_1_local_date_time:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This class represents an instant in local time (as opposed to UTC), expressed in years, months, days, hours, minutes, seconds and milliseconds based on the Gregorian calendar.

In addition to the date and time, the class also maintains a time zone differential, which denotes the difference in seconds from UTC to local time, i.e. UTC = local time - time zone differential.

Although :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` supports relational and arithmetic operators, all date/time comparisons and date/time arithmetics should be done in UTC, using the :ref:`DateTime <doxid-class_poco_1_1_date_time>` or :ref:`Timestamp <doxid-class_poco_1_1_timestamp>` class for better performance. The relational operators normalize the dates/times involved to UTC before carrying out the comparison.

The time zone differential is based on the input date and time and current time zone. A number of constructors accept an explicit time zone differential parameter. These should not be used since daylight savings time processing is impossible since the time zone is unknown. Each of the constructors accepting a tzd parameter have been marked as deprecated and may be removed in a future revision.

Construction
------------

.. index:: pair: function; LocalDateTime
.. _doxid-class_poco_1_1_local_date_time_1afea4dc29cd4c09b842695874a4cba866:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime()

Creates a :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` with the current date/time for the current time zone.

.. index:: pair: function; LocalDateTime
.. _doxid-class_poco_1_1_local_date_time_1a324408990d4bc6a70c69e88732ee0415:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime(
		int year,
		int month,
		int day,
		int hour = 0,
		int minute = 0,
		int second = 0,
		int millisecond = 0,
		int microsecond = 0
		)

Creates a :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` for the given Gregorian local date and time.

.. ref-code-block:: cpp

	* year is from 0 to 9999.
	* month is from 1 to 12.
	* day is from 1 to 31.
	* hour is from 0 to 23.
	* minute is from 0 to 59.
	* second is from 0 to 60 (allowing leap seconds).
	* millisecond is from 0 to 999.
	* microsecond is from 0 to 999.

.. index:: pair: function; LocalDateTime
.. _doxid-class_poco_1_1_local_date_time_1a9c0bbe0ac7ec2361daace83065801e37:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime(
		int tzd,
		int year,
		int month,
		int day,
		int hour,
		int minute,
		int second,
		int millisecond,
		int microsecond
		)

Creates a :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` for the given Gregorian date and time in the time zone denoted by the time zone differential in tzd.

.. ref-code-block:: cpp

	* tzd is in seconds.
	* year is from 0 to 9999.
	* month is from 1 to 12.
	* day is from 1 to 31.
	* hour is from 0 to 23.
	* minute is from 0 to 59.
	* second is from 0 to 60 (allowing leap seconds).
	* millisecond is from 0 to 999.
	* microsecond is from 0 to 999.

.. index:: pair: function; LocalDateTime
.. _doxid-class_poco_1_1_local_date_time_1a0b9959ece23a8b56466a039af460ff65:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`DateTime<doxid-class_poco_1_1_date_time>`& dateTime)

Creates a :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` from the UTC time given in dateTime, using the time zone differential of the current time zone.

.. index:: pair: function; LocalDateTime
.. _doxid-class_poco_1_1_local_date_time_1aae5d6697588c3a6ee2f82e0ac493cd97:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime(
		int tzd,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`DateTime<doxid-class_poco_1_1_date_time>`& dateTime
		)

Creates a :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` from the UTC time given in dateTime, using the given time zone differential.

Adjusts dateTime for the given time zone differential.

.. index:: pair: function; LocalDateTime
.. _doxid-class_poco_1_1_local_date_time_1af94725a06bc0984eb2bf1e796b106226:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime(
		int tzd,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`DateTime<doxid-class_poco_1_1_date_time>`& dateTime,
		bool adjust
		)

Creates a :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` from the UTC time given in dateTime, using the given time zone differential.

If adjust is true, adjusts dateTime for the given time zone differential.

.. index:: pair: function; LocalDateTime
.. _doxid-class_poco_1_1_local_date_time_1a18aa760fe2279207381a770db989a587:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime(double julianDay)

Creates a :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` for the given Julian day in the local time zone.

.. index:: pair: function; LocalDateTime
.. _doxid-class_poco_1_1_local_date_time_1aa284c186dd881468473ac01c8dbe6730:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime(
		int tzd,
		double julianDay
		)

Creates a :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` for the given Julian day in the time zone denoted by the time zone differential in tzd.

.. index:: pair: function; LocalDateTime
.. _doxid-class_poco_1_1_local_date_time_1a18c71996ad3d478353919cce6eec0453:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime)

Copy constructor. Creates the :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` from another one.

Methods
-------

.. index:: pair: function; operator=
.. _doxid-class_poco_1_1_local_date_time_1aba7d3c2b63568ae3e61fffe9de47a0fe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime&
	operator=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LocalDateTime& dateTime)

Assigns another :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>`.

.. index:: pair: function; operator=
.. _doxid-class_poco_1_1_local_date_time_1a15b1e8fbcb1ac50610055ffe71fa01c0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime&
	operator=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Timestamp<doxid-class_poco_1_1_timestamp>`& timestamp)

Assigns a timestamp.

.. index:: pair: function; operator=
.. _doxid-class_poco_1_1_local_date_time_1a8d37ac7460f4236de2dd11a797189907:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime&
	operator=(double julianDay)

Assigns a Julian day in the local time zone.

.. index:: pair: function; assign
.. _doxid-class_poco_1_1_local_date_time_1a593849fdd75ebe9cc18893fa9036927e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime&
	assign(
		int year,
		int month,
		int day,
		int hour = 0,
		int minute = 0,
		int second = 0,
		int millisecond = 0,
		int microseconds = 0
		)

Assigns a Gregorian local date and time.

.. ref-code-block:: cpp

	* year is from 0 to 9999.
	* month is from 1 to 12.
	* day is from 1 to 31.
	* hour is from 0 to 23.
	* minute is from 0 to 59.
	* second is from 0 to 60 (allowing leap seconds).
	* millisecond is from 0 to 999.
	* microsecond is from 0 to 999.

.. index:: pair: function; assign
.. _doxid-class_poco_1_1_local_date_time_1a139fc398c0fb4ca13ae8be1d9811e905:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime&
	assign(
		int tzd,
		int year,
		int month,
		int day,
		int hour,
		int minute,
		int second,
		int millisecond,
		int microseconds
		)

Assigns a Gregorian local date and time in the time zone denoted by the time zone differential in tzd.

.. ref-code-block:: cpp

	* tzd is in seconds.
	* year is from 0 to 9999.
	* month is from 1 to 12.
	* day is from 1 to 31.
	* hour is from 0 to 23.
	* minute is from 0 to 59.
	* second is from 0 to 60 (allowing leap seconds).
	* millisecond is from 0 to 999.
	* microsecond is from 0 to 999.

.. index:: pair: function; assign
.. _doxid-class_poco_1_1_local_date_time_1aeea45e81de91eb01c426c871c352033d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LocalDateTime&
	assign(
		int tzd,
		double julianDay
		)

Assigns a Julian day in the time zone denoted by the time zone differential in tzd.

.. index:: pair: function; swap
.. _doxid-class_poco_1_1_local_date_time_1a75da4600627fbe0e3aace337df810f1b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	swap(LocalDateTime& dateTime)

Swaps the :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>` with another one.

.. index:: pair: function; year
.. _doxid-class_poco_1_1_local_date_time_1ab89918f5265119ef42bf247f253f94ed:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	year() const

Returns the year.

.. index:: pair: function; month
.. _doxid-class_poco_1_1_local_date_time_1ad40ae00cee05778847b85a4d4556848e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	month() const

Returns the month (1 to 12).

.. index:: pair: function; week
.. _doxid-class_poco_1_1_local_date_time_1a9bfd878e06dca2004994b242bc732d40:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	week(int firstDayOfWeek = :ref:`DateTime::MONDAY<doxid-class_poco_1_1_date_time_1a7ebedf052bc79beae5b355587fae0629aebcfe95041ec9d2f454c7781b999a523>`) const

Returns the week number within the year.

FirstDayOfWeek should be either SUNDAY (0) or MONDAY (1). The returned week number will be from 0 to 53. Week number 1 is the week containing January 4. This is in accordance to ISO 8601.

The following example assumes that firstDayOfWeek is MONDAY. For 2005, which started on a Saturday, week 1 will be the week starting on Monday, January 3. January 1 and 2 will fall within week 0 (or the last week of the previous year).

For 2007, which starts on a Monday, week 1 will be the week startung on Monday, January 1. There will be no week 0 in 2007.

.. index:: pair: function; day
.. _doxid-class_poco_1_1_local_date_time_1a9c99cb97f76b393bdad4427c0b9341eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	day() const

Returns the day witin the month (1 to 31).

.. index:: pair: function; dayOfWeek
.. _doxid-class_poco_1_1_local_date_time_1a0494eb6ccd7f7b45c489371630765b89:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	dayOfWeek() const

Returns the weekday (0 to 6, where 0 = Sunday, 1 = Monday, ..., 6 = Saturday).

.. index:: pair: function; dayOfYear
.. _doxid-class_poco_1_1_local_date_time_1a96da83bde69564ca4732fb525bc1edf0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	dayOfYear() const

Returns the number of the day in the year.

January 1 is 1, February 1 is 32, etc.

.. index:: pair: function; hour
.. _doxid-class_poco_1_1_local_date_time_1af69963df6766779948dab8c64d296e36:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	hour() const

Returns the hour (0 to 23).

.. index:: pair: function; hourAMPM
.. _doxid-class_poco_1_1_local_date_time_1a5371457718b26bac991116bb179f7fa2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	hourAMPM() const

Returns the hour (0 to 12).

.. index:: pair: function; isAM
.. _doxid-class_poco_1_1_local_date_time_1aca2ecae3f187f1d8c265f6c597597501:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isAM() const

Returns true if hour < 12;.

.. index:: pair: function; isPM
.. _doxid-class_poco_1_1_local_date_time_1a1272cfc7e33a4c3d1ef60dcd7bbe53c9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isPM() const

Returns true if hour >= 12.

.. index:: pair: function; minute
.. _doxid-class_poco_1_1_local_date_time_1a0d288047e1d5132956d3f0b60bc03a12:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	minute() const

Returns the minute (0 to 59).

.. index:: pair: function; second
.. _doxid-class_poco_1_1_local_date_time_1a6be6bf0549fa00472b8c8d0635d8cf4b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	second() const

Returns the second (0 to 59).

.. index:: pair: function; millisecond
.. _doxid-class_poco_1_1_local_date_time_1ad32641050f3fedd042e8a8248a078661:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	millisecond() const

Returns the millisecond (0 to 999)

.. index:: pair: function; microsecond
.. _doxid-class_poco_1_1_local_date_time_1acac6fee83d4a1815fd7d692a876eef18:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	microsecond() const

Returns the microsecond (0 to 999)

.. index:: pair: function; julianDay
.. _doxid-class_poco_1_1_local_date_time_1a7a021db5d37fd9c4f9c4ebd7c8a92372:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	double
	julianDay() const

Returns the julian day for the date.

.. index:: pair: function; tzd
.. _doxid-class_poco_1_1_local_date_time_1a5d67633fcd76298acae0778ea167aab8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	tzd() const

Returns the time zone differential.

.. index:: pair: function; utc
.. _doxid-class_poco_1_1_local_date_time_1a763b2e727ad70e4133bc1e79ef0d65b8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`DateTime<doxid-class_poco_1_1_date_time>`
	utc() const

Returns the UTC equivalent for the local date and time.

.. index:: pair: function; timestamp
.. _doxid-class_poco_1_1_local_date_time_1a45d0cc18700e1c9889b6fced1c745714:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Timestamp<doxid-class_poco_1_1_timestamp>`
	timestamp() const

Returns the date and time expressed as a :ref:`Timestamp <doxid-class_poco_1_1_timestamp>`.

.. index:: pair: function; utcTime
.. _doxid-class_poco_1_1_local_date_time_1a31f118064130bfb580e03390701ed67d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Timestamp::UtcTimeVal<doxid-class_poco_1_1_timestamp_1a06b805d545e2f0261b4e4d20f8e445c4>`
	utcTime() const

Returns the UTC equivalent for the local date and time.

.. index:: pair: function; determineTzd
.. _doxid-class_poco_1_1_local_date_time_1a1522fdd010f8660d62cdd71d046aae14:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	determineTzd(bool adjust = false)

Recalculate the tzd based on the _dateTime member based on the current timezone using the Standard C runtime functions.

If adjust is true, then :ref:`adjustForTzd() <doxid-class_poco_1_1_local_date_time_1a54a0b19090ea3e4382f78111e696e18e>` is called after the differential is calculated.

.. index:: pair: function; adjustForTzd
.. _doxid-class_poco_1_1_local_date_time_1a54a0b19090ea3e4382f78111e696e18e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	adjustForTzd()

Adjust the _dateTime member based on the _tzd member.

.. index:: pair: function; dstOffset
.. _doxid-class_poco_1_1_local_date_time_1ac563ab9df3520627d2f7107707036b34:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::time_t
	dstOffset(int& dstOffset) const

Determine the DST offset for the current date/time.

