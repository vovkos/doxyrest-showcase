.. index:: pair: class; Poco::NObserver
.. _doxid-class_poco_1_1_n_observer:

template class Poco::NObserver
==============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This template class implements an adapter that sits between a :ref:`NotificationCenter <doxid-class_poco_1_1_notification_center>` and an object receiving notifications from it. :ref:`More...<details-class_poco_1_1_n_observer>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <NObserver.h>
	
	template <
		class C,
		class N
		>
	class NObserver: public :ref:`Poco::AbstractObserver<doxid-class_poco_1_1_abstract_observer>`
	{
	public:
		// typedefs
	
		typedef :ref:`AutoPtr<doxid-class_poco_1_1_auto_ptr>`<N> :target:`NotificationPtr<doxid-class_poco_1_1_n_observer_1af6e5e0f3646d8314aad4aaced52324b7>`;
		typedef void(C::* :target:`Callback<doxid-class_poco_1_1_n_observer_1a32299931d37284b38cedec0e6c5d063e>`)(const NotificationPtr &);

		// construction
	
		:target:`NObserver<doxid-class_poco_1_1_n_observer_1aec977de376984e9954d7f99bffcbda1d>`(
			C& object,
			:ref:`Callback<doxid-class_poco_1_1_n_observer_1a32299931d37284b38cedec0e6c5d063e>` method
			);
	
		:target:`NObserver<doxid-class_poco_1_1_n_observer_1ae9fc6af14d1d500e75c775af0a9fb275>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` NObserver& observer);

		// methods
	
		NObserver&
		:target:`operator=<doxid-class_poco_1_1_n_observer_1a184dad0dee29e076fce0533449c1b647>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` NObserver& observer);
	
		virtual
		void
		:target:`notify<doxid-class_poco_1_1_n_observer_1a086cb9d06ff9b250600ffd3648785aa9>`(:ref:`Notification<doxid-class_poco_1_1_notification>`* pNf) const;
	
		virtual
		bool
		:target:`equals<doxid-class_poco_1_1_n_observer_1a921fd30a3c4d8f368c0323728e3c11c2>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`AbstractObserver<doxid-class_poco_1_1_abstract_observer>`& abstractObserver) const;
	
		virtual
		bool
		:target:`accepts<doxid-class_poco_1_1_n_observer_1a1fe8286235ed788fa27b673fffb238f4>`(:ref:`Notification<doxid-class_poco_1_1_notification>`* pNf) const;
	
		virtual
		:ref:`AbstractObserver<doxid-class_poco_1_1_abstract_observer>`*
		:target:`clone<doxid-class_poco_1_1_n_observer_1a9e6ec698be2eaa7f07eb86420cc0aa9d>`() const;
	
		virtual
		void
		:target:`disable<doxid-class_poco_1_1_n_observer_1a4798239d0646fe1c2349b879dfebef83>`();
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		:ref:`AbstractObserver<doxid-class_poco_1_1_abstract_observer>`&
		:ref:`operator=<doxid-class_poco_1_1_abstract_observer_1a8ca85977a861e564d3211b644fd741e4>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`AbstractObserver<doxid-class_poco_1_1_abstract_observer>`& observer);
	
		virtual
		void
		:ref:`notify<doxid-class_poco_1_1_abstract_observer_1a73fdac4ab1e4771c3a0e70acc5f8fa84>`(:ref:`Notification<doxid-class_poco_1_1_notification>`* pNf) const = 0;
	
		virtual
		bool
		:ref:`equals<doxid-class_poco_1_1_abstract_observer_1a0fdca8e02db0da228c4da68a7fc12a42>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`AbstractObserver<doxid-class_poco_1_1_abstract_observer>`& observer) const = 0;
	
		virtual
		bool
		:ref:`accepts<doxid-class_poco_1_1_abstract_observer_1ae55bf3bac2b7e2dace6a91eb4f46abb7>`(:ref:`Notification<doxid-class_poco_1_1_notification>`* pNf) const = 0;
	
		virtual
		:ref:`AbstractObserver<doxid-class_poco_1_1_abstract_observer>`*
		:ref:`clone<doxid-class_poco_1_1_abstract_observer_1ae82e5ccc4decbbeb1f67f730e9926ead>`() const = 0;
	
		virtual
		void
		:ref:`disable<doxid-class_poco_1_1_abstract_observer_1a0d9f89e1911a7455a66460ef9b553129>`() = 0;

.. _details-class_poco_1_1_n_observer:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This template class implements an adapter that sits between a :ref:`NotificationCenter <doxid-class_poco_1_1_notification_center>` and an object receiving notifications from it.

It is quite similar in concept to the :ref:`RunnableAdapter <doxid-class_poco_1_1_runnable_adapter>`, but provides some :ref:`NotificationCenter <doxid-class_poco_1_1_notification_center>` specific additional methods. See the :ref:`NotificationCenter <doxid-class_poco_1_1_notification_center>` class for information on how to use this template class.

This class template is quite similar to the :ref:`Observer <doxid-class_poco_1_1_observer>` class template. The only difference is that the :ref:`NObserver <doxid-class_poco_1_1_n_observer>` expects the callback function to accept a const :ref:`AutoPtr <doxid-class_poco_1_1_auto_ptr>` & instead of a plain pointer as argument, thus simplifying memory management.

