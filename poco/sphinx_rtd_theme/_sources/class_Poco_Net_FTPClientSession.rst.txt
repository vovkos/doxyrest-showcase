.. index:: pair: class; Poco::Net::FTPClientSession
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session:

class Poco::Net::FTPClientSession
=================================

.. toctree::
	:hidden:

	enum_Poco_Net_FTPClientSession_FileType.rst
	enum_Poco_Net_FTPClientSession_StatusClass.rst

Overview
~~~~~~~~

This class implements an :ref:`File <doxid-class_poco_1_1_file>` Transfer Protocol (FTP, RFC 959) client. :ref:`More...<details-class_poco_1_1_net_1_1_f_t_p_client_session>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <FTPClientSession.h>
	
	class FTPClientSession
	{
	public:
		// enums
	
		enum
		{
		    :target:`FTP_PORT<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a3c8cc8fa06b29da5a53a480f2a5680e7aebf5cba22932dfd3c0df8ec38754f2af>` = 21,
		};
	
		enum :ref:`FileType<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aea832d1af42baeaed947d80886707730>`;

		// construction
	
		:ref:`FTPClientSession<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aa54d6eaac5951de1dff8593fc6f20a39>`();
		:ref:`FTPClientSession<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1accc9cf5f9415e676b39d54d35f6e36e9>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`StreamSocket<doxid-class_poco_1_1_net_1_1_stream_socket>`& socket);
	
		:target:`FTPClientSession<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1acacf8f20ea2eeda1f810eb6e9f1cc976>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& host,
			Poco::UInt16 port = :ref:`FTP_PORT<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a3c8cc8fa06b29da5a53a480f2a5680e7aebf5cba22932dfd3c0df8ec38754f2af>`,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& username = "",
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& password = ""
			);

		// methods
	
		void
		:ref:`setTimeout<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a2b5d548e96d212cf8f7227b071a6ccb2>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Poco::Timespan<doxid-class_poco_1_1_timespan>`& timeout);
	
		:ref:`Poco::Timespan<doxid-class_poco_1_1_timespan>`
		:ref:`getTimeout<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a765c674c8265d52268deec0ced1a8cfb>`() const;
	
		void
		:ref:`setPassive<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ae3344dfc75dc9402511c6a55d0f22412>`(
			bool flag,
			bool useRFC1738 = true
			);
	
		bool
		:ref:`getPassive<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a2517634d7d2f9a66b2512393506e2ea2>`() const;
	
		void
		:target:`open<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a2100e94b79aa4ebd5269664411490edf>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& host,
			Poco::UInt16 port,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& username = "",
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& password = ""
			);
	
		void
		:ref:`login<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0b074dae12cb8713431eb4ca38b37f65>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& username,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& password
			);
	
		void
		:target:`logout<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ac5fbb8e986c24d5a1ed0c1868127d12f>`();
	
		void
		:ref:`close<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1abb59d0f0ef057af926a35dc2dd28f970>`();
	
		std::string
		:ref:`systemType<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a203b82f093b92e53c8bd43130a227099>`();
	
		void
		:ref:`setFileType<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a3506bd829c7c308341ff1f72f7394fa5>`(:ref:`FileType<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aea832d1af42baeaed947d80886707730>` type);
	
		:ref:`FileType<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aea832d1af42baeaed947d80886707730>`
		:ref:`getFileType<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0710ee9455fb823514d7ba0700c26df8>`() const;
	
		void
		:ref:`setWorkingDirectory<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a79c43f8a5a215ce811a6c73d69090c58>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path);
	
		std::string
		:ref:`getWorkingDirectory<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ab0207a76c815d684e8868304a611ab3c>`();
	
		void
		:ref:`cdup<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a57b82c445be08914248d450ef5e76077>`();
	
		void
		:ref:`rename<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a8f3c31f0c58809fc6e01faf4a4f735b2>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& oldName,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& newName
			);
	
		void
		:ref:`remove<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a3ed533cb9483539797ce3cdaeee9dc72>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path);
	
		void
		:ref:`createDirectory<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aa7e8894a261f320a9d7fd6e7575dc3fd>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path);
	
		void
		:ref:`removeDirectory<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ab0364064c62bfc47e5997e271adfae09>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path);
	
		std::istream&
		:ref:`beginDownload<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a43def4a5622dff382d94a1acd4366562>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path);
	
		void
		:ref:`endDownload<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0d1361d39f4265e2175d71f7e3083d84>`();
	
		std::ostream&
		:ref:`beginUpload<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1af3d02a2f2bd1cd1b92d86f4c5d922743>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path);
	
		void
		:ref:`endUpload<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a5d15afff839bbb86e4e26723642590c5>`();
	
		std::istream&
		:ref:`beginList<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aec9adf9d0b877fd50d480d7de9092bff>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path = "",
			bool extended = false
			);
	
		void
		:ref:`endList<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aa1eab2a29fbdd3cf4904a6aff9a4465d>`();
	
		void
		:ref:`abort<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aefd547e381a594fb9175af899388fbd4>`();
	
		int
		:ref:`sendCommand<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a10e0e7eb19652d38d8171dabb5076c1c>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& command,
			std::string& response
			);
	
		int
		:ref:`sendCommand<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0fb6d67a7e3e732b58940a64dfa3bbab>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& command,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& arg,
			std::string& response
			);
	
		bool
		:ref:`isOpen<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1adcbd545f18ab66d34a3891f7d5a2fe1b>`() const;
	
		bool
		:ref:`isLoggedIn<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a75ecb7ddbd4c0438f882887ed4d7c5c3>`() const;

	protected:
		// enums
	
		enum
		{
		    :target:`DEFAULT_TIMEOUT<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a25f94a544332c10364bdc246d4b513cfa0c1c4de46b1ef6066757da51ae21138b>` = 30000000,
		};
	
		enum :ref:`StatusClass<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a85c45c581e118e4c6b048ecc8bfefa9b>`;

		// methods
	
		static
		bool
		:target:`isPositivePreliminary<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ab6ffba0e181dcbb268bc6480977b0ce4>`(int status);
	
		static
		bool
		:target:`isPositiveCompletion<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a1bad846017d649df34f8a124f05ed187>`(int status);
	
		static
		bool
		:target:`isPositiveIntermediate<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a8c65766dc75cacf0e51f73282e06f076>`(int status);
	
		static
		bool
		:target:`isTransientNegative<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a327e155df486efd9d9af47d92de3897e>`(int status);
	
		static
		bool
		:target:`isPermanentNegative<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a78262f5c46eed22db90c47008ec57a28>`(int status);
	
		std::string
		:target:`extractPath<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ad3927556eef8a023e456092c16b5ad8c>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& response);
	
		:ref:`StreamSocket<doxid-class_poco_1_1_net_1_1_stream_socket>`
		:target:`establishDataConnection<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a20367e6c2b15acae90ff0f3588263a86>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& command,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& arg
			);
	
		:ref:`StreamSocket<doxid-class_poco_1_1_net_1_1_stream_socket>`
		:target:`activeDataConnection<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ab9792a7365c0331f28a3fc8d2def42d8>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& command,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& arg
			);
	
		:ref:`StreamSocket<doxid-class_poco_1_1_net_1_1_stream_socket>`
		:target:`passiveDataConnection<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ad02d7d5b1e437a6d67257de34f81d5ca>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& command,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& arg
			);
	
		void
		:target:`sendPortCommand<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a282e256635fff53aae44515a6e58e09f>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`SocketAddress<doxid-class_poco_1_1_net_1_1_socket_address>`& addr);
	
		:ref:`SocketAddress<doxid-class_poco_1_1_net_1_1_socket_address>`
		:target:`sendPassiveCommand<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a3e9e4745102f50432c20684d04026613>`();
	
		bool
		:target:`sendEPRT<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ae11d4ec04190b0fded6385360d36db8d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`SocketAddress<doxid-class_poco_1_1_net_1_1_socket_address>`& addr);
	
		void
		:target:`sendPORT<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a78c102b95dacb7eed90624fa152b7970>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`SocketAddress<doxid-class_poco_1_1_net_1_1_socket_address>`& addr);
	
		bool
		:target:`sendEPSV<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ac08becccc6423fe2fe5ea1ffc8dcbf3f>`(:ref:`SocketAddress<doxid-class_poco_1_1_net_1_1_socket_address>`& addr);
	
		void
		:target:`sendPASV<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a63b2d75dea865174299de7ab510ab7b3>`(:ref:`SocketAddress<doxid-class_poco_1_1_net_1_1_socket_address>`& addr);
	
		void
		:target:`parseAddress<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a76d9a2c3961c669a7ec3d216d7fda4aa>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& str,
			:ref:`SocketAddress<doxid-class_poco_1_1_net_1_1_socket_address>`& addr
			);
	
		void
		:target:`parseExtAddress<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a8c605c872c0ae7f43e04ac3d2d337345>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& str,
			:ref:`SocketAddress<doxid-class_poco_1_1_net_1_1_socket_address>`& addr
			);
	
		void
		:target:`endTransfer<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a6134f5650d76526d0ed81c333b04c68f>`();
	};
.. _details-class_poco_1_1_net_1_1_f_t_p_client_session:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This class implements an :ref:`File <doxid-class_poco_1_1_file>` Transfer Protocol (FTP, RFC 959) client.

Most of the features of the FTP protocol, as specified in RFC 959, are supported. Not supported are EBCDIC and LOCAL data types and format control and structured files.

Also supported are the EPRT and EPSV commands from RFC 1738 (FTP Extensions for IPv6 and NAT). The client will first attempt to use the EPRT and EPSV commands. If the server does not supports these commands, the client will fall back to PORT and PASV.

Construction
------------

.. index:: pair: function; FTPClientSession
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aa54d6eaac5951de1dff8593fc6f20a39:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	FTPClientSession()

Creates an :ref:`FTPClientSession <doxid-class_poco_1_1_net_1_1_f_t_p_client_session>`.

Passive mode will be used for data transfers.

.. index:: pair: function; FTPClientSession
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1accc9cf5f9415e676b39d54d35f6e36e9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	FTPClientSession(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`StreamSocket<doxid-class_poco_1_1_net_1_1_stream_socket>`& socket)

Creates an :ref:`FTPClientSession <doxid-class_poco_1_1_net_1_1_f_t_p_client_session>` using the given connected socket for the control connection.

Passive mode will be used for data transfers.

Methods
-------

.. index:: pair: function; setTimeout
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a2b5d548e96d212cf8f7227b071a6ccb2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setTimeout(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Poco::Timespan<doxid-class_poco_1_1_timespan>`& timeout)

Sets the timeout for socket operations.

.. index:: pair: function; getTimeout
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a765c674c8265d52268deec0ced1a8cfb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Poco::Timespan<doxid-class_poco_1_1_timespan>`
	getTimeout() const

Returns the timeout for socket operations.

.. index:: pair: function; setPassive
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ae3344dfc75dc9402511c6a55d0f22412:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setPassive(
		bool flag,
		bool useRFC1738 = true
		)

Enables (default) or disables FTP passive mode for this session.

If useRFC1738 is true (the default), the RFC 1738 EPSV command is used (with a fallback to PASV if EPSV fails) for switching to passive mode. The same applies to EPRT and PORT for active connections.

.. index:: pair: function; getPassive
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a2517634d7d2f9a66b2512393506e2ea2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	getPassive() const

Returns true iff passive mode is enabled for this connection.

.. index:: pair: function; login
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0b074dae12cb8713431eb4ca38b37f65:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	login(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& username,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& password
		)

Authenticates the user against the FTP server.

Must be called before any other commands (except QUIT) can be sent.

Sends a USER command followed by a PASS command with the respective arguments to the server.

Throws a FTPException in case of a FTP-specific error, or a NetException in case of a general network communication failure.

.. index:: pair: function; close
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1abb59d0f0ef057af926a35dc2dd28f970:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	close()

Sends a QUIT command and closes the connection to the server.

Throws a FTPException in case of a FTP-specific error, or a NetException in case of a general network communication failure.

.. index:: pair: function; systemType
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a203b82f093b92e53c8bd43130a227099:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::string
	systemType()

Returns the system type of the FTP server.

Sends a SYST command to the server and returns the result.

.. index:: pair: function; setFileType
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a3506bd829c7c308341ff1f72f7394fa5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setFileType(:ref:`FileType<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aea832d1af42baeaed947d80886707730>` type)

Sets the file type for transferring files.

Sends a TYPE command with a corresponding argument to the server.

Throws a FTPException in case of a FTP-specific error, or a NetException in case of a general network communication failure.

.. index:: pair: function; getFileType
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0710ee9455fb823514d7ba0700c26df8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`FileType<doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aea832d1af42baeaed947d80886707730>`
	getFileType() const

Returns the file type for transferring files.

.. index:: pair: function; setWorkingDirectory
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a79c43f8a5a215ce811a6c73d69090c58:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setWorkingDirectory(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path)

Changes the current working directory on the server.

Sends a CWD command with the given path as argument to the server.

Throws a FTPException in case of a FTP-specific error, or a NetException in case of a general network communication failure.

.. index:: pair: function; getWorkingDirectory
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ab0207a76c815d684e8868304a611ab3c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::string
	getWorkingDirectory()

Returns the current working directory on the server.

Throws a FTPException in case of a FTP-specific error, or a NetException in case of a general network communication failure.

.. index:: pair: function; cdup
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a57b82c445be08914248d450ef5e76077:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	cdup()

Moves one directory up from the current working directory on the server.

Sends a CDUP command to the server.

Throws a FTPException in case of a FTP-specific error, or a NetException in case of a general network communication failure.

.. index:: pair: function; rename
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a8f3c31f0c58809fc6e01faf4a4f735b2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	rename(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& oldName,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& newName
		)

Renames the file on the server given by oldName to newName.

Sends a RNFR command, followed by a RNTO command to the server.

Throws a FTPException in case of a FTP-specific error, or a NetException in case of a general network communication failure.

.. index:: pair: function; remove
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a3ed533cb9483539797ce3cdaeee9dc72:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	remove(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path)

Deletes the file specified by path on the server.

Sends a DELE command with path as argument to the server.

Throws a FTPException in case of a FTP-specific error, or a NetException in case of a general network communication failure.

.. index:: pair: function; createDirectory
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aa7e8894a261f320a9d7fd6e7575dc3fd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	createDirectory(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path)

Creates a new directory with the given path on the server.

Sends a MKD command with path as argument to the server.

Throws a FTPException in case of a FTP-specific error, or a NetException in case of a general network communication failure.

.. index:: pair: function; removeDirectory
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1ab0364064c62bfc47e5997e271adfae09:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	removeDirectory(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path)

Removes the directory specified by path from the server.

Sends a RMD command with path as argument to the server.

Throws a FTPException in case of a FTP-specific error, or a NetException in case of a general network communication failure.

.. index:: pair: function; beginDownload
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a43def4a5622dff382d94a1acd4366562:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::istream&
	beginDownload(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path)

Starts downloading the file with the given name.

After all data has been read from the returned stream, :ref:`endDownload() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0d1361d39f4265e2175d71f7e3083d84>` must be called to finish the download.

A stream for reading the file's content is returned. The stream is valid until :ref:`endDownload() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0d1361d39f4265e2175d71f7e3083d84>` is called.

Creates a data connection between the client and the server. If passive mode is on, then the server waits for a connection request from the client. Otherwise, the client waits for a connection request from the server. After establishing the data connection, a :ref:`SocketStream <doxid-class_poco_1_1_net_1_1_socket_stream>` for transferring the data is created.

If ASCII transfer mode is selected, the caller is responsible for converting the received data to the native text file format. The :ref:`InputLineEndingConverter <doxid-class_poco_1_1_input_line_ending_converter>` class from the Foundation library can be used for that purpose.

.. index:: pair: function; endDownload
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0d1361d39f4265e2175d71f7e3083d84:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	endDownload()

Must be called to complete a download initiated with :ref:`beginDownload() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a43def4a5622dff382d94a1acd4366562>`.

.. index:: pair: function; beginUpload
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1af3d02a2f2bd1cd1b92d86f4c5d922743:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::ostream&
	beginUpload(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path)

Starts uploading the file with the given name.

After all data has been written to the returned stream, :ref:`endUpload() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a5d15afff839bbb86e4e26723642590c5>` must be called to finish the upload.

A stream for reading the file's content is returned. The stream is valid until :ref:`endUpload() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a5d15afff839bbb86e4e26723642590c5>` is called.

Creates a data connection between the client and the server. If passive mode is on, then the server waits for a connection request from the client. Otherwise, the client waits for a connection request from the server. After establishing the data connection, a :ref:`SocketStream <doxid-class_poco_1_1_net_1_1_socket_stream>` for transferring the data is created.

If ASCII transfer mode is selected, the caller is responsible for converting the data to be sent into network (CR-LF line endings) format. The :ref:`OutputLineEndingConverter <doxid-class_poco_1_1_output_line_ending_converter>` class from the Foundation library can be used for that purpose.

.. index:: pair: function; endUpload
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a5d15afff839bbb86e4e26723642590c5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	endUpload()

Must be called to complete an upload initiated with :ref:`beginUpload() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1af3d02a2f2bd1cd1b92d86f4c5d922743>`.

.. index:: pair: function; beginList
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aec9adf9d0b877fd50d480d7de9092bff:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::istream&
	beginList(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path = "",
		bool extended = false
		)

Starts downloading a directory listing.

After all data has been read from the returned stream, :ref:`endList() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aa1eab2a29fbdd3cf4904a6aff9a4465d>` must be called to finish the download.

A stream for reading the directory data is returned. The stream is valid until :ref:`endList() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aa1eab2a29fbdd3cf4904a6aff9a4465d>` is called.

Optionally, a path to a directory or file can be specified. According to the FTP protocol, if a path to a filename is given, only information for the specific file is returned. If a path to a directory is given, a listing of that directory is returned. If no path is given, a listing of the current working directory is returned.

If extended is false, only a filenames (one per line) are returned. Otherwise, a full directory listing including file attributes is returned. The format of this listing depends on the FTP server. No attempt is made to interpret this data.

Creates a data connection between the client and the server. If passive mode is on, then the server waits for a connection request from the client. Otherwise, the client waits for a connection request from the server. After establishing the data connection, a :ref:`SocketStream <doxid-class_poco_1_1_net_1_1_socket_stream>` for transferring the data is created.

.. index:: pair: function; endList
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aa1eab2a29fbdd3cf4904a6aff9a4465d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	endList()

Must be called to complete a directory listing download initiated with :ref:`beginList() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aec9adf9d0b877fd50d480d7de9092bff>`.

.. index:: pair: function; abort
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1aefd547e381a594fb9175af899388fbd4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	abort()

Aborts the download or upload currently in progress.

Sends a TELNET IP/SYNCH sequence, followed by an ABOR command to the server.

A separate call to :ref:`endDownload() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0d1361d39f4265e2175d71f7e3083d84>` or :ref:`endUpload() <doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a5d15afff839bbb86e4e26723642590c5>` is not necessary.

.. index:: pair: function; sendCommand
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a10e0e7eb19652d38d8171dabb5076c1c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	sendCommand(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& command,
		std::string& response
		)

Sends the given command verbatim to the server and waits for a response.

.. index:: pair: function; sendCommand
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a0fb6d67a7e3e732b58940a64dfa3bbab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	sendCommand(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& command,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& arg,
		std::string& response
		)

Sends the given command verbatim to the server and waits for a response.

.. index:: pair: function; isOpen
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1adcbd545f18ab66d34a3891f7d5a2fe1b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isOpen() const

Returns true if the connection with FTP server is opened.

.. index:: pair: function; isLoggedIn
.. _doxid-class_poco_1_1_net_1_1_f_t_p_client_session_1a75ecb7ddbd4c0438f882887ed4d7c5c3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isLoggedIn() const

Returns true if the session is logged in.

