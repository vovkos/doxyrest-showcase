.. index:: pair: class; Poco::Net::HTMLForm
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form:

class Poco::Net::HTMLForm
=========================

.. toctree::
	:hidden:

	struct_Poco_Net_HTMLForm_Part.rst

Overview
~~~~~~~~

:ref:`HTMLForm <doxid-class_poco_1_1_net_1_1_h_t_m_l_form>` is a helper class for working with HTML forms, both on the client and on the server side. :ref:`More...<details-class_poco_1_1_net_1_1_h_t_m_l_form>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <HTMLForm.h>
	
	class HTMLForm: public :ref:`Poco::Net::NameValueCollection<doxid-class_poco_1_1_net_1_1_name_value_collection>`
	{
	public:
		// structs
	
		struct :ref:`Part<doxid-struct_poco_1_1_net_1_1_h_t_m_l_form_1_1_part>`;

		// fields
	
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :ref:`ENCODING_URL<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1abc3ac0e0a068464c24269888d78d5f94>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :ref:`ENCODING_MULTIPART<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a04440fbe355e2708629e72ef078653ca>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` int :target:`UNKNOWN_CONTENT_LENGTH<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1afee3761d7b6dc03213f05610af039dc6>`;

		// construction
	
		:ref:`HTMLForm<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a44597a728d4a280c2ba3f295e1aa68ce>`();
		:ref:`HTMLForm<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a1a640893de9b5e94c25888952a5cca81>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& encoding);
	
		:ref:`HTMLForm<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a24f1fea93163e90a7ab77d68bebcc213>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
			std::istream& requestBody,
			:ref:`PartHandler<doxid-class_poco_1_1_net_1_1_part_handler>`& handler
			);
	
		:ref:`HTMLForm<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1aa810ee686de35ab3db3420cbdcd555f7>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
			std::istream& requestBody
			);
	
		:ref:`HTMLForm<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ae5e59e73c58802b846a9ade78a1d5830>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request);

		// methods
	
		void
		:ref:`setEncoding<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ae9610600c77ea0cd0b7652684df02db1>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& encoding);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`getEncoding<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a2496cc8ebf375cd0f701761c715e1229>`() const;
	
		void
		:ref:`addPart<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1aa3c7175b7ee1f7ef3f55b3b1d769b84b>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`PartSource<doxid-class_poco_1_1_net_1_1_part_source>`* pSource
			);
	
		void
		:ref:`load<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a9bb9d52f7430cd9151310688542d2567>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
			std::istream& requestBody,
			:ref:`PartHandler<doxid-class_poco_1_1_net_1_1_part_handler>`& handler
			);
	
		void
		:ref:`load<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a8f68bb1d05117ad2b2077831d179c74d>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
			std::istream& requestBody
			);
	
		void
		:ref:`load<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a7a011447ac280c807d9d785e2c0a8a44>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request);
	
		void
		:ref:`read<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac5a56ea1442297c8dc5957dd1196c92c>`(
			std::istream& istr,
			:ref:`PartHandler<doxid-class_poco_1_1_net_1_1_part_handler>`& handler
			);
	
		void
		:ref:`read<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1abf5eeed42338ea98ccd6a3fe77056e59>`(std::istream& istr);
	
		void
		:ref:`read<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a63170def8ac96e09adb22e1c1527a4b3>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& queryString);
	
		void
		:ref:`prepareSubmit<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1abc930975c90c8aa35a0480d8b3a0d87c>`(:ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request);
	
		std::streamsize
		:ref:`calculateContentLength<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac389fa2a302526f847c97634d7a8a0b6>`();
	
		void
		:ref:`write<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a8444e5cb772fac8042cbff61a15366f6>`(
			std::ostream& ostr,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& boundary
			);
	
		void
		:ref:`write<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1aa7ecf874e0cee23cb911600d3da12f6f>`(std::ostream& ostr);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`boundary<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a26669d3e494f1367f6919b7def3559df>`() const;
	
		int
		:ref:`getFieldLimit<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ad906c22da12b809cf907de149579886a>`() const;
	
		void
		:ref:`setFieldLimit<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac0a9d033414aeb64b09d14e79fe17f77>`(int limit);
	
		void
		:ref:`setValueLengthLimit<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac27de25ca78ccaa20bcadabff05ea653>`(int limit);
	
		int
		:ref:`getValueLengthLimit<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1af4d8e67239118f1a17ab84245f1ad71b>`() const;

	protected:
		// methods
	
		void
		:target:`readUrl<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ad31b2dacb438e71cf95ba6ba25fadb83>`(std::istream& istr);
	
		void
		:target:`readMultipart<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ab4c4a5a839fc95356e43b3b222aa3cf0>`(
			std::istream& istr,
			:ref:`PartHandler<doxid-class_poco_1_1_net_1_1_part_handler>`& handler
			);
	
		void
		:target:`writeUrl<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1af558a5a62de749d9a64fdd4ebee24d04>`(std::ostream& ostr);
	
		void
		:target:`writeMultipart<doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1acaf2c1dad2b8f42e05d8784b2d858ac0>`(std::ostream& ostr);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// typedefs
	
		typedef :ref:`Poco::ListMap<doxid-class_poco_1_1_list_map>`<std::string, std::string> :ref:`HeaderMap<doxid-class_poco_1_1_net_1_1_name_value_collection_1a889018fb1c0aae12c1e7de4b47389a7e>`;
		typedef :ref:`HeaderMap::Iterator<doxid-class_poco_1_1_list_map_1ac24980819d69f5d97fa815fe37ed0eb3>` :ref:`Iterator<doxid-class_poco_1_1_net_1_1_name_value_collection_1ac919f49e1d364d95eea68af7e4eb1617>`;
		typedef :ref:`HeaderMap::ConstIterator<doxid-class_poco_1_1_list_map_1aa63760ba80d6b2762e692f244ff180eb>` :ref:`ConstIterator<doxid-class_poco_1_1_net_1_1_name_value_collection_1a61f0e090f5550e4e4f6629f5717ab92f>`;

		// methods
	
		:ref:`NameValueCollection<doxid-class_poco_1_1_net_1_1_name_value_collection>`&
		:ref:`operator=<doxid-class_poco_1_1_net_1_1_name_value_collection_1acdcc7227132ff791e43d09d751d294fb>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`NameValueCollection<doxid-class_poco_1_1_net_1_1_name_value_collection>`& nvc);
	
		void
		:ref:`swap<doxid-class_poco_1_1_net_1_1_name_value_collection_1a215af88f41d3f58765b65103bd760919>`(:ref:`NameValueCollection<doxid-class_poco_1_1_net_1_1_name_value_collection>`& nvc);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`operator[]<doxid-class_poco_1_1_net_1_1_name_value_collection_1a7ef53b6192a14918496819280d25bff6>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;
	
		void
		:ref:`set<doxid-class_poco_1_1_net_1_1_name_value_collection_1a319a17ee26c18f9e83f8d6485104689d>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			);
	
		void
		:ref:`add<doxid-class_poco_1_1_net_1_1_name_value_collection_1a76e89d818b51c20841e5665487b62819>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`get<doxid-class_poco_1_1_net_1_1_name_value_collection_1a5294bc8a258aa595a8cc65815e8d0fbb>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`get<doxid-class_poco_1_1_net_1_1_name_value_collection_1a45e26a4bf08146aedf3067bdc207faff>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& defaultValue
			) const;
	
		bool
		:ref:`has<doxid-class_poco_1_1_net_1_1_name_value_collection_1a43d15e0244fa45ccaa8ae003aee2b9b8>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;
	
		:ref:`ConstIterator<doxid-class_poco_1_1_net_1_1_name_value_collection_1a61f0e090f5550e4e4f6629f5717ab92f>`
		:ref:`find<doxid-class_poco_1_1_net_1_1_name_value_collection_1a591bbb5552626f58bcf1d1c463476110>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;
	
		:ref:`ConstIterator<doxid-class_poco_1_1_net_1_1_name_value_collection_1a61f0e090f5550e4e4f6629f5717ab92f>`
		:ref:`begin<doxid-class_poco_1_1_net_1_1_name_value_collection_1a5406b45214d097281ee156c37c70341a>`() const;
	
		:ref:`ConstIterator<doxid-class_poco_1_1_net_1_1_name_value_collection_1a61f0e090f5550e4e4f6629f5717ab92f>`
		:ref:`end<doxid-class_poco_1_1_net_1_1_name_value_collection_1aa17a41875ec189a312d7353227f3a37f>`() const;
	
		bool
		:ref:`empty<doxid-class_poco_1_1_net_1_1_name_value_collection_1a28746ec396b429539754ad62e0f3e181>`() const;
	
		std::size_t
		:ref:`size<doxid-class_poco_1_1_net_1_1_name_value_collection_1a74d1b4eaf947b93117eb1c870a683195>`() const;
	
		void
		:ref:`erase<doxid-class_poco_1_1_net_1_1_name_value_collection_1abd0275666a498fc251ef56acfe70a43a>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name);
	
		void
		:ref:`clear<doxid-class_poco_1_1_net_1_1_name_value_collection_1a2cb59fd68c3c27f7d50634a1849d64c4>`();

.. _details-class_poco_1_1_net_1_1_h_t_m_l_form:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

:ref:`HTMLForm <doxid-class_poco_1_1_net_1_1_h_t_m_l_form>` is a helper class for working with HTML forms, both on the client and on the server side.

The maximum number of form fields can be restricted by calling :ref:`setFieldLimit() <doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac0a9d033414aeb64b09d14e79fe17f77>`. This is useful to defend against certain kinds of denial-of-service attacks. The limit is only enforced when parsing form data from a stream or string, not when adding form fields programmatically. The default limit is 100.

Fields
------

.. index:: pair: variable; ENCODING_URL
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1abc3ac0e0a068464c24269888d78d5f94:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string ENCODING_URL

"application/x-www-form-urlencoded"

.. index:: pair: variable; ENCODING_MULTIPART
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a04440fbe355e2708629e72ef078653ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string ENCODING_MULTIPART

"multipart/form-data"

Construction
------------

.. index:: pair: function; HTMLForm
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a44597a728d4a280c2ba3f295e1aa68ce:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HTMLForm()

Creates an empty :ref:`HTMLForm <doxid-class_poco_1_1_net_1_1_h_t_m_l_form>` and sets the encoding to "application/x-www-form-urlencoded".

.. index:: pair: function; HTMLForm
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a1a640893de9b5e94c25888952a5cca81:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HTMLForm(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& encoding)

Creates an empty :ref:`HTMLForm <doxid-class_poco_1_1_net_1_1_h_t_m_l_form>` that uses the given encoding.

Encoding must be either "application/x-www-form-urlencoded" (which is the default) or "multipart/form-data".

.. index:: pair: function; HTMLForm
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a24f1fea93163e90a7ab77d68bebcc213:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HTMLForm(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
		std::istream& requestBody,
		:ref:`PartHandler<doxid-class_poco_1_1_net_1_1_part_handler>`& handler
		)

Creates a :ref:`HTMLForm <doxid-class_poco_1_1_net_1_1_h_t_m_l_form>` from the given HTTP request.

Uploaded files are passed to the given :ref:`PartHandler <doxid-class_poco_1_1_net_1_1_part_handler>`.

.. index:: pair: function; HTMLForm
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1aa810ee686de35ab3db3420cbdcd555f7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HTMLForm(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
		std::istream& requestBody
		)

Creates a :ref:`HTMLForm <doxid-class_poco_1_1_net_1_1_h_t_m_l_form>` from the given HTTP request.

Uploaded files are silently discarded.

.. index:: pair: function; HTMLForm
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ae5e59e73c58802b846a9ade78a1d5830:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HTMLForm(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request)

Creates a :ref:`HTMLForm <doxid-class_poco_1_1_net_1_1_h_t_m_l_form>` from the given HTTP request.

The request must be a GET request and the form data must be in the query string (URL encoded).

For POST requests, you must use one of the constructors taking an additional input stream for the request body.

Methods
-------

.. index:: pair: function; setEncoding
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ae9610600c77ea0cd0b7652684df02db1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setEncoding(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& encoding)

Sets the encoding used for posting the form.

Encoding must be either "application/x-www-form-urlencoded" (which is the default) or "multipart/form-data".

.. index:: pair: function; getEncoding
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a2496cc8ebf375cd0f701761c715e1229:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
	getEncoding() const

Returns the encoding used for posting the form.

.. index:: pair: function; addPart
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1aa3c7175b7ee1f7ef3f55b3b1d769b84b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	addPart(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
		:ref:`PartSource<doxid-class_poco_1_1_net_1_1_part_source>`* pSource
		)

Adds an part/attachment (file upload) to the form.

The form takes ownership of the :ref:`PartSource <doxid-class_poco_1_1_net_1_1_part_source>` and deletes it when it is no longer needed.

The part will only be sent if the encoding set for the form is "multipart/form-data"

.. index:: pair: function; load
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a9bb9d52f7430cd9151310688542d2567:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	load(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
		std::istream& requestBody,
		:ref:`PartHandler<doxid-class_poco_1_1_net_1_1_part_handler>`& handler
		)

Reads the form data from the given HTTP request.

Uploaded files are passed to the given :ref:`PartHandler <doxid-class_poco_1_1_net_1_1_part_handler>`.

.. index:: pair: function; load
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a8f68bb1d05117ad2b2077831d179c74d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	load(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
		std::istream& requestBody
		)

Reads the form data from the given HTTP request.

Uploaded files are silently discarded.

.. index:: pair: function; load
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a7a011447ac280c807d9d785e2c0a8a44:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	load(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request)

Reads the form data from the given HTTP request.

The request must be a GET request and the form data must be in the query string (URL encoded).

For POST requests, you must use one of the overloads taking an additional input stream for the request body.

.. index:: pair: function; read
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac5a56ea1442297c8dc5957dd1196c92c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	read(
		std::istream& istr,
		:ref:`PartHandler<doxid-class_poco_1_1_net_1_1_part_handler>`& handler
		)

Reads the form data from the given input stream.

The form data read from the stream must be in the encoding specified for the form.

Note that :ref:`read() <doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac5a56ea1442297c8dc5957dd1196c92c>` does not clear the form before reading the new values.

.. index:: pair: function; read
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1abf5eeed42338ea98ccd6a3fe77056e59:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	read(std::istream& istr)

Reads the URL-encoded form data from the given input stream.

Note that :ref:`read() <doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac5a56ea1442297c8dc5957dd1196c92c>` does not clear the form before reading the new values.

.. index:: pair: function; read
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a63170def8ac96e09adb22e1c1527a4b3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	read(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& queryString)

Reads the form data from the given HTTP query string.

Note that :ref:`read() <doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac5a56ea1442297c8dc5957dd1196c92c>` does not clear the form before reading the new values.

.. index:: pair: function; prepareSubmit
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1abc930975c90c8aa35a0480d8b3a0d87c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	prepareSubmit(:ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request)

Fills out the request object for submitting the form.

If the request method is GET, the encoded form is appended to the request :ref:`URI <doxid-class_poco_1_1_u_r_i>` as query string. Otherwise (the method is POST), the form's content type is set to the form's encoding. The form's parameters must be written to the request body separately, with a call to write. If the request's HTTP version is HTTP/1.0:

.. ref-code-block:: cpp

	- persistent connections are disabled
	- the content transfer encoding is set to identity encoding

Otherwise, if the request's HTTP version is HTTP/1.1:

.. ref-code-block:: cpp

	- the request's persistent connection state is left unchanged
	- the content transfer encoding is set to chunked

.. index:: pair: function; calculateContentLength
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac389fa2a302526f847c97634d7a8a0b6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::streamsize
	calculateContentLength()

Calculate the content length for the form.

May be UNKNOWN_CONTENT_LENGTH if not possible to calculate

.. index:: pair: function; write
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a8444e5cb772fac8042cbff61a15366f6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	write(
		std::ostream& ostr,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& boundary
		)

Writes the form data to the given output stream, using the specified encoding.

.. index:: pair: function; write
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1aa7ecf874e0cee23cb911600d3da12f6f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	write(std::ostream& ostr)

Writes the form data to the given output stream, using the specified encoding.

.. index:: pair: function; boundary
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1a26669d3e494f1367f6919b7def3559df:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
	boundary() const

Returns the MIME boundary used for writing multipart form data.

.. index:: pair: function; getFieldLimit
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ad906c22da12b809cf907de149579886a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	getFieldLimit() const

Returns the maximum number of header fields allowed.

See :ref:`setFieldLimit() <doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac0a9d033414aeb64b09d14e79fe17f77>` for more information.

.. index:: pair: function; setFieldLimit
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac0a9d033414aeb64b09d14e79fe17f77:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setFieldLimit(int limit)

Sets the maximum number of header fields allowed.

This limit is used to defend certain kinds of denial-of-service attacks. Specify 0 for unlimited (not recommended).

The default limit is 100.

.. index:: pair: function; setValueLengthLimit
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1ac27de25ca78ccaa20bcadabff05ea653:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setValueLengthLimit(int limit)

Sets the maximum size for form field values stored as strings.

.. index:: pair: function; getValueLengthLimit
.. _doxid-class_poco_1_1_net_1_1_h_t_m_l_form_1af4d8e67239118f1a17ab84245f1ad71b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	getValueLengthLimit() const

Returns the maximum size for form field values stored as strings.

