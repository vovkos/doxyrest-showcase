.. index:: pair: class; Poco::Net::HTTPCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials:

class Poco::Net::HTTPCredentials
================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This is a utility class for working with HTTP authentication (basic or digest) in :ref:`HTTPRequest <doxid-class_poco_1_1_net_1_1_h_t_t_p_request>` objects. :ref:`More...<details-class_poco_1_1_net_1_1_h_t_t_p_credentials>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <HTTPCredentials.h>
	
	class HTTPCredentials
	{
	public:
		// construction
	
		:ref:`HTTPCredentials<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1adfb9efbd96100d448978851a828bff07>`();
	
		:ref:`HTTPCredentials<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1ad220c37a0508a7723fc98135193e685d>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& username,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& password
			);

		// methods
	
		void
		:ref:`fromUserInfo<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a241dbf59d42c16ab76120403e96b9709>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& userInfo);
	
		void
		:ref:`fromURI<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a9b525ec434d5bcb5b3de02f8a887f027>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`URI<doxid-class_poco_1_1_u_r_i>`& uri);
	
		void
		:ref:`setUsername<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a280487bbbfc5f8f4c01873f60b0e3c34>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& username);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`getUsername<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a8bb243d4abd6dbeece26984e1c52867b>`() const;
	
		void
		:ref:`setPassword<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a3e5dbe32c1d365e16291c19d48f21a4a>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& password);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`getPassword<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a16576e834362babaa0eb6038bb5164f4>`() const;
	
		void
		:ref:`authenticate<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1aa6d3808b0d1faf6cbe29c4f460615839>`(
			:ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPResponse<doxid-class_poco_1_1_net_1_1_h_t_t_p_response>`& response
			);
	
		void
		:ref:`updateAuthInfo<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a051d97a10c65ea6a9e37258ed6064246>`(:ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request);
	
		void
		:ref:`proxyAuthenticate<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a124d8470637d9eca76445b52c9980d49>`(
			:ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPResponse<doxid-class_poco_1_1_net_1_1_h_t_t_p_response>`& response
			);
	
		void
		:ref:`updateProxyAuthInfo<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a0327c764051797684818db6dbb0f3ebe>`(:ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request);
	
		static
		bool
		:ref:`isBasicCredentials<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1ad23514646b3bafea8572e9f054038266>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& header);
	
		static
		bool
		:ref:`isDigestCredentials<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a6b4217f92da22dbaa02dd2d676a6db77>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& header);
	
		static
		bool
		:ref:`hasBasicCredentials<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1abadbff2042e9e5c69c59bd384093e159>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request);
	
		static
		bool
		:ref:`hasDigestCredentials<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a7c2633cae2692876641c878cb382a4af>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request);
	
		static
		bool
		:ref:`hasProxyBasicCredentials<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1ad2b98d0d753b92252dca763c2d65f16e>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request);
	
		static
		bool
		:ref:`hasProxyDigestCredentials<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a30e435b70e656ac600e6b03b44c7ae2c>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request);
	
		static
		void
		:ref:`extractCredentials<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a91dc6f1e4b7522fb27829ac8897d6a17>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& userInfo,
			std::string& username,
			std::string& password
			);
	
		static
		void
		:ref:`extractCredentials<doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a2a3ce4a297c4e6444fd6aa0a0f6439c8>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Poco::URI<doxid-class_poco_1_1_u_r_i>`& uri,
			std::string& username,
			std::string& password
			);
	};
.. _details-class_poco_1_1_net_1_1_h_t_t_p_credentials:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This is a utility class for working with HTTP authentication (basic or digest) in :ref:`HTTPRequest <doxid-class_poco_1_1_net_1_1_h_t_t_p_request>` objects.

Usage is as follows: First, create a :ref:`HTTPCredentials <doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials>` object containing the username and password.

.. ref-code-block:: cpp

	Poco::Net::HTTPCredentials creds("user", "s3cr3t");

Second, send the HTTP request with :ref:`Poco::Net::HTTPClientSession <doxid-class_poco_1_1_net_1_1_h_t_t_p_client_session>`.

.. ref-code-block:: cpp

	Poco::Net::HTTPClientSession session("pocoproject.org");
	Poco::Net::HTTPRequest request(HTTPRequest::HTTP_GET, "/index.html", HTTPMessage::HTTP_1_1);
	session.sendRequest(request);
	Poco::Net::HTTPResponse;
	std::istream& istr = session.receiveResponse(response);

If the server responds with a 401 status, authenticate the request and resend it:

.. ref-code-block:: cpp

	if (response.getStatus() == Poco::Net::HTTPResponse::HTTP_UNAUTHORIZED)
	{
	    creds.authenticate(request, response);
	    session.sendRequest(request);
	    ...
	}

To perform multiple authenticated requests, call :ref:`updateAuthInfo() <doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a051d97a10c65ea6a9e37258ed6064246>` instead of :ref:`authenticate() <doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1aa6d3808b0d1faf6cbe29c4f460615839>` on subsequent requests.

.. ref-code-block:: cpp

	creds.updateAuthInfo(request);
	session.sendRequest(request);
	...

Note: Do not forget to read the entire response stream from the 401 response before sending the authenticated request, otherwise there may be problems if a persistent connection is used.

Construction
------------

.. index:: pair: function; HTTPCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1adfb9efbd96100d448978851a828bff07:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HTTPCredentials()

Creates an empty :ref:`HTTPCredentials <doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials>` object.

.. index:: pair: function; HTTPCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1ad220c37a0508a7723fc98135193e685d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HTTPCredentials(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& username,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& password
		)

Creates an :ref:`HTTPCredentials <doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials>` object with the given username and password.

Methods
-------

.. index:: pair: function; fromUserInfo
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a241dbf59d42c16ab76120403e96b9709:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	fromUserInfo(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& userInfo)

Parses username:password string and sets username and password of the credentials object.

Throws SyntaxException on invalid user information.

.. index:: pair: function; fromURI
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a9b525ec434d5bcb5b3de02f8a887f027:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	fromURI(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`URI<doxid-class_poco_1_1_u_r_i>`& uri)

Extracts username and password from the given :ref:`URI <doxid-class_poco_1_1_u_r_i>` and sets username and password of the credentials object.

Does nothing if :ref:`URI <doxid-class_poco_1_1_u_r_i>` has no user info part.

.. index:: pair: function; setUsername
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a280487bbbfc5f8f4c01873f60b0e3c34:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setUsername(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& username)

Sets the username.

.. index:: pair: function; getUsername
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a8bb243d4abd6dbeece26984e1c52867b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
	getUsername() const

Returns the username.

.. index:: pair: function; setPassword
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a3e5dbe32c1d365e16291c19d48f21a4a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setPassword(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& password)

Sets the password.

.. index:: pair: function; getPassword
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a16576e834362babaa0eb6038bb5164f4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
	getPassword() const

Returns the password.

.. index:: pair: function; authenticate
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1aa6d3808b0d1faf6cbe29c4f460615839:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	authenticate(
		:ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPResponse<doxid-class_poco_1_1_net_1_1_h_t_t_p_response>`& response
		)

Inspects WWW-Authenticate header of the response, initializes the internal state (in case of digest authentication) and adds required information to the given :ref:`HTTPRequest <doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`.

Does nothing if there is no WWW-Authenticate header in the :ref:`HTTPResponse <doxid-class_poco_1_1_net_1_1_h_t_t_p_response>`.

.. index:: pair: function; updateAuthInfo
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a051d97a10c65ea6a9e37258ed6064246:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	updateAuthInfo(:ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request)

Updates internal state (in case of digest authentication) and replaces authentication information in the request accordingly.

.. index:: pair: function; proxyAuthenticate
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a124d8470637d9eca76445b52c9980d49:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	proxyAuthenticate(
		:ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPResponse<doxid-class_poco_1_1_net_1_1_h_t_t_p_response>`& response
		)

Inspects Proxy-Authenticate header of the response, initializes the internal state (in case of digest authentication) and adds required information to the given :ref:`HTTPRequest <doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`.

Does nothing if there is no Proxy-Authenticate header in the :ref:`HTTPResponse <doxid-class_poco_1_1_net_1_1_h_t_t_p_response>`.

.. index:: pair: function; updateProxyAuthInfo
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a0327c764051797684818db6dbb0f3ebe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	updateProxyAuthInfo(:ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request)

Updates internal state (in case of digest authentication) and replaces proxy authentication information in the request accordingly.

.. index:: pair: function; isBasicCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1ad23514646b3bafea8572e9f054038266:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	isBasicCredentials(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& header)

Returns true if authentication header is for Basic authentication.

.. index:: pair: function; isDigestCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a6b4217f92da22dbaa02dd2d676a6db77:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	isDigestCredentials(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& header)

Returns true if authentication header is for Digest authentication.

.. index:: pair: function; hasBasicCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1abadbff2042e9e5c69c59bd384093e159:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	hasBasicCredentials(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request)

Returns true if Authorization with Basic credentials header is present in the request.

.. index:: pair: function; hasDigestCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a7c2633cae2692876641c878cb382a4af:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	hasDigestCredentials(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request)

Returns true if Authorization with Digest credentials header is present in the request.

.. index:: pair: function; hasProxyBasicCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1ad2b98d0d753b92252dca763c2d65f16e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	hasProxyBasicCredentials(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request)

Returns true if Authorization with Basic credentials header is present in the request.

.. index:: pair: function; hasProxyDigestCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a30e435b70e656ac600e6b03b44c7ae2c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	hasProxyDigestCredentials(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`& request)

Returns true if Authorization with Digest credentials header is present in the request.

.. index:: pair: function; extractCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a91dc6f1e4b7522fb27829ac8897d6a17:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	void
	extractCredentials(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& userInfo,
		std::string& username,
		std::string& password
		)

Extracts username and password from user:password information string.

.. index:: pair: function; extractCredentials
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_credentials_1a2a3ce4a297c4e6444fd6aa0a0f6439c8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	void
	extractCredentials(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Poco::URI<doxid-class_poco_1_1_u_r_i>`& uri,
		std::string& username,
		std::string& password
		)

Extracts username and password from the given :ref:`URI <doxid-class_poco_1_1_u_r_i>` (e.g.: "http://user:pass@sample.com/secret").

