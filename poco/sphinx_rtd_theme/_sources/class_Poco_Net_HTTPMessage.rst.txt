.. index:: pair: class; Poco::Net::HTTPMessage
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message:

class Poco::Net::HTTPMessage
============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

The base class for :ref:`HTTPRequest <doxid-class_poco_1_1_net_1_1_h_t_t_p_request>` and :ref:`HTTPResponse <doxid-class_poco_1_1_net_1_1_h_t_t_p_response>`. :ref:`More...<details-class_poco_1_1_net_1_1_h_t_t_p_message>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <HTTPMessage.h>
	
	class HTTPMessage: public :ref:`Poco::Net::MessageHeader<doxid-class_poco_1_1_net_1_1_message_header>`
	{
	public:
		// fields
	
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`HTTP_1_0<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1aa8518d3ed4292aa9554e90d67383cc1f>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`HTTP_1_1<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a96b4e071550fa6c2b94df6c3b70b5776>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`IDENTITY_TRANSFER_ENCODING<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1af1682e967b5fb82f30fa6ab59d63dd51>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`CHUNKED_TRANSFER_ENCODING<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a0eae8fcc488f6a433e20faab782608f6>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` int :target:`UNKNOWN_CONTENT_LENGTH<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a59f1d3fe018df7032ba5ad12b3fa2df7>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`UNKNOWN_CONTENT_TYPE<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1af68b0ee268b29ed7345258603c77855d>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`CONTENT_LENGTH<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a1db82de4cbf577825f5f4c8ea5cb25b7>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`CONTENT_TYPE<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1afb6709c2d4da0c638e7fca9fac51b6b0>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`TRANSFER_ENCODING<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1ae969438a15ccd30f7a730d5b817d6cec>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`CONNECTION<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1adffc63433be58d4753595a3186d9c83e>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`CONNECTION_KEEP_ALIVE<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1afb2d9cd79714758b012efa8d552fd639>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`CONNECTION_CLOSE<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a33660f5d7341931d9ab73b4a7e133199>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`EMPTY<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a0a975122c108fdc7593582091ba173f5>`;

		// methods
	
		void
		:ref:`setVersion<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1aff34856bede989e3c35914db38bc99ac>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& version);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`getVersion<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a4e2506b83f65dacc874f1fa5be5d4bf3>`() const;
	
		void
		:ref:`setContentLength<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1adda1069052ef886cf558f7475d7ca2d0>`(std::streamsize length);
	
		std::streamsize
		:ref:`getContentLength<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a8729fed76355288c8283edc383fc6d4a>`() const;
	
		bool
		:ref:`hasContentLength<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a9b06a2a81ed8be1dc287ea9bd8ba690e>`() const;
	
		void
		:ref:`setTransferEncoding<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a24455f8443ded28d3fabcd4b13edd4e7>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& transferEncoding);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`getTransferEncoding<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a12ea6abe3004c087e0773b04a4f4bbb7>`() const;
	
		void
		:ref:`setChunkedTransferEncoding<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a917182ec69610e135649bbe42a431820>`(bool flag);
	
		bool
		:ref:`getChunkedTransferEncoding<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1adaf640b40f718a35acc5364b11240b06>`() const;
	
		void
		:ref:`setContentType<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a06acfe37967f7e92c4c4db5e85883f73>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& mediaType);
	
		void
		:ref:`setContentType<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1aaa9e580a6a36d82df60357cc9fab6958>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` MediaType& mediaType);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`getContentType<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1acebacbeb3fa54678b547f12db3ce4af6>`() const;
	
		void
		:ref:`setKeepAlive<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a4b90855ffac4417b9f54f16fffa9dfe0>`(bool keepAlive);
	
		bool
		:ref:`getKeepAlive<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1add53dd49a3f016e048d0fb25d809c918>`() const;

	protected:
		// construction
	
		:ref:`HTTPMessage<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1abe8602366587dd686288b2e2e1d5781a>`();
		:ref:`HTTPMessage<doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a95046c6d538998ee96ad5f974c310b6f>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& version);
	};

	// direct descendants

	class :ref:`HTTPRequest<doxid-class_poco_1_1_net_1_1_h_t_t_p_request>`;
	class :ref:`HTTPResponse<doxid-class_poco_1_1_net_1_1_h_t_t_p_response>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// typedefs
	
		typedef :ref:`Poco::ListMap<doxid-class_poco_1_1_list_map>`<std::string, std::string> :ref:`HeaderMap<doxid-class_poco_1_1_net_1_1_name_value_collection_1a889018fb1c0aae12c1e7de4b47389a7e>`;
		typedef :ref:`HeaderMap::Iterator<doxid-class_poco_1_1_list_map_1ac24980819d69f5d97fa815fe37ed0eb3>` :ref:`Iterator<doxid-class_poco_1_1_net_1_1_name_value_collection_1ac919f49e1d364d95eea68af7e4eb1617>`;
		typedef :ref:`HeaderMap::ConstIterator<doxid-class_poco_1_1_list_map_1aa63760ba80d6b2762e692f244ff180eb>` :ref:`ConstIterator<doxid-class_poco_1_1_net_1_1_name_value_collection_1a61f0e090f5550e4e4f6629f5717ab92f>`;

		// methods
	
		:ref:`NameValueCollection<doxid-class_poco_1_1_net_1_1_name_value_collection>`&
		:ref:`operator=<doxid-class_poco_1_1_net_1_1_name_value_collection_1acdcc7227132ff791e43d09d751d294fb>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`NameValueCollection<doxid-class_poco_1_1_net_1_1_name_value_collection>`& nvc);
	
		void
		:ref:`swap<doxid-class_poco_1_1_net_1_1_name_value_collection_1a215af88f41d3f58765b65103bd760919>`(:ref:`NameValueCollection<doxid-class_poco_1_1_net_1_1_name_value_collection>`& nvc);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`operator[]<doxid-class_poco_1_1_net_1_1_name_value_collection_1a7ef53b6192a14918496819280d25bff6>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;
	
		void
		:ref:`set<doxid-class_poco_1_1_net_1_1_name_value_collection_1a319a17ee26c18f9e83f8d6485104689d>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			);
	
		void
		:ref:`add<doxid-class_poco_1_1_net_1_1_name_value_collection_1a76e89d818b51c20841e5665487b62819>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`get<doxid-class_poco_1_1_net_1_1_name_value_collection_1a5294bc8a258aa595a8cc65815e8d0fbb>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`get<doxid-class_poco_1_1_net_1_1_name_value_collection_1a45e26a4bf08146aedf3067bdc207faff>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& defaultValue
			) const;
	
		bool
		:ref:`has<doxid-class_poco_1_1_net_1_1_name_value_collection_1a43d15e0244fa45ccaa8ae003aee2b9b8>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;
	
		:ref:`ConstIterator<doxid-class_poco_1_1_net_1_1_name_value_collection_1a61f0e090f5550e4e4f6629f5717ab92f>`
		:ref:`find<doxid-class_poco_1_1_net_1_1_name_value_collection_1a591bbb5552626f58bcf1d1c463476110>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;
	
		:ref:`ConstIterator<doxid-class_poco_1_1_net_1_1_name_value_collection_1a61f0e090f5550e4e4f6629f5717ab92f>`
		:ref:`begin<doxid-class_poco_1_1_net_1_1_name_value_collection_1a5406b45214d097281ee156c37c70341a>`() const;
	
		:ref:`ConstIterator<doxid-class_poco_1_1_net_1_1_name_value_collection_1a61f0e090f5550e4e4f6629f5717ab92f>`
		:ref:`end<doxid-class_poco_1_1_net_1_1_name_value_collection_1aa17a41875ec189a312d7353227f3a37f>`() const;
	
		bool
		:ref:`empty<doxid-class_poco_1_1_net_1_1_name_value_collection_1a28746ec396b429539754ad62e0f3e181>`() const;
	
		std::size_t
		:ref:`size<doxid-class_poco_1_1_net_1_1_name_value_collection_1a74d1b4eaf947b93117eb1c870a683195>`() const;
	
		void
		:ref:`erase<doxid-class_poco_1_1_net_1_1_name_value_collection_1abd0275666a498fc251ef56acfe70a43a>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name);
	
		void
		:ref:`clear<doxid-class_poco_1_1_net_1_1_name_value_collection_1a2cb59fd68c3c27f7d50634a1849d64c4>`();
	
		:ref:`MessageHeader<doxid-class_poco_1_1_net_1_1_message_header>`&
		:ref:`operator=<doxid-class_poco_1_1_net_1_1_message_header_1a8eb761b5720dacd8672f91e707f6e0c6>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`MessageHeader<doxid-class_poco_1_1_net_1_1_message_header>`& messageHeader);
	
		virtual
		void
		:ref:`write<doxid-class_poco_1_1_net_1_1_message_header_1a17d364fb83f557d453465a33143ef220>`(std::ostream& ostr) const;
	
		virtual
		void
		:ref:`read<doxid-class_poco_1_1_net_1_1_message_header_1aabf5802666bb656970cb2a44bd5f2e57>`(std::istream& istr);
	
		int
		:ref:`getFieldLimit<doxid-class_poco_1_1_net_1_1_message_header_1a90c47c2992a6444acb38f4333af6c014>`() const;
	
		void
		:ref:`setFieldLimit<doxid-class_poco_1_1_net_1_1_message_header_1a6bc78e56e2faa12781407fe2ef1f39f8>`(int limit);
	
		bool
		:ref:`hasToken<doxid-class_poco_1_1_net_1_1_message_header_1afc391d288b7d829ac47b6c3dbfff9e98>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& fieldName,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& token
			) const;
	
		static
		void
		:ref:`splitElements<doxid-class_poco_1_1_net_1_1_message_header_1a669e1ac2c689e9d7d454e54868ffb80b>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			std::vector<std::string>& elements,
			bool ignoreEmpty = true
			);
	
		static
		void
		:ref:`splitParameters<doxid-class_poco_1_1_net_1_1_message_header_1a73da407031c4cd73d62de3f52d10a675>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			std::string& value,
			:ref:`NameValueCollection<doxid-class_poco_1_1_net_1_1_name_value_collection>`& parameters
			);
	
		static
		void
		:ref:`splitParameters<doxid-class_poco_1_1_net_1_1_message_header_1af1a5c9177b17e6691ecb501a2e8bd4db>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string::const_iterator& begin,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string::const_iterator& end,
			:ref:`NameValueCollection<doxid-class_poco_1_1_net_1_1_name_value_collection>`& parameters
			);
	
		static
		void
		:ref:`quote<doxid-class_poco_1_1_net_1_1_message_header_1a54a24159534eb2122c91fde66af2533e>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value,
			std::string& result,
			bool allowSpace = false
			);

.. _details-class_poco_1_1_net_1_1_h_t_t_p_message:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

The base class for :ref:`HTTPRequest <doxid-class_poco_1_1_net_1_1_h_t_t_p_request>` and :ref:`HTTPResponse <doxid-class_poco_1_1_net_1_1_h_t_t_p_response>`.

Defines the common properties of all HTTP messages. These are version, content length, content type and transfer encoding.

Construction
------------

.. index:: pair: function; HTTPMessage
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1abe8602366587dd686288b2e2e1d5781a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HTTPMessage()

Creates the :ref:`HTTPMessage <doxid-class_poco_1_1_net_1_1_h_t_t_p_message>` with version HTTP/1.0.

.. index:: pair: function; HTTPMessage
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a95046c6d538998ee96ad5f974c310b6f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	HTTPMessage(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& version)

Creates the :ref:`HTTPMessage <doxid-class_poco_1_1_net_1_1_h_t_t_p_message>` and sets the version.

Methods
-------

.. index:: pair: function; setVersion
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1aff34856bede989e3c35914db38bc99ac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setVersion(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& version)

Sets the HTTP version for this message.

.. index:: pair: function; getVersion
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a4e2506b83f65dacc874f1fa5be5d4bf3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
	getVersion() const

Returns the HTTP version for this message.

.. index:: pair: function; setContentLength
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1adda1069052ef886cf558f7475d7ca2d0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setContentLength(std::streamsize length)

Sets the Content-Length header.

If length is UNKNOWN_CONTENT_LENGTH, removes the Content-Length header.

.. index:: pair: function; getContentLength
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a8729fed76355288c8283edc383fc6d4a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::streamsize
	getContentLength() const

Returns the content length for this message, which may be UNKNOWN_CONTENT_LENGTH if no Content-Length header is present.

.. index:: pair: function; hasContentLength
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a9b06a2a81ed8be1dc287ea9bd8ba690e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	hasContentLength() const

Returns true iff a Content-Length header is present.

.. index:: pair: function; setTransferEncoding
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a24455f8443ded28d3fabcd4b13edd4e7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setTransferEncoding(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& transferEncoding)

Sets the transfer encoding for this message.

The value should be either IDENTITY_TRANSFER_CODING or CHUNKED_TRANSFER_CODING.

.. index:: pair: function; getTransferEncoding
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a12ea6abe3004c087e0773b04a4f4bbb7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
	getTransferEncoding() const

Returns the transfer encoding used for this message.

Normally, this is the value of the Transfer-Encoding header field. If no such field is present, returns IDENTITY_TRANSFER_CODING.

.. index:: pair: function; setChunkedTransferEncoding
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a917182ec69610e135649bbe42a431820:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setChunkedTransferEncoding(bool flag)

If flag is true, sets the Transfer-Encoding header to chunked.

Otherwise, removes the Transfer-Encoding header.

.. index:: pair: function; getChunkedTransferEncoding
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1adaf640b40f718a35acc5364b11240b06:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	getChunkedTransferEncoding() const

Returns true if the Transfer-Encoding header is set and its value is chunked.

.. index:: pair: function; setContentType
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a06acfe37967f7e92c4c4db5e85883f73:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setContentType(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& mediaType)

Sets the content type for this message.

Specify NO_CONTENT_TYPE to remove the Content-Type header.

.. index:: pair: function; setContentType
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1aaa9e580a6a36d82df60357cc9fab6958:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setContentType(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` MediaType& mediaType)

Sets the content type for this message.

.. index:: pair: function; getContentType
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1acebacbeb3fa54678b547f12db3ce4af6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
	getContentType() const

Returns the content type for this message.

If no Content-Type header is present, returns UNKNOWN_CONTENT_TYPE.

.. index:: pair: function; setKeepAlive
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1a4b90855ffac4417b9f54f16fffa9dfe0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setKeepAlive(bool keepAlive)

Sets the value of the Connection header field.

The value is set to "Keep-Alive" if keepAlive is true, or to "Close" otherwise.

.. index:: pair: function; getKeepAlive
.. _doxid-class_poco_1_1_net_1_1_h_t_t_p_message_1add53dd49a3f016e048d0fb25d809c918:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	getKeepAlive() const

Returns true if.

.. ref-code-block:: cpp

	* the message has a Connection header field and its value is "Keep-Alive"
	* the message is a HTTP/1.1 message and not Connection header is set

Returns false otherwise.

