.. index:: pair: class; Poco::Net::ICMPv4PacketImpl
.. _doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl:

class Poco::Net::ICMPv4PacketImpl
=================================

.. toctree::
	:hidden:

	enum_Poco_Net_ICMPv4PacketImpl_DestinationUnreachableCode.rst
	enum_Poco_Net_ICMPv4PacketImpl_MessageType.rst
	enum_Poco_Net_ICMPv4PacketImpl_ParameterProblemCode.rst
	enum_Poco_Net_ICMPv4PacketImpl_RedirectMessageCode.rst
	enum_Poco_Net_ICMPv4PacketImpl_TimeExceededCode.rst
	struct_Poco_Net_ICMPv4PacketImpl_Header.rst

Overview
~~~~~~~~

This class implements the ICMPv4 packet. :ref:`More...<details-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <ICMPv4PacketImpl.h>
	
	class ICMPv4PacketImpl: public :ref:`Poco::Net::ICMPPacketImpl<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl>`
	{
	public:
		// enums
	
		enum :ref:`DestinationUnreachableCode<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a2fc23201186054fb3886dd53cf830463>`;
		enum :ref:`MessageType<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a951b698bd521e06fdcdd14f16855a11c>`;
		enum :ref:`ParameterProblemCode<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1ac4d01c83a4ef2f9ca2a35ce20af0d595>`;
		enum :ref:`RedirectMessageCode<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1af0aa4a4b0696f3d144e9c03d81c12457>`;
		enum :ref:`TimeExceededCode<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a4a26753a7de11ac6fa524b2f072e3ae6>`;

		// structs
	
		struct :ref:`Header<doxid-struct_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1_1_header>`;

		// fields
	
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Poco::UInt16 :target:`MAX_PACKET_SIZE<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a0856bf4d9f08ef49d4eb6c9ce0aee93b>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`MESSAGE_TYPE<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a8be1f1c5c9f54e3a0f9c637da8c1447f>`[MESSAGE_TYPE_LENGTH];
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Poco::UInt8 :target:`DESTINATION_UNREACHABLE_TYPE<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a2f9fa4bbdfebcb2f0c8c72c659f7f8d6>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Poco::UInt8 :target:`SOURCE_QUENCH_TYPE<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1afdc390520c561b102072c2ee4825b508>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Poco::UInt8 :target:`REDIRECT_MESSAGE_TYPE<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1ae7350c60489f23a44f2851ff05b93d55>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Poco::UInt8 :target:`TIME_EXCEEDED_TYPE<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a25e52681b97c45b7b7cf54866579bda6>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Poco::UInt8 :target:`PARAMETER_PROBLEM_TYPE<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a9d08c89bdf6a5df93cf9fb080b3ef39b>`;

		// construction
	
		:ref:`ICMPv4PacketImpl<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1ae9558d8ea087c013820d4f02f6b3fb80>`(int dataSize = 48);

		// methods
	
		:target:`poco_static_assert<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a0042301ea6322e0bdbb896514b954512>`(offsetof(:ref:`Header<doxid-struct_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1_1_header>`, code) = =0x01);
		:target:`poco_static_assert<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1af3a5d9791fbc613e4e094ee54586b11e>`(offsetof(:ref:`Header<doxid-struct_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1_1_header>`, :ref:`checksum<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1a95ef8e384edef91acdce2ab688e91b13>`) = =0x02);
		:target:`poco_static_assert<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a977636ae105b864460d5d56da9e58b8e>`(offsetof(:ref:`Header<doxid-struct_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1_1_header>`, id) = =0x04);
		:target:`poco_static_assert<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1af236ec0566e981cb1e819c4e139c5aeb>`(offsetof(:ref:`Header<doxid-struct_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1_1_header>`, seq) = =0x06);
	
		virtual
		int
		:ref:`packetSize<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a35f82efdd08fcb2ae01a7b17529bfce0>`() const;
	
		virtual
		struct timeval
		:ref:`time<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a306981127406a66d81dd937e15cb79f0>`(
			Poco::UInt8* buffer = 0,
			int length = 0
			) const;
	
		bool
		:ref:`validReplyID<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a444a1b888992cbd99a776e282cab5e76>`(
			Poco::UInt8* buffer,
			int length
			) const;
	
		virtual
		std::string
		:ref:`errorDescription<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a4020f4330d4a3b2ec5b6755713cb3789>`(
			Poco::UInt8* buffer,
			int length
			);
	
		virtual
		std::string
		:ref:`typeDescription<doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1ad5b0526035115b9129520375bdc54cb7>`(int typeId);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// fields
	
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Poco::UInt16 :ref:`MAX_PACKET_SIZE<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1ae71b99b94458403e4014fb38c40c4cf6>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Poco::UInt16 :ref:`MAX_SEQ_VALUE<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1a800983f86842fd194b5e5d88683e6ed6>`;

		// methods
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Poco::UInt8*
		:ref:`packet<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1a897a74006bdaa3b5fdd5545b0b86fa3d>`(bool init = true);
	
		virtual
		int
		:ref:`packetSize<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1a019c75f64c863180aacfa02a4985291a>`() const = 0;
	
		virtual
		int
		:ref:`maxPacketSize<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1aa1fe64ccafb36a3beb00af0335b74eb2>`() const;
	
		Poco::UInt16
		:ref:`sequence<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1ab3e6df9397d4f0fdb3be3d43fa234c4a>`() const;
	
		void
		:ref:`setDataSize<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1abae6175a660cf96b338e5223b8b4f26a>`(int dataSize);
	
		int
		:ref:`getDataSize<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1a0357b17bfc97f6a1a5a08d062a5bee16>`() const;
	
		virtual
		struct timeval
		:ref:`time<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1aad7c4b3009395905d460b839a8d07aeb>`(
			Poco::UInt8* buffer = 0,
			int length = 0
			) const = 0;
	
		virtual
		bool
		:ref:`validReplyID<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1abf0b1b8ca93ce216ad36f0384eb47db3>`(
			unsigned char* buffer,
			int length
			) const = 0;
	
		virtual
		std::string
		:ref:`errorDescription<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1a7506d2823a217f1452cde279cad2d8fb>`(
			Poco::UInt8* buffer,
			int length
			) = 0;
	
		virtual
		std::string
		:ref:`typeDescription<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1a991cfa8dbdfa865aa21283752c65f7b3>`(int typeId) = 0;

	protected:
		// methods
	
		Poco::UInt16
		:ref:`nextSequence<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1ad970e3bd3a35fab8c7c696e80a2ac747>`();
	
		void
		:ref:`resetSequence<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1a5de065cfb5f29d6caac74c0fd4f45de4>`();
	
		virtual
		void
		:ref:`initPacket<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1a3b74e2ea09b4b396c9db60f52de97567>`() = 0;
	
		Poco::UInt16
		:ref:`checksum<doxid-class_poco_1_1_net_1_1_i_c_m_p_packet_impl_1a95ef8e384edef91acdce2ab688e91b13>`(
			Poco::UInt16* addr,
			Poco::Int32 len
			);

.. _details-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This class implements the ICMPv4 packet.

Parts are based on original ICMP code by Mike Muuss U. S. Army Ballistic Research Laboratory December, 1983

Construction
------------

.. index:: pair: function; ICMPv4PacketImpl
.. _doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1ae9558d8ea087c013820d4f02f6b3fb80:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	ICMPv4PacketImpl(int dataSize = 48)

Constructor. Creates an :ref:`ICMPv4PacketImpl <doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl>`.

Methods
-------

.. index:: pair: function; packetSize
.. _doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a35f82efdd08fcb2ae01a7b17529bfce0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	packetSize() const

Returns the total length of packet (header + data);.

.. index:: pair: function; time
.. _doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a306981127406a66d81dd937e15cb79f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	struct timeval
	time(
		Poco::UInt8* buffer = 0,
		int length = 0
		) const

Returns current epoch time if either buffer or length are equal to zero.

Otherwise, it extracts the time value from the supplied buffer.

:ref:`Buffer <doxid-class_poco_1_1_buffer>` includes IP header, ICMP header and data.

.. index:: pair: function; validReplyID
.. _doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a444a1b888992cbd99a776e282cab5e76:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	validReplyID(
		Poco::UInt8* buffer,
		int length
		) const

Returns true if the extracted id is recognized (i.e.

equals the process id).

:ref:`Buffer <doxid-class_poco_1_1_buffer>` includes IP header, ICMP header and data.

.. index:: pair: function; errorDescription
.. _doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1a4020f4330d4a3b2ec5b6755713cb3789:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	std::string
	errorDescription(
		Poco::UInt8* buffer,
		int length
		)

Returns error description string.

If supplied buffer contains ICMPv4 echo reply packet, an empty string is returned indicating the absence of error.

:ref:`Buffer <doxid-class_poco_1_1_buffer>` includes IP header, ICMP header and data.

.. index:: pair: function; typeDescription
.. _doxid-class_poco_1_1_net_1_1_i_c_m_pv4_packet_impl_1ad5b0526035115b9129520375bdc54cb7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	std::string
	typeDescription(int typeId)

Returns the description of the packet type.

