.. index:: pair: class; Poco::Net::IPAddress
.. _doxid-class_poco_1_1_net_1_1_i_p_address:

class Poco::Net::IPAddress
==========================

.. toctree::
	:hidden:

	enum_Poco_Net_IPAddress_Family.rst

Overview
~~~~~~~~

This class represents an internet (IP) host address. :ref:`More...<details-class_poco_1_1_net_1_1_i_p_address>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <IPAddress.h>
	
	class IPAddress
	{
	public:
		// typedefs
	
		typedef std::vector<IPAddress> :target:`List<doxid-class_poco_1_1_net_1_1_i_p_address_1a009b0133add8356e48a4bb7c509794e4>`;

		// enums
	
		enum
		{
		    :target:`MAX_ADDRESS_LENGTH<doxid-class_poco_1_1_net_1_1_i_p_address_1a41b9ab5a71407d520eb22def4df2e89fa86eb4f1b1396118edb4365e322be0283>` =     			sizeof(struct in_addr),
		};
	
		enum :ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>`;

		// construction
	
		:ref:`IPAddress<doxid-class_poco_1_1_net_1_1_i_p_address_1a4ae658f5caea04ae19e28e6f3b8cce9e>`();
		:ref:`IPAddress<doxid-class_poco_1_1_net_1_1_i_p_address_1a90723bfc9c7ab4b0a63f907dd0af546e>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr);
		:ref:`IPAddress<doxid-class_poco_1_1_net_1_1_i_p_address_1ac209c2415b66f4f23b40216785b39219>`(:ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>` family);
		:ref:`IPAddress<doxid-class_poco_1_1_net_1_1_i_p_address_1a75b3dcbd29d95e832df57a4435b345b3>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& addr);
	
		:ref:`IPAddress<doxid-class_poco_1_1_net_1_1_i_p_address_1ae5ecf537919b5c178b091bf3ff82e22a>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& addr,
			:ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>` family
			);
	
		:ref:`IPAddress<doxid-class_poco_1_1_net_1_1_i_p_address_1aebd743f4e7c84b69ed84e622d1df6751>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* addr,
			poco_socklen_t length
			);
	
		:ref:`IPAddress<doxid-class_poco_1_1_net_1_1_i_p_address_1a4ceedae2a576a706b9488269a6b30a01>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* addr,
			poco_socklen_t length,
			Poco::UInt32 scope
			);
	
		:ref:`IPAddress<doxid-class_poco_1_1_net_1_1_i_p_address_1a19d3636c85c5de3a2a118d7403217679>`(
			unsigned prefix,
			:ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>` family
			);
	
		:ref:`IPAddress<doxid-class_poco_1_1_net_1_1_i_p_address_1a0bfe785047d42aff16b5628f5daeca69>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` struct sockaddr& sockaddr);

		// methods
	
		IPAddress&
		:ref:`operator=<doxid-class_poco_1_1_net_1_1_i_p_address_1a2744c194bca6643ef6be542afb65ad02>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr);
	
		:ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>`
		:ref:`family<doxid-class_poco_1_1_net_1_1_i_p_address_1ad03f253d7966e078ea35eeeb880215a8>`() const;
	
		Poco::UInt32
		:ref:`scope<doxid-class_poco_1_1_net_1_1_i_p_address_1af6314124f83e967748526d80eaedf3c7>`() const;
	
		std::string
		:ref:`toString<doxid-class_poco_1_1_net_1_1_i_p_address_1aa4ecb1b458cb641033f77079d2ab9e3e>`() const;
	
		bool
		:ref:`isWildcard<doxid-class_poco_1_1_net_1_1_i_p_address_1ac2a4d5c10f4c5aed3403fa5f78c8b672>`() const;
	
		bool
		:ref:`isBroadcast<doxid-class_poco_1_1_net_1_1_i_p_address_1a28e89730807c1d6cc2fbc8be19491062>`() const;
	
		bool
		:ref:`isLoopback<doxid-class_poco_1_1_net_1_1_i_p_address_1a463f026ba26278560b2c06d50667e23e>`() const;
	
		bool
		:ref:`isMulticast<doxid-class_poco_1_1_net_1_1_i_p_address_1aba86cae7b22e3990a48c5dd7888b68b8>`() const;
	
		bool
		:ref:`isUnicast<doxid-class_poco_1_1_net_1_1_i_p_address_1a64724560483df5cb46be663a4e271137>`() const;
	
		bool
		:ref:`isLinkLocal<doxid-class_poco_1_1_net_1_1_i_p_address_1a4e17a3b46e96ff44c999fcbfb9feed2e>`() const;
	
		bool
		:ref:`isSiteLocal<doxid-class_poco_1_1_net_1_1_i_p_address_1a121a9d7f421743d47395bc500d3e767b>`() const;
	
		bool
		:ref:`isIPv4Compatible<doxid-class_poco_1_1_net_1_1_i_p_address_1adab1fd7a471db72f59e4479f7a2cd8ca>`() const;
	
		bool
		:ref:`isIPv4Mapped<doxid-class_poco_1_1_net_1_1_i_p_address_1a82e61753da3e011dd5307b11d16ede4c>`() const;
	
		bool
		:ref:`isWellKnownMC<doxid-class_poco_1_1_net_1_1_i_p_address_1ab16d209dd5ad0af087c225dcbe7b3014>`() const;
	
		bool
		:ref:`isNodeLocalMC<doxid-class_poco_1_1_net_1_1_i_p_address_1a72b52ab6d003c69f606139538513ab58>`() const;
	
		bool
		:ref:`isLinkLocalMC<doxid-class_poco_1_1_net_1_1_i_p_address_1a861e4416e3361ba3c6b20e04fb94c68d>`() const;
	
		bool
		:ref:`isSiteLocalMC<doxid-class_poco_1_1_net_1_1_i_p_address_1a91151b6155680856ca73121219297945>`() const;
	
		bool
		:ref:`isOrgLocalMC<doxid-class_poco_1_1_net_1_1_i_p_address_1a2b7ab2fe7deb3b036089f877001aa11d>`() const;
	
		bool
		:ref:`isGlobalMC<doxid-class_poco_1_1_net_1_1_i_p_address_1afcc316b69d81bbd3fbb28769e6bb9c6d>`() const;
	
		bool
		:target:`operator==<doxid-class_poco_1_1_net_1_1_i_p_address_1a60a9bf635bf5e51cf1b0b89a7d63a406>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr) const;
	
		bool
		:target:`operator!=<doxid-class_poco_1_1_net_1_1_i_p_address_1a416b90ead239481c02de3fca0b6ddc48>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr) const;
	
		bool
		:target:`operator<<doxid-class_poco_1_1_net_1_1_i_p_address_1ab7d7495ff264b42be2dfcf8f01c5bed9>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr) const;
	
		bool
		:target:`operator<=<doxid-class_poco_1_1_net_1_1_i_p_address_1a8a3f37a4c60012718cd3400f7a6c0bf3>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr) const;
	
		bool
		:target:`operator><doxid-class_poco_1_1_net_1_1_i_p_address_1af88dd7d0e501fe086370a4167110e4f1>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr) const;
	
		bool
		:target:`operator>=<doxid-class_poco_1_1_net_1_1_i_p_address_1a63708f50e69235d58d7fd1d718800bbb>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr) const;
	
		IPAddress
		:target:`operator&<doxid-class_poco_1_1_net_1_1_i_p_address_1ad17b2b894311708df5b28ddda829a001>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr) const;
	
		IPAddress
		:target:`operator|<doxid-class_poco_1_1_net_1_1_i_p_address_1adaae3328f5a8ed7542c33573929b6c1b>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr) const;
	
		IPAddress
		:target:`operator^<doxid-class_poco_1_1_net_1_1_i_p_address_1ae73405c462badf9bd6522021a3488136>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr) const;
	
		IPAddress
		:target:`operator~<doxid-class_poco_1_1_net_1_1_i_p_address_1a6b37a908110a19cd85e5ed9515a60677>`() const;
	
		poco_socklen_t
		:ref:`length<doxid-class_poco_1_1_net_1_1_i_p_address_1ad57a78ea5a2643bcd27034c0c8612add>`() const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void*
		:ref:`addr<doxid-class_poco_1_1_net_1_1_i_p_address_1a2a618ae609a8dcac8e6ff106e4636508>`() const;
	
		int
		:ref:`af<doxid-class_poco_1_1_net_1_1_i_p_address_1a763d4d6a6fc2576d3b24f7b666b16400>`() const;
	
		unsigned
		:ref:`prefixLength<doxid-class_poco_1_1_net_1_1_i_p_address_1aefbc9d7a2bc3edc764b9371776637a5a>`() const;
	
		void
		:ref:`mask<doxid-class_poco_1_1_net_1_1_i_p_address_1a25d53fec84651e4f5625f2aacb66819f>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& mask);
	
		void
		:ref:`mask<doxid-class_poco_1_1_net_1_1_i_p_address_1a4aff6cf3894c7d225b41915bc3ce1a9e>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& mask,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& set
			);
	
		static
		IPAddress
		:ref:`parse<doxid-class_poco_1_1_net_1_1_i_p_address_1a895a5abd4aa5162d73a610ffd9c0f77d>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& addr);
	
		static
		bool
		:ref:`tryParse<doxid-class_poco_1_1_net_1_1_i_p_address_1a3be69ecda3e51a06d10116b412bf1fde>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& addr,
			IPAddress& result
			);
	
		static
		IPAddress
		:ref:`wildcard<doxid-class_poco_1_1_net_1_1_i_p_address_1af03f43d865b2c9050975fcb025c57070>`(:ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>` family = :ref:`IPv4<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6ac0d6bd8b09769153d86998da26979c4d>`);
	
		static
		IPAddress
		:ref:`broadcast<doxid-class_poco_1_1_net_1_1_i_p_address_1ada9b021c07e2b47035b1213b021da7a9>`();
	};
.. _details-class_poco_1_1_net_1_1_i_p_address:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This class represents an internet (IP) host address.

The address can belong either to the IPv4 or the IPv6 address family.

Relational operators (==, !=, <, <=, >, >=) are supported. However, you must not interpret any special meaning into the result of these operations, other than that the results are consistent.

Especially, an IPv4 address is never equal to an IPv6 address, even if the IPv6 address is IPv4 compatible and the addresses are the same.

IPv6 addresses are supported only if the target platform supports IPv6.

Construction
------------

.. index:: pair: function; IPAddress
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a4ae658f5caea04ae19e28e6f3b8cce9e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	IPAddress()

Creates a wildcard (zero) IPv4 :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>`.

.. index:: pair: function; IPAddress
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a90723bfc9c7ab4b0a63f907dd0af546e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	IPAddress(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr)

Creates an :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>` by copying another one.

.. index:: pair: function; IPAddress
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1ac209c2415b66f4f23b40216785b39219:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	IPAddress(:ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>` family)

Creates a wildcard (zero) :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>` for the given address family.

.. index:: pair: function; IPAddress
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a75b3dcbd29d95e832df57a4435b345b3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	IPAddress(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& addr)

Creates an :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>` from the string containing an IP address in presentation format (dotted decimal for IPv4, hex string for IPv6).

Depending on the format of addr, either an IPv4 or an IPv6 address is created.

See :ref:`toString() <doxid-class_poco_1_1_net_1_1_i_p_address_1aa4ecb1b458cb641033f77079d2ab9e3e>` for details on the supported formats.

Throws an InvalidAddressException if the address cannot be parsed.

.. index:: pair: function; IPAddress
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1ae5ecf537919b5c178b091bf3ff82e22a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	IPAddress(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& addr,
		:ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>` family
		)

Creates an :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>` from the string containing an IP address in presentation format (dotted decimal for IPv4, hex string for IPv6).

.. index:: pair: function; IPAddress
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1aebd743f4e7c84b69ed84e622d1df6751:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	IPAddress(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* addr,
		poco_socklen_t length
		)

Creates an :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>` from a native internet address.

A pointer to a in_addr or a in6_addr structure may be passed.

.. index:: pair: function; IPAddress
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a4ceedae2a576a706b9488269a6b30a01:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	IPAddress(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* addr,
		poco_socklen_t length,
		Poco::UInt32 scope
		)

Creates an :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>` from a native internet address.

A pointer to a in_addr or a in6_addr structure may be passed. Additionally, for an IPv6 address, a scope ID may be specified. The scope ID will be ignored if an IPv4 address is specified.

.. index:: pair: function; IPAddress
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a19d3636c85c5de3a2a118d7403217679:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	IPAddress(
		unsigned prefix,
		:ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>` family
		)

Creates an :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>` mask with the given length of prefix.

.. index:: pair: function; IPAddress
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a0bfe785047d42aff16b5628f5daeca69:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	IPAddress(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` struct sockaddr& sockaddr)

Same for struct sock_addr on POSIX.

Methods
-------

.. index:: pair: function; operator=
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a2744c194bca6643ef6be542afb65ad02:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	IPAddress&
	operator=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& addr)

Assigns an :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>`.

.. index:: pair: function; family
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1ad03f253d7966e078ea35eeeb880215a8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>`
	family() const

Returns the address family (IPv4 or IPv6) of the address.

.. index:: pair: function; scope
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1af6314124f83e967748526d80eaedf3c7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Poco::UInt32
	scope() const

Returns the IPv6 scope identifier of the address.

Returns 0 if the address is an IPv4 address, or the address is an IPv6 address but does not have a scope identifier.

.. index:: pair: function; toString
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1aa4ecb1b458cb641033f77079d2ab9e3e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::string
	toString() const

Returns a string containing a representation of the address in presentation format.

For IPv4 addresses the result will be in dotted-decimal (d.d.d.d) notation.

Textual representation of IPv6 address is one of the following forms:

The preferred form is x:x:x:x:x:x:x:x, where the 'x's are the hexadecimal values of the eight 16-bit pieces of the address. This is the full form. Example: 1080:0:0:0:8:600:200A:425C

It is not necessary to write the leading zeros in an individual field. However, there must be at least one numeral in every field, except as described below.

It is common for IPv6 addresses to contain long strings of zero bits. In order to make writing addresses containing zero bits easier, a special syntax is available to compress the zeros. The use of "::" indicates multiple groups of 16-bits of zeros. The "::" can only appear once in an address. The "::" can also be used to compress the leading and/or trailing zeros in an address. Example: 1080::8:600:200A:425C

For dealing with IPv4 compatible addresses in a mixed environment, a special syntax is available: x:x:x:x:x:x:d.d.d.d, where the 'x's are the hexadecimal values of the six high-order 16-bit pieces of the address, and the 'd's are the decimal values of the four low-order 8-bit pieces of the standard IPv4 representation address. Example: ::FFFF:192.168.1.120

If an IPv6 address contains a non-zero scope identifier, it is added to the string, delimited by a percent character. On Windows platforms, the numeric value (which specifies an interface index) is directly appended. On Unix platforms, the name of the interface corresponding to the index (interpretation of the scope identifier) is added.

.. index:: pair: function; isWildcard
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1ac2a4d5c10f4c5aed3403fa5f78c8b672:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isWildcard() const

Returns true iff the address is a wildcard (all zero) address.

.. index:: pair: function; isBroadcast
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a28e89730807c1d6cc2fbc8be19491062:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isBroadcast() const

Returns true iff the address is a broadcast address.

Only IPv4 addresses can be broadcast addresses. In a broadcast address, all bits are one.

For an IPv6 address, returns always false.

.. index:: pair: function; isLoopback
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a463f026ba26278560b2c06d50667e23e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isLoopback() const

Returns true iff the address is a loopback address.

For IPv4, the loopback address is 127.0.0.1.

For IPv6, the loopback address is ::1.

.. index:: pair: function; isMulticast
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1aba86cae7b22e3990a48c5dd7888b68b8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isMulticast() const

Returns true iff the address is a multicast address.

IPv4 multicast addresses are in the 224.0.0.0 to 239.255.255.255 range (the first four bits have the value 1110).

IPv6 multicast addresses are in the FFxx:x:x:x:x:x:x:x range.

.. index:: pair: function; isUnicast
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a64724560483df5cb46be663a4e271137:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isUnicast() const

Returns true iff the address is a unicast address.

An address is unicast if it is neither a wildcard, broadcast or multicast address.

.. index:: pair: function; isLinkLocal
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a4e17a3b46e96ff44c999fcbfb9feed2e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isLinkLocal() const

Returns true iff the address is a link local unicast address.

IPv4 link local addresses are in the 169.254.0.0/16 range, according to RFC 3927.

IPv6 link local addresses have 1111 1110 10 as the first 10 bits, followed by 54 zeros.

.. index:: pair: function; isSiteLocal
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a121a9d7f421743d47395bc500d3e767b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isSiteLocal() const

Returns true iff the address is a site local unicast address.

IPv4 site local addresses are in on of the 10.0.0.0/24, 192.168.0.0/16 or 172.16.0.0 to 172.31.255.255 ranges.

Originally, IPv6 site-local addresses had FEC0/10 (1111 1110 11) prefix (RFC 4291), followed by 38 zeros. Interfaces using this mask are supported, but obsolete; RFC 4193 prescribes fc00::/7 (1111 110) as local unicast prefix.

.. index:: pair: function; isIPv4Compatible
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1adab1fd7a471db72f59e4479f7a2cd8ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isIPv4Compatible() const

Returns true iff the address is IPv4 compatible.

For IPv4 addresses, this is always true.

For IPv6, the address must be in the ::x:x range (the first 96 bits are zero).

.. index:: pair: function; isIPv4Mapped
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a82e61753da3e011dd5307b11d16ede4c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isIPv4Mapped() const

Returns true iff the address is an IPv4 mapped IPv6 address.

For IPv4 addresses, this is always true.

For IPv6, the address must be in the ::FFFF:x:x range.

.. index:: pair: function; isWellKnownMC
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1ab16d209dd5ad0af087c225dcbe7b3014:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isWellKnownMC() const

Returns true iff the address is a well-known multicast address.

For IPv4, well-known multicast addresses are in the 224.0.0.0/8 range.

For IPv6, well-known multicast addresses are in the FF0x:x:x:x:x:x:x:x range.

.. index:: pair: function; isNodeLocalMC
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a72b52ab6d003c69f606139538513ab58:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isNodeLocalMC() const

Returns true iff the address is a node-local multicast address.

IPv4 does not support node-local addresses, thus the result is always false for an IPv4 address.

For IPv6, node-local multicast addresses are in the FFx1:x:x:x:x:x:x:x range.

.. index:: pair: function; isLinkLocalMC
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a861e4416e3361ba3c6b20e04fb94c68d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isLinkLocalMC() const

Returns true iff the address is a link-local multicast address.

For IPv4, link-local multicast addresses are in the 224.0.0.0/24 range. Note that this overlaps with the range for well-known multicast addresses.

For IPv6, link-local multicast addresses are in the FFx2:x:x:x:x:x:x:x range.

.. index:: pair: function; isSiteLocalMC
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a91151b6155680856ca73121219297945:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isSiteLocalMC() const

Returns true iff the address is a site-local multicast address.

For IPv4, site local multicast addresses are in the 239.255.0.0/16 range.

For IPv6, site-local multicast addresses are in the FFx5:x:x:x:x:x:x:x range.

.. index:: pair: function; isOrgLocalMC
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a2b7ab2fe7deb3b036089f877001aa11d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isOrgLocalMC() const

Returns true iff the address is a organization-local multicast address.

For IPv4, organization-local multicast addresses are in the 239.192.0.0/16 range.

For IPv6, organization-local multicast addresses are in the FFx8:x:x:x:x:x:x:x range.

.. index:: pair: function; isGlobalMC
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1afcc316b69d81bbd3fbb28769e6bb9c6d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isGlobalMC() const

Returns true iff the address is a global multicast address.

For IPv4, global multicast addresses are in the 224.0.1.0 to 238.255.255.255 range.

For IPv6, global multicast addresses are in the FFxF:x:x:x:x:x:x:x range.

.. index:: pair: function; length
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1ad57a78ea5a2643bcd27034c0c8612add:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	poco_socklen_t
	length() const

Returns the length in bytes of the internal socket address structure.

.. index:: pair: function; addr
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a2a618ae609a8dcac8e6ff106e4636508:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void*
	addr() const

Returns the internal address structure.

.. index:: pair: function; af
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a763d4d6a6fc2576d3b24f7b666b16400:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	af() const

Returns the address family (AF_INET or AF_INET6) of the address.

.. index:: pair: function; prefixLength
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1aefbc9d7a2bc3edc764b9371776637a5a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	unsigned
	prefixLength() const

Returns the prefix length.

.. index:: pair: function; mask
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a25d53fec84651e4f5625f2aacb66819f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	mask(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& mask)

Masks the IP address using the given netmask, which is usually a IPv4 subnet mask.

Only supported for IPv4 addresses.

The new address is (address & mask).

.. index:: pair: function; mask
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a4aff6cf3894c7d225b41915bc3ce1a9e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	mask(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& mask,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` IPAddress& set
		)

Masks the IP address using the given netmask, which is usually a IPv4 subnet mask.

Only supported for IPv4 addresses.

The new address is (address & mask) | (set & ~mask).

.. index:: pair: function; parse
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a895a5abd4aa5162d73a610ffd9c0f77d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	IPAddress
	parse(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& addr)

Creates an :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>` from the string containing an IP address in presentation format (dotted decimal for IPv4, hex string for IPv6).

Depending on the format of addr, either an IPv4 or an IPv6 address is created.

See :ref:`toString() <doxid-class_poco_1_1_net_1_1_i_p_address_1aa4ecb1b458cb641033f77079d2ab9e3e>` for details on the supported formats.

Throws an InvalidAddressException if the address cannot be parsed.

.. index:: pair: function; tryParse
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1a3be69ecda3e51a06d10116b412bf1fde:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	tryParse(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& addr,
		IPAddress& result
		)

Tries to interpret the given address string as an IP address in presentation format (dotted decimal for IPv4, hex string for IPv6).

Returns true and stores the :ref:`IPAddress <doxid-class_poco_1_1_net_1_1_i_p_address>` in result if the string contains a valid address.

Returns false and leaves result unchanged otherwise.

.. index:: pair: function; wildcard
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1af03f43d865b2c9050975fcb025c57070:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	IPAddress
	wildcard(:ref:`Family<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6>` family = :ref:`IPv4<doxid-class_poco_1_1_net_1_1_i_p_address_1a048c8fc29019f4722f2cdb5ba752d9b6ac0d6bd8b09769153d86998da26979c4d>`)

Returns a wildcard IPv4 or IPv6 address (0.0.0.0).

.. index:: pair: function; broadcast
.. _doxid-class_poco_1_1_net_1_1_i_p_address_1ada9b021c07e2b47035b1213b021da7a9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	IPAddress
	broadcast()

Returns a broadcast IPv4 address (255.255.255.255).

