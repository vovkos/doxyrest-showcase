.. index:: pair: class; Poco::NumberParser
.. _doxid-class_poco_1_1_number_parser:

class Poco::NumberParser
========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

The :ref:`NumberParser <doxid-class_poco_1_1_number_parser>` class provides static methods for parsing numbers out of strings. :ref:`More...<details-class_poco_1_1_number_parser>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <NumberParser.h>
	
	class NumberParser
	{
	public:
		// fields
	
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` unsigned short :target:`NUM_BASE_OCT<doxid-class_poco_1_1_number_parser_1a65585734943b9432b06306529657f351>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` unsigned short :target:`NUM_BASE_DEC<doxid-class_poco_1_1_number_parser_1ac678611a45c9054f5b60dbd5508adf13>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` unsigned short :target:`NUM_BASE_HEX<doxid-class_poco_1_1_number_parser_1a0f759c2c07368db0c337b2ccbcf4dbaf>`;

		// methods
	
		static
		int
		:ref:`parse<doxid-class_poco_1_1_number_parser_1a619ea8b7484114330a613645720ff386>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			char thousandSeparator = ','
			);
	
		static
		bool
		:ref:`tryParse<doxid-class_poco_1_1_number_parser_1aa8d099db31019b512b8ca4b160879a22>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			int& value,
			char thousandSeparator = ','
			);
	
		static
		unsigned
		:ref:`parseUnsigned<doxid-class_poco_1_1_number_parser_1a3d3bbfde29ae5d212fe2fd7708b50c10>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			char thousandSeparator = ','
			);
	
		static
		bool
		:ref:`tryParseUnsigned<doxid-class_poco_1_1_number_parser_1abed2f31a2a11268c16a013846aea2ca9>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			unsigned& value,
			char thousandSeparator = ','
			);
	
		static
		unsigned
		:ref:`parseHex<doxid-class_poco_1_1_number_parser_1a1b518bdea379873a202a164db277c05b>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s);
	
		static
		bool
		:ref:`tryParseHex<doxid-class_poco_1_1_number_parser_1a5f9b68b4c8354912fe90dac48f629950>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			unsigned& value
			);
	
		static
		unsigned
		:ref:`parseOct<doxid-class_poco_1_1_number_parser_1a8f66a4a38b8f4c0fffb9f99cbebbf541>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s);
	
		static
		bool
		:ref:`tryParseOct<doxid-class_poco_1_1_number_parser_1a972bd11ab5c3669d1c7f557493f2e6d2>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			unsigned& value
			);
	
		static
		double
		:ref:`parseFloat<doxid-class_poco_1_1_number_parser_1a7c2ce3c800a28187200d4352085d27ff>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			char decimalSeparator = '.',
			char thousandSeparator = ','
			);
	
		static
		bool
		:ref:`tryParseFloat<doxid-class_poco_1_1_number_parser_1a77ff5caf41da11d76f9a15af9fe4ce86>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			double& value,
			char decimalSeparator = '.',
			char thousandSeparator = ','
			);
	
		static
		bool
		:ref:`parseBool<doxid-class_poco_1_1_number_parser_1af62b0372c2cd06c4888c8c7fbdb31070>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s);
	
		static
		bool
		:ref:`tryParseBool<doxid-class_poco_1_1_number_parser_1a6d638a4783b0dd08fcb7a13a72f296b0>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
			bool& value
			);
	};
.. _details-class_poco_1_1_number_parser:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

The :ref:`NumberParser <doxid-class_poco_1_1_number_parser>` class provides static methods for parsing numbers out of strings.

Note that leading or trailing whitespace is not allowed in the string. :ref:`Poco::trim() <doxid-namespace_poco_1a43e5bb0afe99411c32a846b125595106>` or :ref:`Poco::trimInPlace() <doxid-namespace_poco_1ac4e17d0ed49fbb599d7159d83db33ca7>` can be used to remove leading or trailing whitespace.

Methods
-------

.. index:: pair: function; parse
.. _doxid-class_poco_1_1_number_parser_1a619ea8b7484114330a613645720ff386:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	int
	parse(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
		char thousandSeparator = ','
		)

Parses an integer value in decimal notation from the given string.

Throws a SyntaxException if the string does not hold a number in decimal notation.

.. index:: pair: function; tryParse
.. _doxid-class_poco_1_1_number_parser_1aa8d099db31019b512b8ca4b160879a22:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	tryParse(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
		int& value,
		char thousandSeparator = ','
		)

Parses an integer value in decimal notation from the given string.

Returns true if a valid integer has been found, false otherwise. If parsing was not successful, value is undefined.

.. index:: pair: function; parseUnsigned
.. _doxid-class_poco_1_1_number_parser_1a3d3bbfde29ae5d212fe2fd7708b50c10:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	unsigned
	parseUnsigned(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
		char thousandSeparator = ','
		)

Parses an unsigned integer value in decimal notation from the given string.

Throws a SyntaxException if the string does not hold a number in decimal notation.

.. index:: pair: function; tryParseUnsigned
.. _doxid-class_poco_1_1_number_parser_1abed2f31a2a11268c16a013846aea2ca9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	tryParseUnsigned(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
		unsigned& value,
		char thousandSeparator = ','
		)

Parses an unsigned integer value in decimal notation from the given string.

Returns true if a valid integer has been found, false otherwise. If parsing was not successful, value is undefined.

.. index:: pair: function; parseHex
.. _doxid-class_poco_1_1_number_parser_1a1b518bdea379873a202a164db277c05b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	unsigned
	parseHex(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s)

Parses an integer value in hexadecimal notation from the given string.

Throws a SyntaxException if the string does not hold a number in hexadecimal notation.

.. index:: pair: function; tryParseHex
.. _doxid-class_poco_1_1_number_parser_1a5f9b68b4c8354912fe90dac48f629950:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	tryParseHex(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
		unsigned& value
		)

Parses an unsigned integer value in hexadecimal notation from the given string.

Returns true if a valid integer has been found, false otherwise. If parsing was not successful, value is undefined.

.. index:: pair: function; parseOct
.. _doxid-class_poco_1_1_number_parser_1a8f66a4a38b8f4c0fffb9f99cbebbf541:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	unsigned
	parseOct(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s)

Parses an integer value in octal notation from the given string.

Throws a SyntaxException if the string does not hold a number in hexadecimal notation.

.. index:: pair: function; tryParseOct
.. _doxid-class_poco_1_1_number_parser_1a972bd11ab5c3669d1c7f557493f2e6d2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	tryParseOct(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
		unsigned& value
		)

Parses an unsigned integer value in octal notation from the given string.

Returns true if a valid integer has been found, false otherwise. If parsing was not successful, value is undefined.

.. index:: pair: function; parseFloat
.. _doxid-class_poco_1_1_number_parser_1a7c2ce3c800a28187200d4352085d27ff:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	double
	parseFloat(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
		char decimalSeparator = '.',
		char thousandSeparator = ','
		)

Parses a double value in decimal floating point notation from the given string.

Throws a SyntaxException if the string does not hold a floating-point number in decimal notation.

.. index:: pair: function; tryParseFloat
.. _doxid-class_poco_1_1_number_parser_1a77ff5caf41da11d76f9a15af9fe4ce86:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	tryParseFloat(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
		double& value,
		char decimalSeparator = '.',
		char thousandSeparator = ','
		)

Parses a double value in decimal floating point notation from the given string.

Returns true if a valid floating point number has been found, false otherwise. If parsing was not successful, value is undefined.

.. index:: pair: function; parseBool
.. _doxid-class_poco_1_1_number_parser_1af62b0372c2cd06c4888c8c7fbdb31070:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	parseBool(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s)

Parses a bool value in decimal or string notation from the given string.

Valid forms are: "0", "1", "true", "on", false", "yes", "no", "off". String forms are NOT case sensitive. Throws a SyntaxException if the string does not hold a valid bool number

.. index:: pair: function; tryParseBool
.. _doxid-class_poco_1_1_number_parser_1a6d638a4783b0dd08fcb7a13a72f296b0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	tryParseBool(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& s,
		bool& value
		)

Parses a bool value in decimal or string notation from the given string.

Valid forms are: "0", "1", "true", "on", false", "yes", "no", "off". String forms are NOT case sensitive. Returns true if a valid bool number has been found, false otherwise. If parsing was not successful, value is undefined.

