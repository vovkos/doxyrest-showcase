.. index:: pair: class; Poco::PBKDF2Engine
.. _doxid-class_poco_1_1_p_b_k_d_f2_engine:

template class Poco::PBKDF2Engine
=================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This class implementes the Password-Based Key Derivation Function 2, as specified in RFC 2898. :ref:`More...<details-class_poco_1_1_p_b_k_d_f2_engine>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <PBKDF2Engine.h>
	
	template <class PRF>
	class PBKDF2Engine: public :ref:`Poco::DigestEngine<doxid-class_poco_1_1_digest_engine>`
	{
	public:
		// enums
	
		enum
		{
		    :target:`PRF_DIGEST_SIZE<doxid-class_poco_1_1_p_b_k_d_f2_engine_1afcbe55bdfddc9878d5c4c63e95a99ce7abfc1d68b8eb43a90fe6ffa5a93a722c6>` = PRF::DIGEST_SIZE,
		};

		// construction
	
		:target:`PBKDF2Engine<doxid-class_poco_1_1_p_b_k_d_f2_engine_1ae254629d45a3b1e21f57d474c5042329>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& salt,
			unsigned c = 4096,
			Poco::UInt32 dkLen = :ref:`PRF_DIGEST_SIZE<doxid-class_poco_1_1_p_b_k_d_f2_engine_1afcbe55bdfddc9878d5c4c63e95a99ce7abfc1d68b8eb43a90fe6ffa5a93a722c6>`
			);

		// methods
	
		virtual
		std::size_t
		:ref:`digestLength<doxid-class_poco_1_1_p_b_k_d_f2_engine_1a1f5c0c2bc7cdd0f3ea2e2a085e652742>`() const;
	
		virtual
		void
		:ref:`reset<doxid-class_poco_1_1_p_b_k_d_f2_engine_1a5acbf27cee2ef529852e96e8ad1b36b4>`();
	
		virtual
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`DigestEngine::Digest<doxid-class_poco_1_1_digest_engine_1a8e6e74183768a08e8f00112e5c6c055e>`&
		:ref:`digest<doxid-class_poco_1_1_p_b_k_d_f2_engine_1afd9bc62834136625f41c7ff262430f0c>`();

	protected:
		// methods
	
		virtual
		void
		:ref:`updateImpl<doxid-class_poco_1_1_p_b_k_d_f2_engine_1ab41a55a97b54793efb65b0351916079e>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* data,
			std::size_t length
			);
	
		void
		:target:`f<doxid-class_poco_1_1_p_b_k_d_f2_engine_1ae6564866d7309820f2e670cd6332e06a>`(Poco::UInt32 i);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// typedefs
	
		typedef std::vector<unsigned char> :ref:`Digest<doxid-class_poco_1_1_digest_engine_1a8e6e74183768a08e8f00112e5c6c055e>`;

		// methods
	
		void
		:ref:`update<doxid-class_poco_1_1_digest_engine_1ac3de0beba3214e7c41b97ceab478f4d1>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* data,
			std::size_t length
			);
	
		void
		:ref:`update<doxid-class_poco_1_1_digest_engine_1a7a0602bab140113322422625573f853c>`(char data);
	
		void
		:ref:`update<doxid-class_poco_1_1_digest_engine_1a3ea720755f7eb4febe08a4ed680d0ce9>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& data);
	
		virtual
		std::size_t
		:ref:`digestLength<doxid-class_poco_1_1_digest_engine_1a971c0aa31b67436f710841a87ac4d5ca>`() const = 0;
	
		virtual
		void
		:ref:`reset<doxid-class_poco_1_1_digest_engine_1ac6e2b8d7740b289e9432ae673823ae0f>`() = 0;
	
		virtual
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Digest<doxid-class_poco_1_1_digest_engine_1a8e6e74183768a08e8f00112e5c6c055e>`&
		:ref:`digest<doxid-class_poco_1_1_digest_engine_1acbb5e07fd2f4ae327c3a6897867e07f3>`() = 0;
	
		static
		std::string
		:ref:`digestToHex<doxid-class_poco_1_1_digest_engine_1a82bd78a240d10ca70c6b9eeba4988ddf>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Digest<doxid-class_poco_1_1_digest_engine_1a8e6e74183768a08e8f00112e5c6c055e>`& bytes);
	
		static
		:ref:`Digest<doxid-class_poco_1_1_digest_engine_1a8e6e74183768a08e8f00112e5c6c055e>`
		:ref:`digestFromHex<doxid-class_poco_1_1_digest_engine_1ae5b4eff9f83d30775ae966ef39443489>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& digest);

	protected:
		// methods
	
		virtual
		void
		:ref:`updateImpl<doxid-class_poco_1_1_digest_engine_1a172d52d2fd5c279b4571f6cd5b57fccf>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* data,
			std::size_t length
			) = 0;

.. _details-class_poco_1_1_p_b_k_d_f2_engine:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This class implementes the Password-Based Key Derivation Function 2, as specified in RFC 2898.

The underlying :ref:`DigestEngine <doxid-class_poco_1_1_digest_engine>` (:ref:`HMACEngine <doxid-class_poco_1_1_h_m_a_c_engine>`, etc.), which must accept the passphrase as constructor argument (std::string), must be given as template argument.

PBKDF2 (Password-Based Key Derivation Function 2) is a key derivation function that is part of RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, specifically PKCS #5 v2.0, also published as Internet Engineering :ref:`Task <doxid-class_poco_1_1_task>` Force's RFC 2898. It replaces an earlier standard, PBKDF1, which could only produce derived keys up to 160 bits long.

PBKDF2 applies a pseudorandom function, such as a cryptographic hash, cipher, or HMAC to the input password or passphrase along with a salt value and repeats the process many times to produce a derived key, which can then be used as a cryptographic key in subsequent operations. The added computational work makes password cracking much more difficult, and is known as key stretching. When the standard was written in 2000, the recommended minimum number of iterations was 1000, but the parameter is intended to be increased over time as CPU speeds increase. Having a salt added to the password reduces the ability to use precomputed hashes (rainbow tables) for attacks, and means that multiple passwords have to be tested individually, not all at once. The standard recommends a salt length of at least 64 bits. [Wikipedia]

The PBKDF2 algorithm is implemented as a :ref:`DigestEngine <doxid-class_poco_1_1_digest_engine>`. The passphrase is specified by calling :ref:`update() <doxid-class_poco_1_1_digest_engine_1ac3de0beba3214e7c41b97ceab478f4d1>`.

Example (WPA2):

.. ref-code-block:: cpp

	PBKDF2Engine<HMACEngine<SHA1Engine> > pbkdf2(ssid, 4096, 256);
	pbkdf2.update(passphrase);
	DigestEngine::Digest d = pbkdf2.digest();

Methods
-------

.. index:: pair: function; digestLength
.. _doxid-class_poco_1_1_p_b_k_d_f2_engine_1a1f5c0c2bc7cdd0f3ea2e2a085e652742:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	std::size_t
	digestLength() const

Returns the length of the digest in bytes.

.. index:: pair: function; reset
.. _doxid-class_poco_1_1_p_b_k_d_f2_engine_1a5acbf27cee2ef529852e96e8ad1b36b4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	reset()

Resets the engine so that a new digest can be computed.

.. index:: pair: function; digest
.. _doxid-class_poco_1_1_p_b_k_d_f2_engine_1afd9bc62834136625f41c7ff262430f0c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`DigestEngine::Digest<doxid-class_poco_1_1_digest_engine_1a8e6e74183768a08e8f00112e5c6c055e>`&
	digest()

Finishes the computation of the digest and returns the message digest.

Resets the engine and can thus only be called once for every digest. The returned reference is valid until the next time :ref:`digest() <doxid-class_poco_1_1_p_b_k_d_f2_engine_1afd9bc62834136625f41c7ff262430f0c>` is called, or the engine object is destroyed.

.. index:: pair: function; updateImpl
.. _doxid-class_poco_1_1_p_b_k_d_f2_engine_1ab41a55a97b54793efb65b0351916079e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	updateImpl(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* data,
		std::size_t length
		)

Updates the digest with the given data.

Must be implemented by subclasses.

