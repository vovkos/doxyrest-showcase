.. index:: pair: class; Poco::PatternFormatter
.. _doxid-class_poco_1_1_pattern_formatter:

class Poco::PatternFormatter
============================

.. toctree::
	:hidden:

	struct_Poco_PatternFormatter_PatternAction.rst

Overview
~~~~~~~~

This :ref:`Formatter <doxid-class_poco_1_1_formatter>` allows for custom formatting of log messages based on format patterns. :ref:`More...<details-class_poco_1_1_pattern_formatter>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <PatternFormatter.h>
	
	class PatternFormatter: public :ref:`Poco::Formatter<doxid-class_poco_1_1_formatter>`
	{
	public:
		// structs
	
		struct :ref:`PatternAction<doxid-struct_poco_1_1_pattern_formatter_1_1_pattern_action>`;

		// fields
	
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`PROP_PATTERN<doxid-class_poco_1_1_pattern_formatter_1a0c95e7d1891d82807606f823b47493f2>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string :target:`PROP_TIMES<doxid-class_poco_1_1_pattern_formatter_1ab5adcdad6821bb6fb85bc903f3dd548c>`;

		// construction
	
		:ref:`PatternFormatter<doxid-class_poco_1_1_pattern_formatter_1ad5a868e27bd46528226ca3254599c82d>`();
		:ref:`PatternFormatter<doxid-class_poco_1_1_pattern_formatter_1a21b0e941978149500aa174547922b674>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& format);

		// methods
	
		virtual
		void
		:ref:`format<doxid-class_poco_1_1_pattern_formatter_1a633be054397b170d113be8be4f317774>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Message<doxid-class_poco_1_1_message>`& msg,
			std::string& text
			);
	
		virtual
		void
		:ref:`setProperty<doxid-class_poco_1_1_pattern_formatter_1afd6282cc378cb77e651f69e073b98505>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			);
	
		virtual
		std::string
		:ref:`getProperty<doxid-class_poco_1_1_pattern_formatter_1a6cc10f2c96b6f41779082aec72637b3a>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;

	protected:
		// methods
	
		static
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`getPriorityName<doxid-class_poco_1_1_pattern_formatter_1ac850324816d8982f9b5b8eb80abbb2ca>`(int);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`setProperty<doxid-class_poco_1_1_configurable_1ae31289819bd01f4a1bda0be67144d5bf>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			) = 0;
	
		virtual
		std::string
		:ref:`getProperty<doxid-class_poco_1_1_configurable_1a565940a99f096c005743a68040ca5e25>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const = 0;
	
		void
		:ref:`duplicate<doxid-class_poco_1_1_ref_counted_object_1a13296da57127169ed0709b3dde86bf0d>`() const;
	
		void
		:ref:`release<doxid-class_poco_1_1_ref_counted_object_1a14bf204923a6ba4b97df6f8fdb9deb72>`() const;
	
		int
		:ref:`referenceCount<doxid-class_poco_1_1_ref_counted_object_1a45b62ccd833bcb06055399c2d889eb35>`() const;
	
		virtual
		void
		:ref:`format<doxid-class_poco_1_1_formatter_1a7dd62f0f22b9d1afb6d49b1a658235ae>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Message<doxid-class_poco_1_1_message>`& msg,
			std::string& text
			) = 0;
	
		virtual
		void
		:ref:`setProperty<doxid-class_poco_1_1_formatter_1af080e8c4d794b98c3748b7cfcba16453>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			);
	
		virtual
		std::string
		:ref:`getProperty<doxid-class_poco_1_1_formatter_1ade474219b6298aae45df0031a9eccdca>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;

.. _details-class_poco_1_1_pattern_formatter:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This :ref:`Formatter <doxid-class_poco_1_1_formatter>` allows for custom formatting of log messages based on format patterns.

The format pattern is used as a template to format the message and is copied character by character except for the following special characters, which are replaced by the corresponding value.

.. ref-code-block:: cpp

	* %s - message source
	* %t - message text
	* %l - message priority level (1 .. 7)
	* %p - message priority (Fatal, Critical, Error, Warning, Notice, Information, Debug, Trace)
	* %q - abbreviated message priority (F, C, E, W, N, I, D, T)
	* %P - message process identifier
	* %T - message thread name
	* %I - message thread identifier (numeric)
	* %N - node or host name
	* %U - message source file path (empty string if not set)
	* %u - message source line number (0 if not set)
	* %w - message date/time abbreviated weekday (Mon, Tue, ...)
	* %W - message date/time full weekday (Monday, Tuesday, ...)
	* %b - message date/time abbreviated month (Jan, Feb, ...)
	* %B - message date/time full month (January, February, ...)
	* %d - message date/time zero-padded day of month (01 .. 31)
	* %e - message date/time day of month (1 .. 31)
	* %f - message date/time space-padded day of month ( 1 .. 31)
	* %m - message date/time zero-padded month (01 .. 12)
	* %n - message date/time month (1 .. 12)
	* %o - message date/time space-padded month ( 1 .. 12)
	* %y - message date/time year without century (70)
	* %Y - message date/time year with century (1970)
	* %H - message date/time hour (00 .. 23)
	* %h - message date/time hour (00 .. 12)
	* %a - message date/time am/pm
	* %A - message date/time AM/PM
	* %M - message date/time minute (00 .. 59)
	* %S - message date/time second (00 .. 59)
	* %i - message date/time millisecond (000 .. 999)
	* %c - message date/time centisecond (0 .. 9)
	* %F - message date/time fractional seconds/microseconds (000000 - 999999)
	* %z - time zone differential in ISO 8601 format (Z or +NN.NN)
	* %Z - time zone differential in RFC format (GMT or +NNNN)
	* %L - convert time to local time (must be specified before any date/time specifier; does not itself output anything)
	* %E - epoch time (UTC, seconds since midnight, January 1, 1970)
	* %v[width] - the message source (%s) but text length is padded/cropped to 'width'
	* %[name] - the value of the message parameter with the given name
	* %% - percent sign

Construction
------------

.. index:: pair: function; PatternFormatter
.. _doxid-class_poco_1_1_pattern_formatter_1ad5a868e27bd46528226ca3254599c82d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	PatternFormatter()

Creates a :ref:`PatternFormatter <doxid-class_poco_1_1_pattern_formatter>`.

The format pattern must be specified with a call to setProperty.

.. index:: pair: function; PatternFormatter
.. _doxid-class_poco_1_1_pattern_formatter_1a21b0e941978149500aa174547922b674:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	PatternFormatter(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& format)

Creates a :ref:`PatternFormatter <doxid-class_poco_1_1_pattern_formatter>` that uses the given format pattern.

Methods
-------

.. index:: pair: function; format
.. _doxid-class_poco_1_1_pattern_formatter_1a633be054397b170d113be8be4f317774:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	format(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Message<doxid-class_poco_1_1_message>`& msg,
		std::string& text
		)

Formats the message according to the specified format pattern and places the result in text.

.. index:: pair: function; setProperty
.. _doxid-class_poco_1_1_pattern_formatter_1afd6282cc378cb77e651f69e073b98505:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setProperty(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
		)

Sets the property with the given name to the given value.

The following properties are supported:

.. ref-code-block:: cpp

	* pattern: The format pattern. See the PatternFormatter class
	  for details.
	* times: Specifies whether times are adjusted for local time
	  or taken as they are in UTC. Supported values are "local" and "UTC".

If any other property name is given, a PropertyNotSupported exception is thrown.

.. index:: pair: function; getProperty
.. _doxid-class_poco_1_1_pattern_formatter_1a6cc10f2c96b6f41779082aec72637b3a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	std::string
	getProperty(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const

Returns the value of the property with the given name or throws a PropertyNotSupported exception if the given name is not recognized.

.. index:: pair: function; getPriorityName
.. _doxid-class_poco_1_1_pattern_formatter_1ac850324816d8982f9b5b8eb80abbb2ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
	getPriorityName(int)

Returns a string for the given priority value.

