.. index:: pair: class; Poco::PurgeByCountStrategy
.. _doxid-class_poco_1_1_purge_by_count_strategy:

class Poco::PurgeByCountStrategy
================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This purge strategy ensures that a maximum number of archived files is not exceeded. :ref:`More...<details-class_poco_1_1_purge_by_count_strategy>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <PurgeStrategy.h>
	
	class PurgeByCountStrategy: public :ref:`Poco::PurgeStrategy<doxid-class_poco_1_1_purge_strategy>`
	{
	public:
		// construction
	
		:target:`PurgeByCountStrategy<doxid-class_poco_1_1_purge_by_count_strategy_1a3b71435f4943877ab7dbbcc4e28b8244>`(int count);

		// methods
	
		virtual
		void
		:ref:`purge<doxid-class_poco_1_1_purge_by_count_strategy_1adcb40f35179c6885536efa54116fd13a>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`purge<doxid-class_poco_1_1_purge_strategy_1a00842e6011133c68b3eb2d0d545f6f53>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path) = 0;

	protected:
		// methods
	
		void
		:ref:`list<doxid-class_poco_1_1_purge_strategy_1a276b5369e117abb9818b779b3a95f48c>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path,
			std::vector<:ref:`File<doxid-class_poco_1_1_file>`>& files
			);

.. _details-class_poco_1_1_purge_by_count_strategy:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This purge strategy ensures that a maximum number of archived files is not exceeded.

Files are deleted based on their age, with oldest files deleted first.

Methods
-------

.. index:: pair: function; purge
.. _doxid-class_poco_1_1_purge_by_count_strategy_1adcb40f35179c6885536efa54116fd13a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	purge(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path)

Purges archived log files.

The path to the current "hot" log file is given. To find archived log files, look for files with a name consisting of the given path plus any suffix (e.g., .1, .20050929081500, .1.gz). A list of archived files can be obtained by calling the :ref:`list() <doxid-class_poco_1_1_purge_strategy_1a276b5369e117abb9818b779b3a95f48c>` method.

