.. index:: pair: class; Poco::SimpleHashTable
.. _doxid-class_poco_1_1_simple_hash_table:

template class Poco::SimpleHashTable
====================================

.. toctree::
	:hidden:

	class_Poco_SimpleHashTable_HashEntry.rst

Overview
~~~~~~~~

A :ref:`SimpleHashTable <doxid-class_poco_1_1_simple_hash_table>` stores a key value pair that can be looked up via a hashed key. :ref:`More...<details-class_poco_1_1_simple_hash_table>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <SimpleHashTable.h>
	
	template <
		class Key,
		class Value,
		class KeyHashFunction = HashFunction<Key>
		>
	class SimpleHashTable
	{
	public:
		// typedefs
	
		typedef std::vector<:ref:`HashEntry<doxid-class_poco_1_1_simple_hash_table_1_1_hash_entry>`*> :target:`HashTableVector<doxid-class_poco_1_1_simple_hash_table_1a4eb9b126087cc76c3e6f22b12166b695>`;

		// classes
	
		class :ref:`HashEntry<doxid-class_poco_1_1_simple_hash_table_1_1_hash_entry>`;

		// construction
	
		:ref:`SimpleHashTable<doxid-class_poco_1_1_simple_hash_table_1a288391c43fc1cd6da41d49501a2c667d>`(UInt32 capacity = 251);
		:target:`SimpleHashTable<doxid-class_poco_1_1_simple_hash_table_1a03549ec1fbfb6dc0289476f193a80f10>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` SimpleHashTable& ht);

		// methods
	
		SimpleHashTable&
		:target:`operator=<doxid-class_poco_1_1_simple_hash_table_1ac9ad91be5ef2768e766346a168846ac4>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` SimpleHashTable& ht);
	
		void
		:target:`swap<doxid-class_poco_1_1_simple_hash_table_1a4eb45195038a0aacc206104705d8325f>`(SimpleHashTable& ht);
	
		void
		:target:`clear<doxid-class_poco_1_1_simple_hash_table_1a3ebe86b993959fe33a8b14e08f99765e>`();
	
		UInt32
		:ref:`insert<doxid-class_poco_1_1_simple_hash_table_1a5408e2147e6164a7c682c116a3b3c650>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value
			);
	
		Value&
		:ref:`insertRaw<doxid-class_poco_1_1_simple_hash_table_1a1491c181165fba78b8eb6515e917c5a5>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
			UInt32 hsh,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value
			);
	
		UInt32
		:ref:`update<doxid-class_poco_1_1_simple_hash_table_1acd9da154317772825953b22df8db07da>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value
			);
	
		void
		:ref:`updateRaw<doxid-class_poco_1_1_simple_hash_table_1a01f8a1f065ebf48a53095ea537550b16>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
			UInt32 hsh,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value
			);
	
		UInt32
		:target:`hash<doxid-class_poco_1_1_simple_hash_table_1a9eab7cbd588fbdd1c1e99089c1f2327e>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value&
		:ref:`get<doxid-class_poco_1_1_simple_hash_table_1a1c8f21e421791d3ac979a05c366aa860>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key) const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value&
		:ref:`getRaw<doxid-class_poco_1_1_simple_hash_table_1a5819f68bcac615a13d9ba06b5e4f3a91>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
			UInt32 hsh
			) const;
	
		Value&
		:ref:`get<doxid-class_poco_1_1_simple_hash_table_1a5f9f3235a42117c920c2053f3aeeb85e>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value&
		:target:`operator[]<doxid-class_poco_1_1_simple_hash_table_1a8220750c6f8051646b9c47fdb4bb638b>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key) const;
	
		Value&
		:target:`operator[]<doxid-class_poco_1_1_simple_hash_table_1acf8a333b81bd1477e3db37d93e5b41d9>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key);
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key&
		:ref:`getKeyRaw<doxid-class_poco_1_1_simple_hash_table_1a0e850f1426a44ce412c69252c1e4173e>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
			UInt32 hsh
			);
	
		bool
		:ref:`get<doxid-class_poco_1_1_simple_hash_table_1a5cb70dbb377fd6f25837cd9a03b56468>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
			Value& v
			) const;
	
		bool
		:ref:`getRaw<doxid-class_poco_1_1_simple_hash_table_1a040cacc7effaed8ccb222273fb09c88a>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
			UInt32 hsh,
			Value& v
			) const;
	
		bool
		:target:`exists<doxid-class_poco_1_1_simple_hash_table_1a1e263586bb6c38485453526ff2d98b6b>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key) const;
	
		bool
		:target:`existsRaw<doxid-class_poco_1_1_simple_hash_table_1a0f62ab4bf4a901eb35255b995d59ad3b>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
			UInt32 hsh
			) const;
	
		std::size_t
		:ref:`size<doxid-class_poco_1_1_simple_hash_table_1a335313587573651f1f69ebde485f6602>`() const;
	
		UInt32
		:target:`capacity<doxid-class_poco_1_1_simple_hash_table_1aab6e634cb928686b465c5e3b82c84cdf>`() const;
	
		void
		:ref:`resize<doxid-class_poco_1_1_simple_hash_table_1a770d3348975c63d5541fc46a2ca52119>`(UInt32 newSize);
	
		:ref:`HashStatistic<doxid-class_poco_1_1_hash_statistic>`
		:ref:`currentState<doxid-class_poco_1_1_simple_hash_table_1a064e8cc76240886059236b435a418359>`(bool details = false) const;
	};
.. _details-class_poco_1_1_simple_hash_table:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

A :ref:`SimpleHashTable <doxid-class_poco_1_1_simple_hash_table>` stores a key value pair that can be looked up via a hashed key.

In comparision to a :ref:`HashTable <doxid-class_poco_1_1_hash_table>`, this class handles collisions by sequentially searching the next free location. This also means that the maximum size of this table is limited, i.e. if the hash table is full, it will throw an exception and that this class does not support remove operations. On the plus side it is faster than the :ref:`HashTable <doxid-class_poco_1_1_hash_table>`.

This class is NOT thread safe.

Construction
------------

.. index:: pair: function; SimpleHashTable
.. _doxid-class_poco_1_1_simple_hash_table_1a288391c43fc1cd6da41d49501a2c667d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	SimpleHashTable(UInt32 capacity = 251)

Creates the :ref:`SimpleHashTable <doxid-class_poco_1_1_simple_hash_table>`.

Methods
-------

.. index:: pair: function; insert
.. _doxid-class_poco_1_1_simple_hash_table_1a5408e2147e6164a7c682c116a3b3c650:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	UInt32
	insert(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value
		)

Returns the hash value of the inserted item.

Throws an exception if the entry was already inserted

.. index:: pair: function; insertRaw
.. _doxid-class_poco_1_1_simple_hash_table_1a1491c181165fba78b8eb6515e917c5a5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Value&
	insertRaw(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
		UInt32 hsh,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value
		)

Returns the hash value of the inserted item.

Throws an exception if the entry was already inserted

.. index:: pair: function; update
.. _doxid-class_poco_1_1_simple_hash_table_1acd9da154317772825953b22df8db07da:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	UInt32
	update(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value
		)

Returns the hash value of the inserted item.

Replaces an existing entry if it finds one

.. index:: pair: function; updateRaw
.. _doxid-class_poco_1_1_simple_hash_table_1a01f8a1f065ebf48a53095ea537550b16:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	updateRaw(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
		UInt32 hsh,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value
		)

Returns the hash value of the inserted item.

Replaces an existing entry if it finds one

.. index:: pair: function; get
.. _doxid-class_poco_1_1_simple_hash_table_1a1c8f21e421791d3ac979a05c366aa860:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value&
	get(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key) const

Throws an exception if the value does not exist.

.. index:: pair: function; getRaw
.. _doxid-class_poco_1_1_simple_hash_table_1a5819f68bcac615a13d9ba06b5e4f3a91:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value&
	getRaw(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
		UInt32 hsh
		) const

Throws an exception if the value does not exist.

.. index:: pair: function; get
.. _doxid-class_poco_1_1_simple_hash_table_1a5f9f3235a42117c920c2053f3aeeb85e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	Value&
	get(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key)

Throws an exception if the value does not exist.

.. index:: pair: function; getKeyRaw
.. _doxid-class_poco_1_1_simple_hash_table_1a0e850f1426a44ce412c69252c1e4173e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key&
	getKeyRaw(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
		UInt32 hsh
		)

Throws an exception if the key does not exist.

returns a reference to the internally stored key. Useful when someone does an insert and wants for performance reason only to store a pointer to the key in another collection

.. index:: pair: function; get
.. _doxid-class_poco_1_1_simple_hash_table_1a5cb70dbb377fd6f25837cd9a03b56468:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	get(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
		Value& v
		) const

Sets v to the found value, returns false if no value was found.

.. index:: pair: function; getRaw
.. _doxid-class_poco_1_1_simple_hash_table_1a040cacc7effaed8ccb222273fb09c88a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	getRaw(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Key& key,
		UInt32 hsh,
		Value& v
		) const

Sets v to the found value, returns false if no value was found.

.. index:: pair: function; size
.. _doxid-class_poco_1_1_simple_hash_table_1a335313587573651f1f69ebde485f6602:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	size() const

Returns the number of elements already inserted into the :ref:`SimpleHashTable <doxid-class_poco_1_1_simple_hash_table>`.

.. index:: pair: function; resize
.. _doxid-class_poco_1_1_simple_hash_table_1a770d3348975c63d5541fc46a2ca52119:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	resize(UInt32 newSize)

Resizes the hashtable, rehashes all existing entries. Expensive!

.. index:: pair: function; currentState
.. _doxid-class_poco_1_1_simple_hash_table_1a064e8cc76240886059236b435a418359:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`HashStatistic<doxid-class_poco_1_1_hash_statistic>`
	currentState(bool details = false) const

Returns the current internal state.

