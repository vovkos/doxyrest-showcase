.. index:: pair: class; Poco::UniqueExpireStrategy
.. _doxid-class_poco_1_1_unique_expire_strategy:

template class Poco::UniqueExpireStrategy
=========================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

An :ref:`UniqueExpireStrategy <doxid-class_poco_1_1_unique_expire_strategy>` implements time based expiration of cache entries. :ref:`More...<details-class_poco_1_1_unique_expire_strategy>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <UniqueExpireStrategy.h>
	
	template <
		class TKey,
		class TValue
		>
	class UniqueExpireStrategy: public :ref:`Poco::AbstractStrategy<doxid-class_poco_1_1_abstract_strategy>`
	{
	public:
		// typedefs
	
		typedef std::multimap<:ref:`Timestamp<doxid-class_poco_1_1_timestamp>`, TKey> :target:`TimeIndex<doxid-class_poco_1_1_unique_expire_strategy_1ab051f8e1729b03c6d4d1a1594a27c242>`;
		typedef TimeIndex::iterator :target:`IndexIterator<doxid-class_poco_1_1_unique_expire_strategy_1a5c473eb896ae27e19dde701aa08409c8>`;
		typedef TimeIndex::const_iterator :target:`ConstIndexIterator<doxid-class_poco_1_1_unique_expire_strategy_1a4519d73ace70574edfec0502f45f361e>`;
		typedef std::map<TKey, :ref:`IndexIterator<doxid-class_poco_1_1_unique_expire_strategy_1a5c473eb896ae27e19dde701aa08409c8>`> :target:`Keys<doxid-class_poco_1_1_unique_expire_strategy_1aa0f6d61e6942513e456fb679f1f35759>`;
		typedef Keys::iterator :target:`Iterator<doxid-class_poco_1_1_unique_expire_strategy_1a518af46668ba72b87ff5f6f3c189af8f>`;

		// methods
	
		virtual
		void
		:ref:`onAdd<doxid-class_poco_1_1_unique_expire_strategy_1aa70578a0eb18bbfa4e954812bb0e2eec>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`KeyValueArgs<doxid-class_poco_1_1_key_value_args>`<TKey, TValue>& key
			);
	
		virtual
		void
		:ref:`onRemove<doxid-class_poco_1_1_unique_expire_strategy_1a0a08627bf8a21b74c572e331ee4f0293>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
			);
	
		virtual
		void
		:ref:`onGet<doxid-class_poco_1_1_unique_expire_strategy_1aeea30af4dfeee25214df58270158d437>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
			);
	
		virtual
		void
		:ref:`onClear<doxid-class_poco_1_1_unique_expire_strategy_1a26b662c2a1a3dd894b62a252d2930dc3>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`EventArgs<doxid-class_poco_1_1_event_args>`& args
			);
	
		virtual
		void
		:ref:`onIsValid<doxid-class_poco_1_1_unique_expire_strategy_1af4aadb91e16e2b5a76859d41a4f7502a>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`ValidArgs<doxid-class_poco_1_1_valid_args>`<TKey>& key
			);
	
		virtual
		void
		:ref:`onReplace<doxid-class_poco_1_1_unique_expire_strategy_1a3d1d0c19bc471ad1062d9b1d89592214>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			std::set<TKey>& elemsToRemove
			);

	protected:
		// fields
	
		:ref:`Keys<doxid-class_poco_1_1_unique_expire_strategy_1aa0f6d61e6942513e456fb679f1f35759>` :ref:`_keys<doxid-class_poco_1_1_unique_expire_strategy_1a2dc89f4172e0dafb31c20a92883aff19>`;
		:ref:`TimeIndex<doxid-class_poco_1_1_unique_expire_strategy_1ab051f8e1729b03c6d4d1a1594a27c242>` :ref:`_keyIndex<doxid-class_poco_1_1_unique_expire_strategy_1abeac8987ac5915ab4b8849df2f701b09>`;
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`onUpdate<doxid-class_poco_1_1_abstract_strategy_1ae6d1f28a5590ebd288eb644747b016a7>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`KeyValueArgs<doxid-class_poco_1_1_key_value_args>`<TKey, TValue>& args
			);
	
		virtual
		void
		:ref:`onAdd<doxid-class_poco_1_1_abstract_strategy_1a40bb84cd0085c3ff59064cd3d13a21dd>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`KeyValueArgs<doxid-class_poco_1_1_key_value_args>`<TKey, TValue>& key
			) = 0;
	
		virtual
		void
		:ref:`onRemove<doxid-class_poco_1_1_abstract_strategy_1a3c74a0e9b7469f4246ee083252d995ac>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
			) = 0;
	
		virtual
		void
		:ref:`onGet<doxid-class_poco_1_1_abstract_strategy_1a802663d39fa378d09ca76b37daccf8e9>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
			) = 0;
	
		virtual
		void
		:ref:`onClear<doxid-class_poco_1_1_abstract_strategy_1a84d1033a199ef6eea12207f7a40bca72>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`EventArgs<doxid-class_poco_1_1_event_args>`& args
			) = 0;
	
		virtual
		void
		:ref:`onIsValid<doxid-class_poco_1_1_abstract_strategy_1ade01399ff91ed48ca9ab2656c184dc7e>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`ValidArgs<doxid-class_poco_1_1_valid_args>`<TKey>& key
			) = 0;
	
		virtual
		void
		:ref:`onReplace<doxid-class_poco_1_1_abstract_strategy_1a344d2caa3f8b5ea1507a5a26c49f7eae>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			std::set<TKey>& elemsToRemove
			) = 0;

.. _details-class_poco_1_1_unique_expire_strategy:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

An :ref:`UniqueExpireStrategy <doxid-class_poco_1_1_unique_expire_strategy>` implements time based expiration of cache entries.

In contrast to :ref:`ExpireStrategy <doxid-class_poco_1_1_expire_strategy>` which only allows to set a per cache expiration value, it allows to define expiration per CacheEntry. Each TValue object must thus offer the following method:

.. ref-code-block:: cpp

	const Poco::Timestamp& getExpiration() const;

which returns the absolute timepoint when the entry will be invalidated.

Fields
------

.. index:: pair: variable; _keys
.. _doxid-class_poco_1_1_unique_expire_strategy_1a2dc89f4172e0dafb31c20a92883aff19:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Keys<doxid-class_poco_1_1_unique_expire_strategy_1aa0f6d61e6942513e456fb679f1f35759>` _keys

For faster replacement of keys, the iterator points to the _keyIndex map.

.. index:: pair: variable; _keyIndex
.. _doxid-class_poco_1_1_unique_expire_strategy_1abeac8987ac5915ab4b8849df2f701b09:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`TimeIndex<doxid-class_poco_1_1_unique_expire_strategy_1ab051f8e1729b03c6d4d1a1594a27c242>` _keyIndex

Maps time to key value.

Methods
-------

.. index:: pair: function; onAdd
.. _doxid-class_poco_1_1_unique_expire_strategy_1aa70578a0eb18bbfa4e954812bb0e2eec:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onAdd(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`KeyValueArgs<doxid-class_poco_1_1_key_value_args>`<TKey, TValue>& key
		)

Adds the key to the strategy.

If for the key already an entry exists, an exception will be thrown.

.. index:: pair: function; onRemove
.. _doxid-class_poco_1_1_unique_expire_strategy_1a0a08627bf8a21b74c572e331ee4f0293:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onRemove(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
		)

Removes an entry from the strategy.

If the entry is not found the remove is ignored.

.. index:: pair: function; onGet
.. _doxid-class_poco_1_1_unique_expire_strategy_1aeea30af4dfeee25214df58270158d437:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onGet(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
		)

Informs the strategy that a read-access happens to an element.

.. index:: pair: function; onClear
.. _doxid-class_poco_1_1_unique_expire_strategy_1a26b662c2a1a3dd894b62a252d2930dc3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onClear(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`EventArgs<doxid-class_poco_1_1_event_args>`& args
		)

Removes all elements from the cache.

.. index:: pair: function; onIsValid
.. _doxid-class_poco_1_1_unique_expire_strategy_1af4aadb91e16e2b5a76859d41a4f7502a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onIsValid(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		:ref:`ValidArgs<doxid-class_poco_1_1_valid_args>`<TKey>& key
		)

Used to query if a key is still valid (i.e. cached).

.. index:: pair: function; onReplace
.. _doxid-class_poco_1_1_unique_expire_strategy_1a3d1d0c19bc471ad1062d9b1d89592214:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onReplace(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		std::set<TKey>& elemsToRemove
		)

Used by the Strategy to indicate which elements should be removed from the cache.

Note that onReplace does not change the current list of keys. The cache object is reponsible to remove the elements.

