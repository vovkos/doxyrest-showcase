.. index:: pair: class; Poco::AccessExpireLRUCache
.. _doxid-class_poco_1_1_access_expire_l_r_u_cache:

template class Poco::AccessExpireLRUCache
=========================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

An :ref:`AccessExpireLRUCache <doxid-class_poco_1_1_access_expire_l_r_u_cache>` combines LRU caching and time based expire caching. :ref:`More...<details-class_poco_1_1_access_expire_l_r_u_cache>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <AccessExpireLRUCache.h>
	
	template <
		class TKey,
		class TValue,
		class TMutex = FastMutex,
		class TEventMutex = FastMutex
		>
	class AccessExpireLRUCache: public :ref:`Poco::AbstractCache<doxid-class_poco_1_1_abstract_cache>`
	{
	public:
		// construction
	
		:target:`AccessExpireLRUCache<doxid-class_poco_1_1_access_expire_l_r_u_cache_1a1afd07bcd33030cdc3cc8b171a9e0288>`(
			long cacheSize = 1024,
			:ref:`Timestamp::TimeDiff<doxid-class_poco_1_1_timestamp_1a23501cdddede36b1551ce48525777b31>` expire = 600000
			);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// typedefs
	
		typedef std::map<TKey, :ref:`SharedPtr<doxid-class_poco_1_1_shared_ptr>`<TValue>> :ref:`DataHolder<doxid-class_poco_1_1_abstract_cache_1ad4c2640e970cfd70318cba782115b5e5>`;
		typedef DataHolder::iterator :ref:`Iterator<doxid-class_poco_1_1_abstract_cache_1a45cebd8415fed1d9943e09c288177ae0>`;
		typedef DataHolder::const_iterator :ref:`ConstIterator<doxid-class_poco_1_1_abstract_cache_1a12c298250774e4b89d536d33bcb305de>`;
		typedef std::set<TKey> :ref:`KeySet<doxid-class_poco_1_1_abstract_cache_1a12affb93161834fb51509f901efbeb07>`;

		// fields
	
		:ref:`FIFOEvent<doxid-class_poco_1_1_f_i_f_o_event>`<:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`KeyValueArgs<doxid-class_poco_1_1_key_value_args>`<TKey, TValue>, TEventMutex> :ref:`Add<doxid-class_poco_1_1_abstract_cache_1a9e6dacd1d0a5c6c9b928b122c5556b71>`;
		:ref:`FIFOEvent<doxid-class_poco_1_1_f_i_f_o_event>`<:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`KeyValueArgs<doxid-class_poco_1_1_key_value_args>`<TKey, TValue>, TEventMutex> :ref:`Update<doxid-class_poco_1_1_abstract_cache_1abd71cf5c91de5ef92943d3606f0000f4>`;
		:ref:`FIFOEvent<doxid-class_poco_1_1_f_i_f_o_event>`<:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey, TEventMutex> :ref:`Remove<doxid-class_poco_1_1_abstract_cache_1a80e5687984364d3fca7a4f8fc0f06090>`;
		:ref:`FIFOEvent<doxid-class_poco_1_1_f_i_f_o_event>`<:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey, TEventMutex> :ref:`Get<doxid-class_poco_1_1_abstract_cache_1a84d972d581e866deeb23c33811970da1>`;
		:ref:`FIFOEvent<doxid-class_poco_1_1_f_i_f_o_event>`<:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`EventArgs<doxid-class_poco_1_1_event_args>`, TEventMutex> :ref:`Clear<doxid-class_poco_1_1_abstract_cache_1aa2ef8f74e3437f93b67607e67d0683bf>`;

		// methods
	
		void
		:ref:`add<doxid-class_poco_1_1_abstract_cache_1aec30fe5fe6534f78a518e58b3db39f0d>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TValue& val
			);
	
		void
		:ref:`update<doxid-class_poco_1_1_abstract_cache_1af5da250a27adc5d6893dde7a4d058f78>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TValue& val
			);
	
		void
		:ref:`add<doxid-class_poco_1_1_abstract_cache_1a704a63b05c661fa33b99808e71e9faf9>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key,
			:ref:`SharedPtr<doxid-class_poco_1_1_shared_ptr>`<TValue> val
			);
	
		void
		:ref:`update<doxid-class_poco_1_1_abstract_cache_1add4e0066165634dc4eb7da6874703485>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key,
			:ref:`SharedPtr<doxid-class_poco_1_1_shared_ptr>`<TValue> val
			);
	
		void
		:ref:`remove<doxid-class_poco_1_1_abstract_cache_1a05d4fef6daeb548f72ba1eee68844e05>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key);
	
		bool
		:ref:`has<doxid-class_poco_1_1_abstract_cache_1a01c6602942831da6368f4a7e43c54f45>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key) const;
	
		:ref:`SharedPtr<doxid-class_poco_1_1_shared_ptr>`<TValue>
		:ref:`get<doxid-class_poco_1_1_abstract_cache_1a7f812c1ea00ed55ed9364c28cd32cb33>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key);
	
		void
		:ref:`clear<doxid-class_poco_1_1_abstract_cache_1a680ca7f1dae7c1a7d28e56e2741863fd>`();
	
		std::size_t
		:ref:`size<doxid-class_poco_1_1_abstract_cache_1a8c680a8d18da5455bc26687a0ee42aed>`();
	
		void
		:ref:`forceReplace<doxid-class_poco_1_1_abstract_cache_1a428e64599e2c4f1d90b5fc117a39f6f5>`();
	
		std::set<TKey>
		:ref:`getAllKeys<doxid-class_poco_1_1_abstract_cache_1a1679e8f78520a9164e57410763df3a6b>`();

	protected:
		// fields
	
		:ref:`FIFOEvent<doxid-class_poco_1_1_f_i_f_o_event>`<:ref:`ValidArgs<doxid-class_poco_1_1_valid_args>`<TKey>> :ref:`IsValid<doxid-class_poco_1_1_abstract_cache_1a9dd0651d24a6a7852f54f957ab1fc217>`;
		:ref:`FIFOEvent<doxid-class_poco_1_1_f_i_f_o_event>`<:ref:`KeySet<doxid-class_poco_1_1_abstract_cache_1a12affb93161834fb51509f901efbeb07>`> :ref:`Replace<doxid-class_poco_1_1_abstract_cache_1aa05a557df2c4dbde6e3e157a5ff77b20>`;
		TStrategy :ref:`_strategy<doxid-class_poco_1_1_abstract_cache_1af1b79976e32909c8b7ad57b659a98e74>`;
		:ref:`DataHolder<doxid-class_poco_1_1_abstract_cache_1ad4c2640e970cfd70318cba782115b5e5>` :ref:`_data<doxid-class_poco_1_1_abstract_cache_1a67c2547d9b9c9a31cc2cde6209bbe240>`;
		TMutex :ref:`_mutex<doxid-class_poco_1_1_abstract_cache_1a35619365ac7e7c7ecffe261dc74dd358>`;

		// methods
	
		void
		:ref:`initialize<doxid-class_poco_1_1_abstract_cache_1aa0e5d6076f277d4b66a80709a4b61f6f>`();
	
		void
		:ref:`uninitialize<doxid-class_poco_1_1_abstract_cache_1ac82eea981641fa3a3a752832c159145b>`();
	
		void
		:ref:`doAdd<doxid-class_poco_1_1_abstract_cache_1af9a03842b3131fb513f3c52d2b124705>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TValue& val
			);
	
		void
		:ref:`doAdd<doxid-class_poco_1_1_abstract_cache_1a134a4e02bb5c558d0c7781619fa90d3b>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key,
			:ref:`SharedPtr<doxid-class_poco_1_1_shared_ptr>`<TValue>& val
			);
	
		void
		:ref:`doUpdate<doxid-class_poco_1_1_abstract_cache_1a83a640c9a3be9709cadb7b0e45540ec4>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TValue& val
			);
	
		void
		:ref:`doUpdate<doxid-class_poco_1_1_abstract_cache_1a9eb42e862464346fa5851d6c3bd1ba20>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key,
			:ref:`SharedPtr<doxid-class_poco_1_1_shared_ptr>`<TValue>& val
			);
	
		void
		:ref:`doRemove<doxid-class_poco_1_1_abstract_cache_1a9e1339dcd40b9d4014939901740bb884>`(:ref:`Iterator<doxid-class_poco_1_1_abstract_cache_1a45cebd8415fed1d9943e09c288177ae0>` it);
	
		bool
		:ref:`doHas<doxid-class_poco_1_1_abstract_cache_1a0982ea3cc47f33658af8df0fb2f2782f>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key) const;
	
		:ref:`SharedPtr<doxid-class_poco_1_1_shared_ptr>`<TValue>
		:ref:`doGet<doxid-class_poco_1_1_abstract_cache_1a91c9f90cf85a0fe56b36481f7b5a27ee>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key);
	
		void
		:ref:`doClear<doxid-class_poco_1_1_abstract_cache_1af448360c5daf01d19275c46de21e0dfd>`();
	
		void
		:ref:`doReplace<doxid-class_poco_1_1_abstract_cache_1a2972a7235b638d35b290507dd873f254>`();

.. _details-class_poco_1_1_access_expire_l_r_u_cache:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

An :ref:`AccessExpireLRUCache <doxid-class_poco_1_1_access_expire_l_r_u_cache>` combines LRU caching and time based expire caching.

It cache entries for a fixed time period (per default 10 minutes) but also limits the size of the cache (per default: 1024).

