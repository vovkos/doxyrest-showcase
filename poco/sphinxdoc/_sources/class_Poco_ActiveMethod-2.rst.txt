.. index:: pair: class; Poco::ActiveMethod
.. _doxid-class_poco_1_1_active_method:

template class Poco::ActiveMethod
=================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

An active method is a method that, when called, executes in its own thread. :ref:`More...<details-class_poco_1_1_active_method>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <ActiveMethod.h>
	
	template <
		class ResultType,
		class ArgType,
		class OwnerType,
		class StarterType = ActiveStarter<OwnerType>
		>
	class ActiveMethod
	{
	public:
		// typedefs
	
		typedef ResultType(OwnerType::* :target:`Callback<doxid-class_poco_1_1_active_method_1ae864d7456283789fb9a00339e6395e0e>`)(const ArgType &);
		typedef :ref:`ActiveResult<doxid-class_poco_1_1_active_result>`<ResultType> :target:`ActiveResultType<doxid-class_poco_1_1_active_method_1a9229e02779978f0e6e8f643e4876ca44>`;
		typedef :ref:`ActiveRunnable<doxid-class_poco_1_1_active_runnable>`<ResultType, ArgType, OwnerType> :target:`ActiveRunnableType<doxid-class_poco_1_1_active_method_1a61bbe8a4831c3652887bfa22b7dda1f5>`;

		// construction
	
		:target:`ActiveMethod<doxid-class_poco_1_1_active_method_1a1ae69a61db8cba2d1d7a19477b8c95dc>`(
			OwnerType* pOwner,
			:ref:`Callback<doxid-class_poco_1_1_active_method_1ae864d7456283789fb9a00339e6395e0e>` method
			);
	
		:target:`ActiveMethod<doxid-class_poco_1_1_active_method_1aef4e8b1333f8bbae141d5b723c98f468>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` ActiveMethod& other);

		// methods
	
		:ref:`ActiveResultType<doxid-class_poco_1_1_active_method_1a9229e02779978f0e6e8f643e4876ca44>`
		:ref:`operator()<doxid-class_poco_1_1_active_method_1a5de2f0dfbccc53762beeb854b3c127a1>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` ArgType& arg);
	
		ActiveMethod&
		:target:`operator=<doxid-class_poco_1_1_active_method_1aa68a7a2e944facc7e88ae8982b8f54a1>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` ActiveMethod& other);
	
		void
		:target:`swap<doxid-class_poco_1_1_active_method_1a176790351176928ce00f5156bbb91c82>`(ActiveMethod& other);
	};
.. _details-class_poco_1_1_active_method:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

An active method is a method that, when called, executes in its own thread.

:ref:`ActiveMethod <doxid-class_poco_1_1_active_method>` 's take exactly one argument and can return a value. To pass more than one argument to the method, use a struct. The following example shows how to add an :ref:`ActiveMethod <doxid-class_poco_1_1_active_method>` to a class:

.. ref-code-block:: cpp

	class ActiveObject
	{
	public:
	    ActiveObject():
	        exampleActiveMethod(this, &ActiveObject::exampleActiveMethodImpl)
	    {
	    }
	
	    ActiveMethod<std::string, std::string, ActiveObject> exampleActiveMethod;
	
	protected:
	    std::string exampleActiveMethodImpl(const std::string& arg)
	    {
	        ...
	    }
	};

And following is an example that shows how to invoke an :ref:`ActiveMethod <doxid-class_poco_1_1_active_method>`.

.. ref-code-block:: cpp

	ActiveObject myActiveObject;
	ActiveResult<std::string> result = myActiveObject.exampleActiveMethod("foo");
	...
	result.wait();
	std::cout << result.data() << std::endl;

The way an :ref:`ActiveMethod <doxid-class_poco_1_1_active_method>` is started can be changed by passing a StarterType template argument with a corresponding class. The default :ref:`ActiveStarter <doxid-class_poco_1_1_active_starter>` starts the method in its own thread, obtained from a thread pool.

For an alternative implementation of StarterType, see :ref:`ActiveDispatcher <doxid-class_poco_1_1_active_dispatcher>`.

For methods that do not require an argument or a return value, the :ref:`Void <doxid-class_poco_1_1_void>` class can be used.

Methods
-------

.. index:: pair: function; operator()
.. _doxid-class_poco_1_1_active_method_1a5de2f0dfbccc53762beeb854b3c127a1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`ActiveResultType<doxid-class_poco_1_1_active_method_1a9229e02779978f0e6e8f643e4876ca44>`
	operator()(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` ArgType& arg)

Invokes the :ref:`ActiveMethod <doxid-class_poco_1_1_active_method>`.

