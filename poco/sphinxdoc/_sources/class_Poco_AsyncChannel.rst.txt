.. index:: pair: class; Poco::AsyncChannel
.. _doxid-class_poco_1_1_async_channel:

class Poco::AsyncChannel
========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

A channel uses a separate thread for logging. :ref:`More...<details-class_poco_1_1_async_channel>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <AsyncChannel.h>
	
	class AsyncChannel:
	    public :ref:`Poco::Channel<doxid-class_poco_1_1_channel>`,
	    public :ref:`Poco::Runnable<doxid-class_poco_1_1_runnable>`
	{
	public:
		// construction
	
		:ref:`AsyncChannel<doxid-class_poco_1_1_async_channel_1ab452b8649f5822741b39563c0ad084ed>`(
			:ref:`Channel<doxid-class_poco_1_1_channel>`* pChannel = 0,
			:ref:`Thread::Priority<doxid-class_poco_1_1_thread_1a4c86ded71a250e740cb3a448f112f1e3>` prio = :ref:`Thread::PRIO_NORMAL<doxid-class_poco_1_1_thread_1a4c86ded71a250e740cb3a448f112f1e3ac7262d6f61b9506c3e534c796f14cfda>`
			);

		// methods
	
		void
		:ref:`setChannel<doxid-class_poco_1_1_async_channel_1a6216afa1b854c68b989cf95dbd3c5bd7>`(:ref:`Channel<doxid-class_poco_1_1_channel>`* pChannel);
	
		:ref:`Channel<doxid-class_poco_1_1_channel>`*
		:ref:`getChannel<doxid-class_poco_1_1_async_channel_1aaab7eba49a2a1acb078955bf8db7e232>`() const;
	
		virtual
		void
		:ref:`open<doxid-class_poco_1_1_async_channel_1a6c6e99f6e6ecbe8c8422b24107b30ce0>`();
	
		virtual
		void
		:ref:`close<doxid-class_poco_1_1_async_channel_1a36f38ef01f3f3268b5d6a94407401eaa>`();
	
		virtual
		void
		:ref:`log<doxid-class_poco_1_1_async_channel_1a53f317d6416289eea7bdd5c2b7a231ac>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Message<doxid-class_poco_1_1_message>`& msg);
	
		virtual
		void
		:ref:`setProperty<doxid-class_poco_1_1_async_channel_1acb987f8373a85bca471d7d2dfec9ed89>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			);

	protected:
		// methods
	
		virtual
		void
		:ref:`run<doxid-class_poco_1_1_async_channel_1a1b45e998b2b97c42eccf7372309381e2>`();
	
		void
		:target:`setPriority<doxid-class_poco_1_1_async_channel_1a1e6a68ad9bdcd07a83eac669d42710ab>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`setProperty<doxid-class_poco_1_1_configurable_1ae31289819bd01f4a1bda0be67144d5bf>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			) = 0;
	
		virtual
		std::string
		:ref:`getProperty<doxid-class_poco_1_1_configurable_1a565940a99f096c005743a68040ca5e25>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const = 0;
	
		void
		:ref:`duplicate<doxid-class_poco_1_1_ref_counted_object_1a13296da57127169ed0709b3dde86bf0d>`() const;
	
		void
		:ref:`release<doxid-class_poco_1_1_ref_counted_object_1a14bf204923a6ba4b97df6f8fdb9deb72>`() const;
	
		int
		:ref:`referenceCount<doxid-class_poco_1_1_ref_counted_object_1a45b62ccd833bcb06055399c2d889eb35>`() const;
	
		virtual
		void
		:ref:`open<doxid-class_poco_1_1_channel_1aef60226200d2e287068a62d9af5a4f6e>`();
	
		virtual
		void
		:ref:`close<doxid-class_poco_1_1_channel_1a2056a173f804c51411942649bd4d6408>`();
	
		virtual
		void
		:ref:`log<doxid-class_poco_1_1_channel_1aeafdcc5ce2e0e38d96f15a60a563da4e>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Message<doxid-class_poco_1_1_message>`& msg) = 0;
	
		virtual
		void
		:ref:`setProperty<doxid-class_poco_1_1_channel_1a67c2a274e476745b902ced03fb485c6e>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			);
	
		virtual
		std::string
		:ref:`getProperty<doxid-class_poco_1_1_channel_1a187321f59674dfde457599885a4f6ec0>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name) const;
	
		virtual
		void
		:ref:`run<doxid-class_poco_1_1_runnable_1ad89816e81207bf5f1e52d5df860d11d4>`() = 0;

.. _details-class_poco_1_1_async_channel:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

A channel uses a separate thread for logging.

Using this channel can help to improve the performance of applications that produce huge amounts of log messages or that write log messages to multiple channels simultaneously.

All log messages are put into a queue and this queue is then processed by a separate thread.

Construction
------------

.. index:: pair: function; AsyncChannel
.. _doxid-class_poco_1_1_async_channel_1ab452b8649f5822741b39563c0ad084ed:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	AsyncChannel(
		:ref:`Channel<doxid-class_poco_1_1_channel>`* pChannel = 0,
		:ref:`Thread::Priority<doxid-class_poco_1_1_thread_1a4c86ded71a250e740cb3a448f112f1e3>` prio = :ref:`Thread::PRIO_NORMAL<doxid-class_poco_1_1_thread_1a4c86ded71a250e740cb3a448f112f1e3ac7262d6f61b9506c3e534c796f14cfda>`
		)

Creates the :ref:`AsyncChannel <doxid-class_poco_1_1_async_channel>` and connects it to the given channel.

Methods
-------

.. index:: pair: function; setChannel
.. _doxid-class_poco_1_1_async_channel_1a6216afa1b854c68b989cf95dbd3c5bd7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setChannel(:ref:`Channel<doxid-class_poco_1_1_channel>`* pChannel)

Connects the :ref:`AsyncChannel <doxid-class_poco_1_1_async_channel>` to the given target channel.

All messages will be forwarded to this channel.

.. index:: pair: function; getChannel
.. _doxid-class_poco_1_1_async_channel_1aaab7eba49a2a1acb078955bf8db7e232:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Channel<doxid-class_poco_1_1_channel>`*
	getChannel() const

Returns the target channel.

.. index:: pair: function; open
.. _doxid-class_poco_1_1_async_channel_1a6c6e99f6e6ecbe8c8422b24107b30ce0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	open()

Opens the channel and creates the background logging thread.

.. index:: pair: function; close
.. _doxid-class_poco_1_1_async_channel_1a36f38ef01f3f3268b5d6a94407401eaa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	close()

Closes the channel and stops the background logging thread.

.. index:: pair: function; log
.. _doxid-class_poco_1_1_async_channel_1a53f317d6416289eea7bdd5c2b7a231ac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	log(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Message<doxid-class_poco_1_1_message>`& msg)

Queues the message for processing by the background thread.

.. index:: pair: function; setProperty
.. _doxid-class_poco_1_1_async_channel_1acb987f8373a85bca471d7d2dfec9ed89:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setProperty(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
		)

Sets or changes a configuration property.

The "channel" property allows setting the target channel via the :ref:`LoggingRegistry <doxid-class_poco_1_1_logging_registry>`. The "channel" property is set-only.

The "priority" property allows setting the thread priority. The following values are supported:

.. ref-code-block:: cpp

	* lowest
	* low
	* normal (default)
	* high
	* highest

The "priority" property is set-only.

.. index:: pair: function; run
.. _doxid-class_poco_1_1_async_channel_1a1b45e998b2b97c42eccf7372309381e2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	run()

Do whatever the thread needs to do.

Must be overridden by subclasses.

