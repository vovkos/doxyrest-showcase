.. index:: pair: class; Poco::Dynamic::VarHolder
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder:

class Poco::Dynamic::VarHolder
==============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Interface for a data holder used by the :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` class. :ref:`More...<details-class_poco_1_1_dynamic_1_1_var_holder>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <VarHolder.h>
	
	class VarHolder
	{
	public:
		// typedefs
	
		typedef :ref:`Var<doxid-class_poco_1_1_dynamic_1_1_var>` :target:`ArrayValueType<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a06d7290c3dcae2d2d7d599f2bc5826ca>`;

		// methods
	
		virtual
		VarHolder*
		:ref:`clone<doxid-class_poco_1_1_dynamic_1_1_var_holder_1ab96c9c02166f0bb0d0e4c79d64a13e28>`(:ref:`Placeholder<doxid-union_poco_1_1_placeholder>`<VarHolder>* pHolder = 0) const = 0;
	
		virtual
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::type_info&
		:ref:`type<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a268bd432f87c533850c03422427b484b>`() const = 0;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1aff77778b8b597d2b003b059093a0457e>`(Int8& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a22134d29475aff21075b99e5401afcc0>`(Int16& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1acbb22d040fd862cd9c940ee554a14bf0>`(Int32& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1ae3a96251adf6e2e389a436ae35137551>`(Int64& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a7a00f6753829e1e8bc43ddf917d8e3e3>`(UInt8& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a83a029c39e9f76c86fd6a88c5a39da9c>`(UInt16& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a78d014496a8103e3d2b315b392a6e1da>`(UInt32& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a13b3ef8c134b16c18b2a940d939efc67>`(UInt64& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a0e6c10da1bc5b569cea2b8c5a7396bfe>`(:ref:`DateTime<doxid-class_poco_1_1_date_time>`& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1acaf9e128ce1ca8cb4b3dcaf1345a884a>`(:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time>`& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a9b85176d08b7221f97042f4f4b27f9bd>`(:ref:`Timestamp<doxid-class_poco_1_1_timestamp>`& val) const;
	
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a7a867a5f2c8e1286ca052b788a47eccb>`(long& val) const;
	
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1adc4ab65f78712601c3aa3cabb414be08>`(unsigned long& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a0f7330ed488d8ed2f2b8630536a178e8>`(bool& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a08e63cbf63c57fb99e05ecbbd8289972>`(float& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a670d82f177b0f833ee2109a9ebe2e715>`(double& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1aac0b8fd5b20f45320872d9df00d9af19>`(char& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a9c3b2c54481fb1c8c2366ec22cf5131b>`(std::string& val) const;
	
		virtual
		void
		:ref:`convert<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a344aaf5192c90300c91fedb1cc0376fa>`(:ref:`Poco::UTF16String<doxid-namespace_poco_1a48326c5073e372134caf2558e2c5b531>`& val) const;
	
		virtual
		bool
		:ref:`isArray<doxid-class_poco_1_1_dynamic_1_1_var_holder_1ad06c44bfa4839c93134e8e7da3a18444>`() const;
	
		virtual
		bool
		:ref:`isVector<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a2de5dd41cd596f1ae86f89c4fc20071a>`() const;
	
		virtual
		bool
		:ref:`isList<doxid-class_poco_1_1_dynamic_1_1_var_holder_1aac18feecbfdf0a23b435ae8e05473f85>`() const;
	
		virtual
		bool
		:ref:`isDeque<doxid-class_poco_1_1_dynamic_1_1_var_holder_1aceb98d4b9b5473d22223f3861ed424bf>`() const;
	
		virtual
		bool
		:ref:`isStruct<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a9ed83df3703271b910aab2fcfca73093>`() const;
	
		virtual
		bool
		:ref:`isInteger<doxid-class_poco_1_1_dynamic_1_1_var_holder_1abf19152750618335496425be47e667f1>`() const;
	
		virtual
		bool
		:ref:`isSigned<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a03de1e73c3f944d3d4430cef32fefd00>`() const;
	
		virtual
		bool
		:ref:`isNumeric<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a8214d776ff8252737be8847e57af81b3>`() const;
	
		virtual
		bool
		:ref:`isBoolean<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a019fcded83b5f430912904b5fcef3015>`() const;
	
		virtual
		bool
		:ref:`isString<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a418af85e878d2dadf92b9498f45497fe>`() const;
	
		virtual
		std::size_t
		:ref:`size<doxid-class_poco_1_1_dynamic_1_1_var_holder_1aced857a77fa0f08204c96e552802f2cf>`() const;

	protected:
		// methods
	
		template <typename T>
		VarHolder*
		:ref:`cloneHolder<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a0cb5823ea1d159e69770fa8800c36144>`(
			:ref:`Placeholder<doxid-union_poco_1_1_placeholder>`<VarHolder>* pVarHolder,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& val
			) const;
	
		template <
			typename F,
			typename T
			>
		void
		:ref:`convertToSmaller<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a31905b15d7eaf7957760b35dd107466e>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` F& from,
			T& to
			) const;
	
		template <
			typename F,
			typename T
			>
		void
		:ref:`convertToSmallerUnsigned<doxid-class_poco_1_1_dynamic_1_1_var_holder_1a0c42265cc1223930471d8f2ca5be2961>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` F& from,
			T& to
			) const;
	
		template <
			typename F,
			typename T
			>
		void
		:ref:`convertSignedToUnsigned<doxid-class_poco_1_1_dynamic_1_1_var_holder_1ab8911bf9905a7f5d36f67f2c8faa6373>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` F& from,
			T& to
			) const;
	
		template <
			typename F,
			typename T
			>
		void
		:ref:`convertSignedFloatToUnsigned<doxid-class_poco_1_1_dynamic_1_1_var_holder_1ab786eb9824a614b8773c64aee8a6da35>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` F& from,
			T& to
			) const;
	
		template <
			typename F,
			typename T
			>
		void
		:ref:`convertUnsignedToSigned<doxid-class_poco_1_1_dynamic_1_1_var_holder_1af800adc7c4f5304c4273d0d041734034>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` F& from,
			T& to
			) const;
	};

	// direct descendants

	template <typename T>
	class :ref:`VarHolderImpl<doxid-class_poco_1_1_dynamic_1_1_var_holder_impl>`;

	template <>
	class :ref:`VarHolderImpl<bool><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01bool_01_4>`;

	template <>
	class :ref:`VarHolderImpl<char><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01char_01_4>`;

	template <>
	class :ref:`VarHolderImpl<DateTime><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_date_time_01_4>`;

	template <>
	class :ref:`VarHolderImpl<double><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01double_01_4>`;

	template <>
	class :ref:`VarHolderImpl<float><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01float_01_4>`;

	template <>
	class :ref:`VarHolderImpl<Int16><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_int16_01_4>`;

	template <>
	class :ref:`VarHolderImpl<Int32><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_int32_01_4>`;

	template <>
	class :ref:`VarHolderImpl<Int64><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_int64_01_4>`;

	template <>
	class :ref:`VarHolderImpl<Int8><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_int8_01_4>`;

	template <>
	class :ref:`VarHolderImpl<JSON::Array><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_j_s_o_n_1_1_array_01_4>`;

	template <>
	class :ref:`VarHolderImpl<JSON::Array::Ptr><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_j_s_o_n_1_1_array_1_1_ptr_01_4>`;

	template <>
	class :ref:`VarHolderImpl<JSON::Object><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_j_s_o_n_1_1_object_01_4>`;

	template <>
	class :ref:`VarHolderImpl<JSON::Object::Ptr><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_j_s_o_n_1_1_object_1_1_ptr_01_4>`;

	template <>
	class :ref:`VarHolderImpl<LocalDateTime><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_local_date_time_01_4>`;

	template <>
	class :ref:`VarHolderImpl<long><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01long_01_4>`;

	template <>
	class :ref:`VarHolderImpl<Pair<int>><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_pair_3_01int_01_4_01_4>`;

	template <>
	class :ref:`VarHolderImpl<Pair<std::string>><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_pair_3_01std_1_1string_01_4_01_4>`;

	template <typename T>
	class :ref:`VarHolderImpl<std::deque<T>><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01std_1_1deque_3_01_t_01_4_01_4>`;

	template <typename T>
	class :ref:`VarHolderImpl<std::list<T>><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01std_1_1list_3_01_t_01_4_01_4>`;

	template <>
	class :ref:`VarHolderImpl<std::string><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01std_1_1string_01_4>`;

	template <typename T>
	class :ref:`VarHolderImpl<std::vector<T>><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01std_1_1vector_3_01_t_01_4_01_4>`;

	template <>
	class :ref:`VarHolderImpl<Struct<int>><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_struct_3_01int_01_4_01_4>`;

	template <>
	class :ref:`VarHolderImpl<Struct<std::string>><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_struct_3_01std_1_1string_01_4_01_4>`;

	template <>
	class :ref:`VarHolderImpl<Timestamp><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_timestamp_01_4>`;

	template <>
	class :ref:`VarHolderImpl<UInt16><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_u_int16_01_4>`;

	template <>
	class :ref:`VarHolderImpl<UInt32><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_u_int32_01_4>`;

	template <>
	class :ref:`VarHolderImpl<UInt64><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_u_int64_01_4>`;

	template <>
	class :ref:`VarHolderImpl<UInt8><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_u_int8_01_4>`;

	template <>
	class :ref:`VarHolderImpl<unsigned long><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01unsigned_01long_01_4>`;

	template <>
	class :ref:`VarHolderImpl<UTF16String><doxid-class_poco_1_1_dynamic_1_1_var_holder_impl_3_01_u_t_f16_string_01_4>`;
.. _details-class_poco_1_1_dynamic_1_1_var_holder:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Interface for a data holder used by the :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` class.

Provides methods to convert between data types. Only data types for which :ref:`VarHolder <doxid-class_poco_1_1_dynamic_1_1_var_holder>` specialization exists are supported.

Provided are specializations for all C++ built-in types with addition of std::string, :ref:`Poco::UTF16String <doxid-namespace_poco_1a48326c5073e372134caf2558e2c5b531>`, :ref:`DateTime <doxid-class_poco_1_1_date_time>`, :ref:`LocalDateTime <doxid-class_poco_1_1_local_date_time>`, :ref:`Timestamp <doxid-class_poco_1_1_timestamp>`, std::vector<Var> and DynamicStruct.

Additional types can be supported by adding specializations. When implementing specializations, the only condition is that they reside in :ref:`Poco <doxid-namespace_poco>` namespace and implement the pure virtual functions :ref:`clone() <doxid-class_poco_1_1_dynamic_1_1_var_holder_1ab96c9c02166f0bb0d0e4c79d64a13e28>` and :ref:`type() <doxid-class_poco_1_1_dynamic_1_1_var_holder_1a268bd432f87c533850c03422427b484b>`.

Those conversions that are not implemented shall fail back to this base class implementation. All the :ref:`convert() <doxid-class_poco_1_1_dynamic_1_1_var_holder_1aff77778b8b597d2b003b059093a0457e>` function overloads in this class throw BadCastException.

Construction
------------

.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a7d50d17c3d0a919debfd20f443b36290:
.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	~VarHolder()

Destroys the :ref:`VarHolder <doxid-class_poco_1_1_dynamic_1_1_var_holder>`.

Methods
-------

.. index:: pair: function; clone
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1ab96c9c02166f0bb0d0e4c79d64a13e28:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	VarHolder*
	clone(:ref:`Placeholder<doxid-union_poco_1_1_placeholder>`<VarHolder>* pHolder = 0) const = 0

Implementation must implement this function to deep-copy the :ref:`VarHolder <doxid-class_poco_1_1_dynamic_1_1_var_holder>`.

If small object optimization is enabled (i.e. if POCO_NO_SOO is not defined), :ref:`VarHolder <doxid-class_poco_1_1_dynamic_1_1_var_holder>` will be instantiated in-place if it's size is smaller than POCO_SMALL_OBJECT_SIZE.

.. index:: pair: function; type
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a268bd432f87c533850c03422427b484b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::type_info&
	type() const = 0

Implementation must return the type information (typeid) for the stored content.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1aff77778b8b597d2b003b059093a0457e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(Int8& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a22134d29475aff21075b99e5401afcc0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(Int16& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1acbb22d040fd862cd9c940ee554a14bf0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(Int32& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1ae3a96251adf6e2e389a436ae35137551:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(Int64& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a7a00f6753829e1e8bc43ddf917d8e3e3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(UInt8& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a83a029c39e9f76c86fd6a88c5a39da9c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(UInt16& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a78d014496a8103e3d2b315b392a6e1da:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(UInt32& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a13b3ef8c134b16c18b2a940d939efc67:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(UInt64& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a0e6c10da1bc5b569cea2b8c5a7396bfe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(:ref:`DateTime<doxid-class_poco_1_1_date_time>`& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1acaf9e128ce1ca8cb4b3dcaf1345a884a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(:ref:`LocalDateTime<doxid-class_poco_1_1_local_date_time>`& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a9b85176d08b7221f97042f4f4b27f9bd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(:ref:`Timestamp<doxid-class_poco_1_1_timestamp>`& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a7a867a5f2c8e1286ca052b788a47eccb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	convert(long& val) const

Calls convert(Int32).

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1adc4ab65f78712601c3aa3cabb414be08:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	convert(unsigned long& val) const

Calls convert(UInt32).

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a0f7330ed488d8ed2f2b8630536a178e8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(bool& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a08e63cbf63c57fb99e05ecbbd8289972:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(float& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a670d82f177b0f833ee2109a9ebe2e715:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(double& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1aac0b8fd5b20f45320872d9df00d9af19:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(char& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a9c3b2c54481fb1c8c2366ec22cf5131b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(std::string& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; convert
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a344aaf5192c90300c91fedb1cc0376fa:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	convert(:ref:`Poco::UTF16String<doxid-namespace_poco_1a48326c5073e372134caf2558e2c5b531>`& val) const

Throws BadCastException.

Must be overriden in a type specialization in order to suport the conversion.

.. index:: pair: function; isArray
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1ad06c44bfa4839c93134e8e7da3a18444:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isArray() const

Returns true.

.. index:: pair: function; isVector
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a2de5dd41cd596f1ae86f89c4fc20071a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isVector() const

Returns false.

Must be properly overriden in a type specialization in order to suport the diagnostic.

.. index:: pair: function; isList
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1aac18feecbfdf0a23b435ae8e05473f85:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isList() const

Returns false.

Must be properly overriden in a type specialization in order to suport the diagnostic.

.. index:: pair: function; isDeque
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1aceb98d4b9b5473d22223f3861ed424bf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isDeque() const

Returns false.

Must be properly overriden in a type specialization in order to suport the diagnostic.

.. index:: pair: function; isStruct
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a9ed83df3703271b910aab2fcfca73093:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isStruct() const

Returns false.

Must be properly overriden in a type specialization in order to suport the diagnostic.

.. index:: pair: function; isInteger
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1abf19152750618335496425be47e667f1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isInteger() const

Returns false.

Must be properly overriden in a type specialization in order to suport the diagnostic.

.. index:: pair: function; isSigned
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a03de1e73c3f944d3d4430cef32fefd00:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isSigned() const

Returns false.

Must be properly overriden in a type specialization in order to suport the diagnostic.

.. index:: pair: function; isNumeric
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a8214d776ff8252737be8847e57af81b3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isNumeric() const

Returns false.

Must be properly overriden in a type specialization in order to suport the diagnostic.

.. index:: pair: function; isBoolean
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a019fcded83b5f430912904b5fcef3015:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isBoolean() const

Returns false.

Must be properly overriden in a type specialization in order to suport the diagnostic.

.. index:: pair: function; isString
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a418af85e878d2dadf92b9498f45497fe:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isString() const

Returns false.

Must be properly overriden in a type specialization in order to suport the diagnostic.

.. index:: pair: function; size
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1aced857a77fa0f08204c96e552802f2cf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	std::size_t
	size() const

Returns 1 iff :ref:`Var <doxid-class_poco_1_1_dynamic_1_1_var>` is not empty or this function overriden.

.. index:: pair: function; cloneHolder
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a0cb5823ea1d159e69770fa8800c36144:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <typename T>
	VarHolder*
	cloneHolder(
		:ref:`Placeholder<doxid-union_poco_1_1_placeholder>`<VarHolder>* pVarHolder,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` T& val
		) const

Instantiates value holder wrapper.

If size of the wrapper is larger than POCO_SMALL_OBJECT_SIZE, holder is instantiated on the heap, otherwise it is instantiated in-place (in the pre-allocated buffer inside the holder).

Called from :ref:`clone() <doxid-class_poco_1_1_dynamic_1_1_var_holder_1ab96c9c02166f0bb0d0e4c79d64a13e28>` member function of the implementation when smal object optimization is enabled.

.. index:: pair: function; convertToSmaller
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a31905b15d7eaf7957760b35dd107466e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename F,
		typename T
		>
	void
	convertToSmaller(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` F& from,
		T& to
		) const

This function is meant to convert signed numeric values from larger to smaller type.

It checks the upper and lower bound and if from value is within limits of type T (i.e. check calls do not throw), it is converted.

.. index:: pair: function; convertToSmallerUnsigned
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1a0c42265cc1223930471d8f2ca5be2961:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename F,
		typename T
		>
	void
	convertToSmallerUnsigned(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` F& from,
		T& to
		) const

This function is meant for converting unsigned integral data types, from larger to smaller type.

Since lower limit is always 0 for unigned types, only the upper limit is checked, thus saving some cycles compared to the signed version of the function. If the value to be converted is smaller than the maximum value for the target type, the conversion is performed.

.. index:: pair: function; convertSignedToUnsigned
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1ab8911bf9905a7f5d36f67f2c8faa6373:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename F,
		typename T
		>
	void
	convertSignedToUnsigned(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` F& from,
		T& to
		) const

This function is meant for converting signed integral data types to unsigned data types.

Negative values can not be converted and if one is encountered, RangeException is thrown. If upper limit is within the target data type limits, the conversion is performed.

.. index:: pair: function; convertSignedFloatToUnsigned
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1ab786eb9824a614b8773c64aee8a6da35:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename F,
		typename T
		>
	void
	convertSignedFloatToUnsigned(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` F& from,
		T& to
		) const

This function is meant for converting floating point data types to unsigned integral data types.

Negative values can not be converted and if one is encountered, RangeException is thrown. If uper limit is within the target data type limits, the conversion is performed.

.. index:: pair: function; convertUnsignedToSigned
.. _doxid-class_poco_1_1_dynamic_1_1_var_holder_1af800adc7c4f5304c4273d0d041734034:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	template <
		typename F,
		typename T
		>
	void
	convertUnsignedToSigned(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` F& from,
		T& to
		) const

This function is meant for converting unsigned integral data types to unsigned data types.

Negative values can not be converted and if one is encountered, RangeException is thrown. If upper limit is within the target data type limits, the converiosn is performed.

