.. index:: pair: class; Poco::ExpireStrategy
.. _doxid-class_poco_1_1_expire_strategy:

template class Poco::ExpireStrategy
===================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

An :ref:`ExpireStrategy <doxid-class_poco_1_1_expire_strategy>` implements time based expiration of cache entries. :ref:`More...<details-class_poco_1_1_expire_strategy>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <ExpireStrategy.h>
	
	template <
		class TKey,
		class TValue
		>
	class ExpireStrategy: public :ref:`Poco::AbstractStrategy<doxid-class_poco_1_1_abstract_strategy>`
	{
	public:
		// typedefs
	
		typedef std::multimap<:ref:`Timestamp<doxid-class_poco_1_1_timestamp>`, TKey> :target:`TimeIndex<doxid-class_poco_1_1_expire_strategy_1ab87e015dd76fc653be9ad249c6e67dfc>`;
		typedef TimeIndex::iterator :target:`IndexIterator<doxid-class_poco_1_1_expire_strategy_1a5ece691cb80feb68d59f517ef395bb6a>`;
		typedef TimeIndex::const_iterator :target:`ConstIndexIterator<doxid-class_poco_1_1_expire_strategy_1acb6146952384387df8a020cd308dfa0c>`;
		typedef std::map<TKey, :ref:`IndexIterator<doxid-class_poco_1_1_expire_strategy_1a5ece691cb80feb68d59f517ef395bb6a>`> :target:`Keys<doxid-class_poco_1_1_expire_strategy_1a31d71436b141762f4a848bce722215b1>`;
		typedef Keys::iterator :target:`Iterator<doxid-class_poco_1_1_expire_strategy_1a154a23a1ec14d25471ba4ac457f9944c>`;

		// construction
	
		:ref:`ExpireStrategy<doxid-class_poco_1_1_expire_strategy_1af5f05cf959eb42fcd67f023d7bc05908>`(:ref:`Timestamp::TimeDiff<doxid-class_poco_1_1_timestamp_1a23501cdddede36b1551ce48525777b31>` expireTimeInMilliSec);

		// methods
	
		virtual
		void
		:ref:`onAdd<doxid-class_poco_1_1_expire_strategy_1a96c57c841210411ad0115902dc9fd9ce>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`KeyValueArgs<doxid-class_poco_1_1_key_value_args>`<TKey, TValue>& key
			);
	
		virtual
		void
		:ref:`onRemove<doxid-class_poco_1_1_expire_strategy_1a042307a81e5ca09b9dc270ef3b84dc6f>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
			);
	
		virtual
		void
		:ref:`onGet<doxid-class_poco_1_1_expire_strategy_1a15ca99f7e3e187882df654e1da285c07>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
			);
	
		virtual
		void
		:ref:`onClear<doxid-class_poco_1_1_expire_strategy_1ab7abcc01f311831f6e556910fb904ea1>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`EventArgs<doxid-class_poco_1_1_event_args>`& args
			);
	
		virtual
		void
		:ref:`onIsValid<doxid-class_poco_1_1_expire_strategy_1aebee1be484bc5c9f9fa4e931526a3fe4>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`ValidArgs<doxid-class_poco_1_1_valid_args>`<TKey>& key
			);
	
		virtual
		void
		:ref:`onReplace<doxid-class_poco_1_1_expire_strategy_1a92edd15c044d548e62f1d77d0314efd6>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			std::set<TKey>& elemsToRemove
			);

	protected:
		// fields
	
		:ref:`Timestamp::TimeDiff<doxid-class_poco_1_1_timestamp_1a23501cdddede36b1551ce48525777b31>` :target:`_expireTime<doxid-class_poco_1_1_expire_strategy_1a92fc41447058eb99304ca5019cf147d2>`;
		:ref:`Keys<doxid-class_poco_1_1_expire_strategy_1a31d71436b141762f4a848bce722215b1>` :ref:`_keys<doxid-class_poco_1_1_expire_strategy_1aedb5a1e4e9b87c99cea1a87ef14906ac>`;
		:ref:`TimeIndex<doxid-class_poco_1_1_expire_strategy_1ab87e015dd76fc653be9ad249c6e67dfc>` :ref:`_keyIndex<doxid-class_poco_1_1_expire_strategy_1a86682488b32952b372af5743c1d36991>`;
	};

	// direct descendants

	template <
		class TKey,
		class TValue
		>
	class :ref:`AccessExpireStrategy<doxid-class_poco_1_1_access_expire_strategy>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		void
		:ref:`onUpdate<doxid-class_poco_1_1_abstract_strategy_1ae6d1f28a5590ebd288eb644747b016a7>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`KeyValueArgs<doxid-class_poco_1_1_key_value_args>`<TKey, TValue>& args
			);
	
		virtual
		void
		:ref:`onAdd<doxid-class_poco_1_1_abstract_strategy_1a40bb84cd0085c3ff59064cd3d13a21dd>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`KeyValueArgs<doxid-class_poco_1_1_key_value_args>`<TKey, TValue>& key
			) = 0;
	
		virtual
		void
		:ref:`onRemove<doxid-class_poco_1_1_abstract_strategy_1a3c74a0e9b7469f4246ee083252d995ac>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
			) = 0;
	
		virtual
		void
		:ref:`onGet<doxid-class_poco_1_1_abstract_strategy_1a802663d39fa378d09ca76b37daccf8e9>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
			) = 0;
	
		virtual
		void
		:ref:`onClear<doxid-class_poco_1_1_abstract_strategy_1a84d1033a199ef6eea12207f7a40bca72>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`EventArgs<doxid-class_poco_1_1_event_args>`& args
			) = 0;
	
		virtual
		void
		:ref:`onIsValid<doxid-class_poco_1_1_abstract_strategy_1ade01399ff91ed48ca9ab2656c184dc7e>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			:ref:`ValidArgs<doxid-class_poco_1_1_valid_args>`<TKey>& key
			) = 0;
	
		virtual
		void
		:ref:`onReplace<doxid-class_poco_1_1_abstract_strategy_1a344d2caa3f8b5ea1507a5a26c49f7eae>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
			std::set<TKey>& elemsToRemove
			) = 0;

.. _details-class_poco_1_1_expire_strategy:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

An :ref:`ExpireStrategy <doxid-class_poco_1_1_expire_strategy>` implements time based expiration of cache entries.

Fields
------

.. index:: pair: variable; _keys
.. _doxid-class_poco_1_1_expire_strategy_1aedb5a1e4e9b87c99cea1a87ef14906ac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Keys<doxid-class_poco_1_1_expire_strategy_1a31d71436b141762f4a848bce722215b1>` _keys

For faster replacement of keys, the iterator points to the _keyIndex map.

.. index:: pair: variable; _keyIndex
.. _doxid-class_poco_1_1_expire_strategy_1a86682488b32952b372af5743c1d36991:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`TimeIndex<doxid-class_poco_1_1_expire_strategy_1ab87e015dd76fc653be9ad249c6e67dfc>` _keyIndex

Maps time to key value.

Construction
------------

.. index:: pair: function; ExpireStrategy
.. _doxid-class_poco_1_1_expire_strategy_1af5f05cf959eb42fcd67f023d7bc05908:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	ExpireStrategy(:ref:`Timestamp::TimeDiff<doxid-class_poco_1_1_timestamp_1a23501cdddede36b1551ce48525777b31>` expireTimeInMilliSec)

Create an expire strategy.

Note that the smallest allowed caching time is 25ms. Anything lower than that is not useful with current operating systems.

Methods
-------

.. index:: pair: function; onAdd
.. _doxid-class_poco_1_1_expire_strategy_1a96c57c841210411ad0115902dc9fd9ce:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onAdd(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`KeyValueArgs<doxid-class_poco_1_1_key_value_args>`<TKey, TValue>& key
		)

Adds the key to the strategy.

If for the key already an entry exists, an exception will be thrown.

.. index:: pair: function; onRemove
.. _doxid-class_poco_1_1_expire_strategy_1a042307a81e5ca09b9dc270ef3b84dc6f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onRemove(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
		)

Removes an entry from the strategy.

If the entry is not found the remove is ignored.

.. index:: pair: function; onGet
.. _doxid-class_poco_1_1_expire_strategy_1a15ca99f7e3e187882df654e1da285c07:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onGet(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` TKey& key
		)

Informs the strategy that a read-access happens to an element.

.. index:: pair: function; onClear
.. _doxid-class_poco_1_1_expire_strategy_1ab7abcc01f311831f6e556910fb904ea1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onClear(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`EventArgs<doxid-class_poco_1_1_event_args>`& args
		)

Removes all elements from the cache.

.. index:: pair: function; onIsValid
.. _doxid-class_poco_1_1_expire_strategy_1aebee1be484bc5c9f9fa4e931526a3fe4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onIsValid(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		:ref:`ValidArgs<doxid-class_poco_1_1_valid_args>`<TKey>& key
		)

Used to query if a key is still valid (i.e. cached).

.. index:: pair: function; onReplace
.. _doxid-class_poco_1_1_expire_strategy_1a92edd15c044d548e62f1d77d0314efd6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	onReplace(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` void* pSender,
		std::set<TKey>& elemsToRemove
		)

Used by the Strategy to indicate which elements should be removed from the cache.

Note that onReplace does not change the current list of keys. The cache object is reponsible to remove the elements.

