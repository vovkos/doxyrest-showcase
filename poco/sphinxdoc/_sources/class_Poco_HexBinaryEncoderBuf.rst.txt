.. index:: pair: class; Poco::HexBinaryEncoderBuf
.. _doxid-class_poco_1_1_hex_binary_encoder_buf:

class Poco::HexBinaryEncoderBuf
===============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This streambuf encodes all data written to it in hexBinary encoding and forwards it to a connected ostream. :ref:`More...<details-class_poco_1_1_hex_binary_encoder_buf>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <HexBinaryEncoder.h>
	
	class HexBinaryEncoderBuf: public :ref:`Poco::BasicUnbufferedStreamBuf<doxid-class_poco_1_1_basic_unbuffered_stream_buf>`
	{
	public:
		// construction
	
		:target:`HexBinaryEncoderBuf<doxid-class_poco_1_1_hex_binary_encoder_buf_1a365f9586b9e33ced140fc5a41bebd509>`(std::ostream& ostr);

		// methods
	
		int
		:ref:`close<doxid-class_poco_1_1_hex_binary_encoder_buf_1a109b4b9e209345010bc02e3370e2470f>`();
	
		void
		:ref:`setLineLength<doxid-class_poco_1_1_hex_binary_encoder_buf_1a652bec9f8be9538ff4f90853fc5881f0>`(int lineLength);
	
		int
		:ref:`getLineLength<doxid-class_poco_1_1_hex_binary_encoder_buf_1a8d6a3c0aeeae56234208a40db88db59c>`() const;
	
		void
		:ref:`setUppercase<doxid-class_poco_1_1_hex_binary_encoder_buf_1a1f4447425c3bffe06b087821bf6fd793>`(bool flag = true);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		virtual
		:ref:`int_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1af4ed13f581184a5758933d22d83ed58e>`
		:ref:`overflow<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1a383786cdc9ee1858c2be846a6bb95eb5>`(:ref:`int_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1af4ed13f581184a5758933d22d83ed58e>` c);
	
		virtual
		:ref:`int_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1af4ed13f581184a5758933d22d83ed58e>`
		:ref:`underflow<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1a6a1ec03bd68ac0d7d0b690df307548c3>`();
	
		virtual
		:ref:`int_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1af4ed13f581184a5758933d22d83ed58e>`
		:ref:`uflow<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1ac9bdf1db12470b9213e598b6a697a1c8>`();
	
		virtual
		:ref:`int_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1af4ed13f581184a5758933d22d83ed58e>`
		:ref:`pbackfail<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1a25fb7df73df7f7e51fcdf520af0e9c0c>`(:ref:`int_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1af4ed13f581184a5758933d22d83ed58e>` c);
	
		virtual
		std::streamsize
		:ref:`xsgetn<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1ab637da26331962c509da9050b9eb3d6f>`(
			:ref:`char_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1ae1adb26f3babc92ffa99d19d260486dd>`* p,
			std::streamsize count
			);

	protected:
		// typedefs
	
		typedef std::basic_streambuf<ch, tr> :ref:`Base<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1a8d4e5dd8a6723d41cf27e864804335c3>`;
		typedef std::basic_ios<ch, tr> :ref:`IOS<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1af4fc862b52cd539e16848d4e6e7c1375>`;
		typedef ch :ref:`char_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1ae1adb26f3babc92ffa99d19d260486dd>`;
		typedef tr :ref:`char_traits<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1a92ac446a28fe6bda224f89a836db052f>`;
		typedef Base::int_type :ref:`int_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1af4ed13f581184a5758933d22d83ed58e>`;
		typedef Base::pos_type :ref:`pos_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1a7ff4716397c4aa1a590431c31c98db79>`;
		typedef Base::off_type :ref:`off_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1a6b0ee0a102317c7d40e4af00994a7007>`;
		typedef IOS::openmode :ref:`openmode<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1a338f2102e31674bb03238208165ba872>`;

		// methods
	
		static
		:ref:`int_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1af4ed13f581184a5758933d22d83ed58e>`
		:ref:`charToInt<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1a2071547aeb7e1813ec16232c3bc5abe4>`(:ref:`char_type<doxid-class_poco_1_1_basic_unbuffered_stream_buf_1ae1adb26f3babc92ffa99d19d260486dd>` c);

.. _details-class_poco_1_1_hex_binary_encoder_buf:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This streambuf encodes all data written to it in hexBinary encoding and forwards it to a connected ostream.

In hexBinary encoding, each binary octet is encoded as a character tuple, consisting of two hexadecimal digits ([0-9a-fA-F]) representing the octet code. See also: :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` Schema Part 2: Datatypes (`http://www.w3.org/TR/xmlschema-2/ <http://www.w3.org/TR/xmlschema-2/>`__), section 3.2.15.

Note: The characters are directly written to the ostream's streambuf, thus bypassing the ostream. The ostream's state is therefore not updated to match the buffer's state.

Methods
-------

.. index:: pair: function; close
.. _doxid-class_poco_1_1_hex_binary_encoder_buf_1a109b4b9e209345010bc02e3370e2470f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	close()

Closes the stream buffer.

.. index:: pair: function; setLineLength
.. _doxid-class_poco_1_1_hex_binary_encoder_buf_1a652bec9f8be9538ff4f90853fc5881f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setLineLength(int lineLength)

Specify the line length.

After the given number of characters have been written, a newline character will be written.

Specify 0 for an unlimited line length.

.. index:: pair: function; getLineLength
.. _doxid-class_poco_1_1_hex_binary_encoder_buf_1a8d6a3c0aeeae56234208a40db88db59c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	getLineLength() const

Returns the currently set line length.

.. index:: pair: function; setUppercase
.. _doxid-class_poco_1_1_hex_binary_encoder_buf_1a1f4447425c3bffe06b087821bf6fd793:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	setUppercase(bool flag = true)

Specify whether hex digits a-f are written in upper or lower case.

