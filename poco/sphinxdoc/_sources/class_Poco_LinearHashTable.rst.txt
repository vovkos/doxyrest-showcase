.. index:: pair: class; Poco::LinearHashTable
.. _doxid-class_poco_1_1_linear_hash_table:

template class Poco::LinearHashTable
====================================

.. toctree::
	:hidden:

	class_Poco_LinearHashTable_ConstIterator.rst
	class_Poco_LinearHashTable_Iterator.rst

Overview
~~~~~~~~

This class implements a linear hash table. :ref:`More...<details-class_poco_1_1_linear_hash_table>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <LinearHashTable.h>
	
	template <
		class Value,
		class HashFunc = Hash<Value>
		>
	class LinearHashTable
	{
	public:
		// typedefs
	
		typedef Value :target:`ValueType<doxid-class_poco_1_1_linear_hash_table_1a64d1d6194e08f50a47ea2cfd309adffe>`;
		typedef Value& :target:`Reference<doxid-class_poco_1_1_linear_hash_table_1a72f620f15d4008d0559ce42c5f8de332>`;
		typedef :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& :target:`ConstReference<doxid-class_poco_1_1_linear_hash_table_1a8fcb4dc133603b19f999611d45d2022c>`;
		typedef Value* :target:`Pointer<doxid-class_poco_1_1_linear_hash_table_1a2ddfe03d2ca3ae2b9d020bcae8646e8a>`;
		typedef :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value* :target:`ConstPointer<doxid-class_poco_1_1_linear_hash_table_1a7ba750ce434453db84a9974a23d0a868>`;
		typedef HashFunc :target:`Hash<doxid-class_poco_1_1_linear_hash_table_1a403e78bc5b1ffb9951f5a36e6007afa4>`;
		typedef std::vector<Value> :target:`Bucket<doxid-class_poco_1_1_linear_hash_table_1a73a5bc2cd60fba968e8ae14842a531dd>`;
		typedef std::vector<:ref:`Bucket<doxid-class_poco_1_1_linear_hash_table_1a73a5bc2cd60fba968e8ae14842a531dd>`> :target:`BucketVec<doxid-class_poco_1_1_linear_hash_table_1a51f60add5f23a96cfc55fb05d769161a>`;
		typedef Bucket::iterator :target:`BucketIterator<doxid-class_poco_1_1_linear_hash_table_1abb791f00a0e46e6b3c5f73aabfeef7b4>`;
		typedef BucketVec::iterator :target:`BucketVecIterator<doxid-class_poco_1_1_linear_hash_table_1a47fbb9cd4365b51903b4449765916630>`;

		// classes
	
		class :ref:`ConstIterator<doxid-class_poco_1_1_linear_hash_table_1_1_const_iterator>`;
		class :ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>`;

		// construction
	
		:target:`LinearHashTable<doxid-class_poco_1_1_linear_hash_table_1a526254898c2050ba0a4e1f83f5a6aedf>`(std::size_t initialReserve = 64);
		:target:`LinearHashTable<doxid-class_poco_1_1_linear_hash_table_1a70ac020110679b212b757a74f22ef8dc>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LinearHashTable& table);

		// methods
	
		LinearHashTable&
		:ref:`operator=<doxid-class_poco_1_1_linear_hash_table_1a5c72c5b4fc9641a5b864a26a83dac711>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LinearHashTable& table);
	
		void
		:ref:`swap<doxid-class_poco_1_1_linear_hash_table_1a8edf2b3a0b0afa5b2f8a239a0ef0b9f6>`(LinearHashTable& table);
	
		:ref:`ConstIterator<doxid-class_poco_1_1_linear_hash_table_1_1_const_iterator>`
		:ref:`begin<doxid-class_poco_1_1_linear_hash_table_1a3302d631bcad206f88900a950e9cf38b>`() const;
	
		:ref:`ConstIterator<doxid-class_poco_1_1_linear_hash_table_1_1_const_iterator>`
		:ref:`end<doxid-class_poco_1_1_linear_hash_table_1a4997d9c1422df02bf2c1b11e6a3463e0>`() const;
	
		:ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>`
		:ref:`begin<doxid-class_poco_1_1_linear_hash_table_1ae4f3b860b94d0a4b6975be9af80b8e68>`();
	
		:ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>`
		:ref:`end<doxid-class_poco_1_1_linear_hash_table_1ac80b47647b5796283cb9f90fb9bd585b>`();
	
		:ref:`ConstIterator<doxid-class_poco_1_1_linear_hash_table_1_1_const_iterator>`
		:ref:`find<doxid-class_poco_1_1_linear_hash_table_1ad1c9de1d81fbfbf9862b863fd473879e>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value) const;
	
		:ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>`
		:ref:`find<doxid-class_poco_1_1_linear_hash_table_1a66ff966f295816d921a41401ff0a43d9>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value);
	
		std::size_t
		:ref:`count<doxid-class_poco_1_1_linear_hash_table_1a7949cbed4b1c4fd60dfe3854cad5b4e1>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value) const;
	
		std::pair<:ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>`, bool>
		:ref:`insert<doxid-class_poco_1_1_linear_hash_table_1af6c6f671ba26146e8585a3a58a887859>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value);
	
		void
		:ref:`erase<doxid-class_poco_1_1_linear_hash_table_1abc77290616fb28e6baccf10f6f1068e7>`(:ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>` it);
	
		void
		:ref:`erase<doxid-class_poco_1_1_linear_hash_table_1a9a01f6d03e6464dc867090478a8a04a3>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value);
	
		void
		:ref:`clear<doxid-class_poco_1_1_linear_hash_table_1a537d628cd0853b8ee5ddea0d613fe249>`();
	
		std::size_t
		:ref:`size<doxid-class_poco_1_1_linear_hash_table_1ae3e5c2d199ead1df56265e436c2f3e6a>`() const;
	
		bool
		:ref:`empty<doxid-class_poco_1_1_linear_hash_table_1a65586d49fae9ad1affaf1dfee306e7eb>`() const;
	
		std::size_t
		:ref:`buckets<doxid-class_poco_1_1_linear_hash_table_1ad2e89a7d7bff4db92702b3c766d2a002>`() const;

	protected:
		// methods
	
		std::size_t
		:target:`bucketAddress<doxid-class_poco_1_1_linear_hash_table_1a0bc149c7a2533b67c070276f527c0e35>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value) const;
	
		std::size_t
		:target:`bucketAddressForHash<doxid-class_poco_1_1_linear_hash_table_1a5f52926288cc59d57af5755978c2a150>`(std::size_t hash);
	
		void
		:target:`split<doxid-class_poco_1_1_linear_hash_table_1a7289eea3e13d5d0e32137248486c9d8c>`();
	
		void
		:target:`merge<doxid-class_poco_1_1_linear_hash_table_1a843824ff2b29dda945f2f7601d2b491b>`();
	
		static
		std::size_t
		:target:`calcSize<doxid-class_poco_1_1_linear_hash_table_1ade674c43f0bcadcc6c3827c7adb0a857>`(std::size_t initialSize);
	};
.. _details-class_poco_1_1_linear_hash_table:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This class implements a linear hash table.

In a linear hash table, the available address space grows or shrinks dynamically. A linar hash table thus supports any number of insertions or deletions without lookup or insertion performance deterioration.

Linear hashing was discovered by Witold Litwin in 1980 and described in the paper LINEAR HASHING: A NEW TOOL FOR FILE AND TABLE ADDRESSING.

For more information on linear hashing, see `http://en.wikipedia.org/wiki/Linear_hash <http://en.wikipedia.org/wiki/Linear_hash>`__.

The :ref:`LinearHashTable <doxid-class_poco_1_1_linear_hash_table>` is not thread safe.

Value must support comparison for equality.

Find, insert and delete operations are basically O(1) with regard to the total number of elements in the table, and O(N) with regard to the number of elements in the bucket where the element is stored. On average, every bucket stores one element; the exact number depends on the quality of the hash function. In most cases, the maximum number of elements in a bucket should not exceed 3.

Construction
------------

.. _doxid-class_poco_1_1_linear_hash_table_1a127fa287bf62c4e72c479b2bad1df0d9:
.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	~LinearHashTable()

Destroys the :ref:`LinearHashTable <doxid-class_poco_1_1_linear_hash_table>`.

Methods
-------

.. index:: pair: function; operator=
.. _doxid-class_poco_1_1_linear_hash_table_1a5c72c5b4fc9641a5b864a26a83dac711:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	LinearHashTable&
	operator=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` LinearHashTable& table)

Assigns another :ref:`LinearHashTable <doxid-class_poco_1_1_linear_hash_table>`.

.. index:: pair: function; swap
.. _doxid-class_poco_1_1_linear_hash_table_1a8edf2b3a0b0afa5b2f8a239a0ef0b9f6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	swap(LinearHashTable& table)

Swaps the :ref:`LinearHashTable <doxid-class_poco_1_1_linear_hash_table>` with another one.

.. index:: pair: function; begin
.. _doxid-class_poco_1_1_linear_hash_table_1a3302d631bcad206f88900a950e9cf38b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`ConstIterator<doxid-class_poco_1_1_linear_hash_table_1_1_const_iterator>`
	begin() const

Returns an iterator pointing to the first entry, if one exists.

.. index:: pair: function; end
.. _doxid-class_poco_1_1_linear_hash_table_1a4997d9c1422df02bf2c1b11e6a3463e0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`ConstIterator<doxid-class_poco_1_1_linear_hash_table_1_1_const_iterator>`
	end() const

Returns an iterator pointing to the end of the table.

.. index:: pair: function; begin
.. _doxid-class_poco_1_1_linear_hash_table_1ae4f3b860b94d0a4b6975be9af80b8e68:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>`
	begin()

Returns an iterator pointing to the first entry, if one exists.

.. index:: pair: function; end
.. _doxid-class_poco_1_1_linear_hash_table_1ac80b47647b5796283cb9f90fb9bd585b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>`
	end()

Returns an iterator pointing to the end of the table.

.. index:: pair: function; find
.. _doxid-class_poco_1_1_linear_hash_table_1ad1c9de1d81fbfbf9862b863fd473879e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`ConstIterator<doxid-class_poco_1_1_linear_hash_table_1_1_const_iterator>`
	find(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value) const

Finds an entry in the table.

.. index:: pair: function; find
.. _doxid-class_poco_1_1_linear_hash_table_1a66ff966f295816d921a41401ff0a43d9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>`
	find(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value)

Finds an entry in the table.

.. index:: pair: function; count
.. _doxid-class_poco_1_1_linear_hash_table_1a7949cbed4b1c4fd60dfe3854cad5b4e1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	count(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value) const

Returns the number of elements with the given value, with is either 1 or 0.

.. index:: pair: function; insert
.. _doxid-class_poco_1_1_linear_hash_table_1af6c6f671ba26146e8585a3a58a887859:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::pair<:ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>`, bool>
	insert(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value)

Inserts an element into the table.

If the element already exists in the table, a pair(iterator, false) with iterator pointing to the existing element is returned. Otherwise, the element is inserted an a pair(iterator, true) with iterator pointing to the new element is returned.

.. index:: pair: function; erase
.. _doxid-class_poco_1_1_linear_hash_table_1abc77290616fb28e6baccf10f6f1068e7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	erase(:ref:`Iterator<doxid-class_poco_1_1_linear_hash_table_1_1_iterator>` it)

Erases the element pointed to by it.

.. index:: pair: function; erase
.. _doxid-class_poco_1_1_linear_hash_table_1a9a01f6d03e6464dc867090478a8a04a3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	erase(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` Value& value)

Erases the element with the given value, if it exists.

.. index:: pair: function; clear
.. _doxid-class_poco_1_1_linear_hash_table_1a537d628cd0853b8ee5ddea0d613fe249:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	clear()

Erases all elements.

.. index:: pair: function; size
.. _doxid-class_poco_1_1_linear_hash_table_1ae3e5c2d199ead1df56265e436c2f3e6a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	size() const

Returns the number of elements in the table.

.. index:: pair: function; empty
.. _doxid-class_poco_1_1_linear_hash_table_1a65586d49fae9ad1affaf1dfee306e7eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	empty() const

Returns true iff the table is empty.

.. index:: pair: function; buckets
.. _doxid-class_poco_1_1_linear_hash_table_1ad2e89a7d7bff4db92702b3c766d2a002:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::size_t
	buckets() const

Returns the number of allocated buckets.

