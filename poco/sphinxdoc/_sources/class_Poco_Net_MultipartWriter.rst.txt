.. index:: pair: class; Poco::Net::MultipartWriter
.. _doxid-class_poco_1_1_net_1_1_multipart_writer:

class Poco::Net::MultipartWriter
================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This class is used to write MIME multipart messages to an output stream. :ref:`More...<details-class_poco_1_1_net_1_1_multipart_writer>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <MultipartWriter.h>
	
	class MultipartWriter
	{
	public:
		// construction
	
		:ref:`MultipartWriter<doxid-class_poco_1_1_net_1_1_multipart_writer_1a9ae90dbe47b5f51d5c3602909bcd1409>`(std::ostream& ostr);
	
		:ref:`MultipartWriter<doxid-class_poco_1_1_net_1_1_multipart_writer_1a961d9c12e390770d922a618f52396053>`(
			std::ostream& ostr,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& boundary
			);

		// methods
	
		void
		:ref:`nextPart<doxid-class_poco_1_1_net_1_1_multipart_writer_1a163051f043aac77e49e8a1228f2a9a08>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`MessageHeader<doxid-class_poco_1_1_net_1_1_message_header>`& header);
	
		void
		:ref:`close<doxid-class_poco_1_1_net_1_1_multipart_writer_1a43790b24cca533dbbb35710b8d6aac40>`();
	
		std::ostream&
		:ref:`stream<doxid-class_poco_1_1_net_1_1_multipart_writer_1a8b3a51f6e153d982172a59431636967c>`();
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
		:ref:`boundary<doxid-class_poco_1_1_net_1_1_multipart_writer_1aac9ed4288d570a227158ae0d8b21c6d8>`() const;
	
		static
		std::string
		:ref:`createBoundary<doxid-class_poco_1_1_net_1_1_multipart_writer_1aa0c7323d787d7720f346d60223973743>`();
	};
.. _details-class_poco_1_1_net_1_1_multipart_writer:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This class is used to write MIME multipart messages to an output stream.

The format of multipart messages is described in section 5.1 of RFC 2046.

To create a multipart message, first create a :ref:`MultipartWriter <doxid-class_poco_1_1_net_1_1_multipart_writer>` object. Then, for each part, call :ref:`nextPart() <doxid-class_poco_1_1_net_1_1_multipart_writer_1a163051f043aac77e49e8a1228f2a9a08>` and write the content to the output stream. Repeat for all parts. After the last part has been written, call :ref:`close() <doxid-class_poco_1_1_net_1_1_multipart_writer_1a43790b24cca533dbbb35710b8d6aac40>` to finish the multipart message.

Construction
------------

.. index:: pair: function; MultipartWriter
.. _doxid-class_poco_1_1_net_1_1_multipart_writer_1a9ae90dbe47b5f51d5c3602909bcd1409:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	MultipartWriter(std::ostream& ostr)

Creates the :ref:`MultipartWriter <doxid-class_poco_1_1_net_1_1_multipart_writer>`, using the given output stream.

Creates a random boundary string.

.. index:: pair: function; MultipartWriter
.. _doxid-class_poco_1_1_net_1_1_multipart_writer_1a961d9c12e390770d922a618f52396053:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	MultipartWriter(
		std::ostream& ostr,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& boundary
		)

Creates the :ref:`MultipartWriter <doxid-class_poco_1_1_net_1_1_multipart_writer>`, using the given output stream and boundary string.

Methods
-------

.. index:: pair: function; nextPart
.. _doxid-class_poco_1_1_net_1_1_multipart_writer_1a163051f043aac77e49e8a1228f2a9a08:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	nextPart(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`MessageHeader<doxid-class_poco_1_1_net_1_1_message_header>`& header)

Opens a new message part and writes the message boundary string, followed by the message header to the stream.

.. index:: pair: function; close
.. _doxid-class_poco_1_1_net_1_1_multipart_writer_1a43790b24cca533dbbb35710b8d6aac40:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	void
	close()

Closes the multipart message and writes the terminating boundary string.

Does not close the underlying stream.

.. index:: pair: function; stream
.. _doxid-class_poco_1_1_net_1_1_multipart_writer_1a8b3a51f6e153d982172a59431636967c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	std::ostream&
	stream()

Returns the writer's stream.

.. index:: pair: function; boundary
.. _doxid-class_poco_1_1_net_1_1_multipart_writer_1aac9ed4288d570a227158ae0d8b21c6d8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string&
	boundary() const

Returns the multipart boundary used by this writer.

.. index:: pair: function; createBoundary
.. _doxid-class_poco_1_1_net_1_1_multipart_writer_1aa0c7323d787d7720f346d60223973743:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	std::string
	createBoundary()

Creates a random boundary string.

The string always has the form MIME_boundary_XXXXXXXXXXXX, where XXXXXXXXXXXX is a random hexadecimal number.

