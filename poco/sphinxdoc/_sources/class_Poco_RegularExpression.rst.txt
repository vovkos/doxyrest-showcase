.. index:: pair: class; Poco::RegularExpression
.. _doxid-class_poco_1_1_regular_expression:

class Poco::RegularExpression
=============================

.. toctree::
	:hidden:

	enum_Poco_RegularExpression_Options.rst
	struct_Poco_RegularExpression_Match.rst

Overview
~~~~~~~~

A class for working with regular expressions. :ref:`More...<details-class_poco_1_1_regular_expression>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <RegularExpression.h>
	
	class RegularExpression
	{
	public:
		// typedefs
	
		typedef std::vector<:ref:`Match<doxid-struct_poco_1_1_regular_expression_1_1_match>`> :target:`MatchVec<doxid-class_poco_1_1_regular_expression_1a92401c62ff6579878064b810c7e3367a>`;

		// enums
	
		enum :ref:`Options<doxid-class_poco_1_1_regular_expression_1acca6c3db6368cb258f2ff7b4c7fec46b>`;

		// structs
	
		struct :ref:`Match<doxid-struct_poco_1_1_regular_expression_1_1_match>`;

		// construction
	
		:ref:`RegularExpression<doxid-class_poco_1_1_regular_expression_1a6b6d4b23028321d8695b11e202ed0cc2>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& pattern,
			int options = 0,
			bool study = true
			);

		// methods
	
		int
		:ref:`match<doxid-class_poco_1_1_regular_expression_1a2de1c06f9457bafb3e76b530d893249e>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
			:ref:`Match<doxid-struct_poco_1_1_regular_expression_1_1_match>`& mtch,
			int options = 0
			) const;
	
		int
		:ref:`match<doxid-class_poco_1_1_regular_expression_1ab6bb7951c2526f0612addcf0604da855>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
			std::string::size_type offset,
			:ref:`Match<doxid-struct_poco_1_1_regular_expression_1_1_match>`& mtch,
			int options = 0
			) const;
	
		int
		:ref:`match<doxid-class_poco_1_1_regular_expression_1a46ba66dd69506546249f642c9513814c>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
			std::string::size_type offset,
			:ref:`MatchVec<doxid-class_poco_1_1_regular_expression_1a92401c62ff6579878064b810c7e3367a>`& matches,
			int options = 0
			) const;
	
		bool
		:ref:`match<doxid-class_poco_1_1_regular_expression_1ac524225264e99acc366dd79a5527c661>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
			std::string::size_type offset = 0
			) const;
	
		bool
		:ref:`match<doxid-class_poco_1_1_regular_expression_1a3d8ae972d95827fa786993884b32e353>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
			std::string::size_type offset,
			int options
			) const;
	
		bool
		:ref:`operator==<doxid-class_poco_1_1_regular_expression_1ab03e08e02524f82978b2902d6553b907>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject) const;
	
		bool
		:ref:`operator!=<doxid-class_poco_1_1_regular_expression_1aa7c34bbaf443ed812d8e04da7165e6d8>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject) const;
	
		int
		:ref:`extract<doxid-class_poco_1_1_regular_expression_1a3f5a2e3b25a0771e391ba1f0f83935b2>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
			std::string& str,
			int options = 0
			) const;
	
		int
		:ref:`extract<doxid-class_poco_1_1_regular_expression_1a05f8116a314ff54692b4cd040faac1e5>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
			std::string::size_type offset,
			std::string& str,
			int options = 0
			) const;
	
		int
		:ref:`split<doxid-class_poco_1_1_regular_expression_1a7f435740ac0f1af4a84a55b01f6fb742>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
			std::vector<std::string>& strings,
			int options = 0
			) const;
	
		int
		:ref:`split<doxid-class_poco_1_1_regular_expression_1a3427d91e9cfba94386fb7f1ce3de8cc3>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
			std::string::size_type offset,
			std::vector<std::string>& strings,
			int options = 0
			) const;
	
		int
		:ref:`subst<doxid-class_poco_1_1_regular_expression_1a06c9740ee8ea2bc1e9ab7666be5886bd>`(
			std::string& subject,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& replacement,
			int options = 0
			) const;
	
		int
		:ref:`subst<doxid-class_poco_1_1_regular_expression_1af798005d5f7788bd6a9dcb47b46bdd30>`(
			std::string& subject,
			std::string::size_type offset,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& replacement,
			int options = 0
			) const;
	
		static
		bool
		:ref:`match<doxid-class_poco_1_1_regular_expression_1a280db3e60410decc57514ee4dc22b1d1>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& pattern,
			int options = 0
			);

	protected:
		// methods
	
		std::string::size_type
		:target:`substOne<doxid-class_poco_1_1_regular_expression_1a18496777060d50b771567f5e3028b53e>`(
			std::string& subject,
			std::string::size_type offset,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& replacement,
			int options
			) const;
	};
.. _details-class_poco_1_1_regular_expression:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

A class for working with regular expressions.

Implemented using PCRE, the Perl Compatible Regular Expressions library by Philip Hazel (see `http://www.pcre.org <http://www.pcre.org>`__).

Construction
------------

.. index:: pair: function; RegularExpression
.. _doxid-class_poco_1_1_regular_expression_1a6b6d4b23028321d8695b11e202ed0cc2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	RegularExpression(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& pattern,
		int options = 0,
		bool study = true
		)

Creates a regular expression and parses the given pattern.

If study is true, the pattern is analyzed and optimized. This is mainly useful if the pattern is used more than once. For a description of the options, please see the PCRE documentation. Throws a RegularExpressionException if the patter cannot be compiled.

Methods
-------

.. index:: pair: function; match
.. _doxid-class_poco_1_1_regular_expression_1a2de1c06f9457bafb3e76b530d893249e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	match(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
		:ref:`Match<doxid-struct_poco_1_1_regular_expression_1_1_match>`& mtch,
		int options = 0
		) const

Matches the given subject string against the pattern.

Returns the position of the first captured substring in mtch. If no part of the subject matches the pattern, mtch.offset is std::string::npos and mtch.length is 0. Throws a RegularExpressionException in case of an error. Returns the number of matches.

.. index:: pair: function; match
.. _doxid-class_poco_1_1_regular_expression_1ab6bb7951c2526f0612addcf0604da855:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	match(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
		std::string::size_type offset,
		:ref:`Match<doxid-struct_poco_1_1_regular_expression_1_1_match>`& mtch,
		int options = 0
		) const

Matches the given subject string, starting at offset, against the pattern.

Returns the position of the captured substring in mtch. If no part of the subject matches the pattern, mtch.offset is std::string::npos and mtch.length is 0. Throws a RegularExpressionException in case of an error. Returns the number of matches.

.. index:: pair: function; match
.. _doxid-class_poco_1_1_regular_expression_1a46ba66dd69506546249f642c9513814c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	match(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
		std::string::size_type offset,
		:ref:`MatchVec<doxid-class_poco_1_1_regular_expression_1a92401c62ff6579878064b810c7e3367a>`& matches,
		int options = 0
		) const

Matches the given subject string against the pattern.

The first entry in matches contains the position of the captured substring. The following entries identify matching subpatterns. See the PCRE documentation for a more detailed explanation. If no part of the subject matches the pattern, matches is empty. Throws a RegularExpressionException in case of an error. Returns the number of matches.

.. index:: pair: function; match
.. _doxid-class_poco_1_1_regular_expression_1ac524225264e99acc366dd79a5527c661:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	match(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
		std::string::size_type offset = 0
		) const

Returns true if and only if the subject matches the regular expression.

Internally, this method sets the RE_ANCHORED and RE_NOTEMPTY options for matching, which means that the empty string will never match and the pattern is treated as if it starts with a ^.

.. index:: pair: function; match
.. _doxid-class_poco_1_1_regular_expression_1a3d8ae972d95827fa786993884b32e353:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	match(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
		std::string::size_type offset,
		int options
		) const

Returns true if and only if the subject matches the regular expression.

.. index:: pair: function; operator==
.. _doxid-class_poco_1_1_regular_expression_1ab03e08e02524f82978b2902d6553b907:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator==(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject) const

Returns true if and only if the subject matches the regular expression.

Internally, this method sets the RE_ANCHORED and RE_NOTEMPTY options for matching, which means that the empty string will never match and the pattern is treated as if it starts with a ^.

.. index:: pair: function; operator!=
.. _doxid-class_poco_1_1_regular_expression_1aa7c34bbaf443ed812d8e04da7165e6d8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	operator!=(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject) const

Returns true if and only if the subject does not match the regular expression.

Internally, this method sets the RE_ANCHORED and RE_NOTEMPTY options for matching, which means that the empty string will never match and the pattern is treated as if it starts with a ^.

.. index:: pair: function; extract
.. _doxid-class_poco_1_1_regular_expression_1a3f5a2e3b25a0771e391ba1f0f83935b2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	extract(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
		std::string& str,
		int options = 0
		) const

Matches the given subject string against the pattern.

Returns the captured string. Throws a RegularExpressionException in case of an error. Returns the number of matches.

.. index:: pair: function; extract
.. _doxid-class_poco_1_1_regular_expression_1a05f8116a314ff54692b4cd040faac1e5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	extract(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
		std::string::size_type offset,
		std::string& str,
		int options = 0
		) const

Matches the given subject string, starting at offset, against the pattern.

Returns the captured string. Throws a RegularExpressionException in case of an error. Returns the number of matches.

.. index:: pair: function; split
.. _doxid-class_poco_1_1_regular_expression_1a7f435740ac0f1af4a84a55b01f6fb742:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	split(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
		std::vector<std::string>& strings,
		int options = 0
		) const

Matches the given subject string against the pattern.

The first entry in captured is the captured substring. The following entries contain substrings matching subpatterns. See the PCRE documentation for a more detailed explanation. If no part of the subject matches the pattern, captured is empty. Throws a RegularExpressionException in case of an error. Returns the number of matches.

.. index:: pair: function; split
.. _doxid-class_poco_1_1_regular_expression_1a3427d91e9cfba94386fb7f1ce3de8cc3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	split(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
		std::string::size_type offset,
		std::vector<std::string>& strings,
		int options = 0
		) const

Matches the given subject string against the pattern.

The first entry in captured is the captured substring. The following entries contain substrings matching subpatterns. See the PCRE documentation for a more detailed explanation. If no part of the subject matches the pattern, captured is empty. Throws a RegularExpressionException in case of an error. Returns the number of matches.

.. index:: pair: function; subst
.. _doxid-class_poco_1_1_regular_expression_1a06c9740ee8ea2bc1e9ab7666be5886bd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	subst(
		std::string& subject,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& replacement,
		int options = 0
		) const

Substitute in subject all matches of the pattern with replacement.

If RE_GLOBAL is specified as option, all matches are replaced. Otherwise, only the first match is replaced. Occurences of $<n> (for example, $1, $2, ...) in replacement are replaced with the corresponding captured string. $0 is the original subject string. Returns the number of replaced occurences.

.. index:: pair: function; subst
.. _doxid-class_poco_1_1_regular_expression_1af798005d5f7788bd6a9dcb47b46bdd30:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	subst(
		std::string& subject,
		std::string::size_type offset,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& replacement,
		int options = 0
		) const

Substitute in subject all matches of the pattern with replacement, starting at offset.

If RE_GLOBAL is specified as option, all matches are replaced. Otherwise, only the first match is replaced. Unless RE_NO_VARS is specified, occurences of $<n> (for example, $0, $1, $2, ... $9) in replacement are replaced with the corresponding captured string. $0 is the captured substring. $1 ... $n are the substrings maching the subpatterns. Returns the number of replaced occurences.

.. index:: pair: function; match
.. _doxid-class_poco_1_1_regular_expression_1a280db3e60410decc57514ee4dc22b1d1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	bool
	match(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& subject,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& pattern,
		int options = 0
		)

Matches the given subject string against the regular expression given in pattern, using the given options.

