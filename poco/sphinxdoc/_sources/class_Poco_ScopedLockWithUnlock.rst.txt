.. index:: pair: class; Poco::ScopedLockWithUnlock
.. _doxid-class_poco_1_1_scoped_lock_with_unlock:

template class Poco::ScopedLockWithUnlock
=========================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

A class that simplifies thread synchronization with a mutex. :ref:`More...<details-class_poco_1_1_scoped_lock_with_unlock>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <ScopedLock.h>
	
	template <class M>
	class ScopedLockWithUnlock
	{
	public:
		// construction
	
		:target:`ScopedLockWithUnlock<doxid-class_poco_1_1_scoped_lock_with_unlock_1a7bae1d57a21b83f7d6399691c4edd5ad>`(M& mutex);
	
		:target:`ScopedLockWithUnlock<doxid-class_poco_1_1_scoped_lock_with_unlock_1ae417ce952f8d188cbd80c14dc86a369c>`(
			M& mutex,
			long milliseconds
			);

		// methods
	
		void
		:target:`unlock<doxid-class_poco_1_1_scoped_lock_with_unlock_1aed2428d93a24025eaf802a938aa60d45>`();
	};
.. _details-class_poco_1_1_scoped_lock_with_unlock:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

A class that simplifies thread synchronization with a mutex.

The constructor accepts a :ref:`Mutex <doxid-class_poco_1_1_mutex>` (and optionally a timeout value in milliseconds) and locks it. The destructor unlocks the mutex. The :ref:`unlock() <doxid-class_poco_1_1_scoped_lock_with_unlock_1aed2428d93a24025eaf802a938aa60d45>` member function allows for manual unlocking of the mutex.

