.. index:: pair: class; Poco::Util::ServerApplication
.. _doxid-class_poco_1_1_util_1_1_server_application:

class Poco::Util::ServerApplication
===================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

A subclass of the :ref:`Application <doxid-class_poco_1_1_util_1_1_application>` class that is used for implementing server applications. :ref:`More...<details-class_poco_1_1_util_1_1_server_application>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <ServerApplication.h>
	
	class ServerApplication: public :ref:`Poco::Util::Application<doxid-class_poco_1_1_util_1_1_application>`
	{
	public:
		// methods
	
		bool
		:ref:`isInteractive<doxid-class_poco_1_1_util_1_1_server_application_1a71083518a647971fa29b4b57ed74d8b2>`() const;
	
		int
		:ref:`run<doxid-class_poco_1_1_util_1_1_server_application_1ac5151930516267f08abe6d1fe1fe1951>`(
			int argc,
			char** argv
			);
	
		int
		:ref:`run<doxid-class_poco_1_1_util_1_1_server_application_1adc2bc7dfff305e305385fd758eed0753>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::vector<std::string>& args);
	
		static
		void
		:ref:`terminate<doxid-class_poco_1_1_util_1_1_server_application_1a42abcc7f77de41d1757a5680adcf04ea>`();

	protected:
		// methods
	
		virtual
		int
		:ref:`run<doxid-class_poco_1_1_util_1_1_server_application_1aefa48a05c28bc1eaf977a0824f3d5b58>`();
	
		void
		:target:`waitForTerminationRequest<doxid-class_poco_1_1_util_1_1_server_application_1a17d66f7da578059c52e06a70031072e2>`();
	
		virtual
		void
		:ref:`defineOptions<doxid-class_poco_1_1_util_1_1_server_application_1aeb9576c971c170fa354434f1fd8d9ee4>`(:ref:`OptionSet<doxid-class_poco_1_1_util_1_1_option_set>`& options);
	};

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// typedefs
	
		typedef std::vector<std::string> :ref:`ArgVec<doxid-class_poco_1_1_util_1_1_application_1accd143b1d2fc7c33a5d7893559a4c33d>`;
		typedef :ref:`Poco::AutoPtr<doxid-class_poco_1_1_auto_ptr>`<:ref:`Subsystem<doxid-class_poco_1_1_util_1_1_subsystem>`> :ref:`SubsystemPtr<doxid-class_poco_1_1_util_1_1_application_1a20cd876756108ac961fa19b65920bf78>`;
		typedef std::vector<:ref:`SubsystemPtr<doxid-class_poco_1_1_util_1_1_application_1a20cd876756108ac961fa19b65920bf78>`> :ref:`SubsystemVec<doxid-class_poco_1_1_util_1_1_application_1a4d96050661f69896675bd83306d3b80f>`;

		// enums
	
		enum :ref:`ConfigPriority<doxid-class_poco_1_1_util_1_1_application_1ad2e6b943e41dace26e409449c8ef14bf>`;
		enum :ref:`ExitCode<doxid-class_poco_1_1_util_1_1_application_1a1b88d1779acc01fb934649c9a27caa8f>`;

		// methods
	
		void
		:ref:`duplicate<doxid-class_poco_1_1_ref_counted_object_1a13296da57127169ed0709b3dde86bf0d>`() const;
	
		void
		:ref:`release<doxid-class_poco_1_1_ref_counted_object_1a14bf204923a6ba4b97df6f8fdb9deb72>`() const;
	
		int
		:ref:`referenceCount<doxid-class_poco_1_1_ref_counted_object_1a45b62ccd833bcb06055399c2d889eb35>`() const;
	
		virtual
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char*
		:ref:`name<doxid-class_poco_1_1_util_1_1_subsystem_1a5ae9dd61f69ee662d46e5c5c9cd82427>`() const = 0;
	
		void
		:ref:`addSubsystem<doxid-class_poco_1_1_util_1_1_application_1a7734399c3508fed8a2c224ccbc8e7abf>`(:ref:`Subsystem<doxid-class_poco_1_1_util_1_1_subsystem>`* pSubsystem);
	
		void
		:ref:`init<doxid-class_poco_1_1_util_1_1_application_1ae6e5c68faf7d4b22a280d24589bd2302>`(
			int argc,
			char* argv []
			);
	
		void
		:ref:`init<doxid-class_poco_1_1_util_1_1_application_1a5cceaeb3bd3ffc3228da0756280aa277>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`ArgVec<doxid-class_poco_1_1_util_1_1_application_1accd143b1d2fc7c33a5d7893559a4c33d>`& args);
	
		bool
		:ref:`initialized<doxid-class_poco_1_1_util_1_1_application_1a7a971004d692ef83ca7b09bd0f5d5bc8>`() const;
	
		void
		:ref:`setUnixOptions<doxid-class_poco_1_1_util_1_1_application_1a012fe44249112aa5d8558cbd04437d65>`(bool flag);
	
		int
		:ref:`loadConfiguration<doxid-class_poco_1_1_util_1_1_application_1a11e1d403f05c0f980d24f9555c8777b9>`(int priority = :ref:`PRIO_DEFAULT<doxid-class_poco_1_1_util_1_1_application_1ad2e6b943e41dace26e409449c8ef14bfae77af34ccfbd0fc8247a1c458a811313>`);
	
		void
		:ref:`loadConfiguration<doxid-class_poco_1_1_util_1_1_application_1ae5d7467ecaec034d5fad856cfe98f5bd>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& path,
			int priority = :ref:`PRIO_DEFAULT<doxid-class_poco_1_1_util_1_1_application_1ad2e6b943e41dace26e409449c8ef14bfae77af34ccfbd0fc8247a1c458a811313>`
			);
	
		template <class C>
		C&
		:ref:`getSubsystem<doxid-class_poco_1_1_util_1_1_application_1a35c89f7945c0b50867841b98f479fc51>`() const;
	
		:ref:`SubsystemVec<doxid-class_poco_1_1_util_1_1_application_1a4d96050661f69896675bd83306d3b80f>`&
		:ref:`subsystems<doxid-class_poco_1_1_util_1_1_application_1af7714f74afb5e42b6ba73f3f7f819cbc>`();
	
		virtual
		int
		:ref:`run<doxid-class_poco_1_1_util_1_1_application_1ae8dd43d565dd2a1f653c9484725624ae>`();
	
		std::string
		:ref:`commandName<doxid-class_poco_1_1_util_1_1_application_1a2f2dcf53ee3522e1629ca935ea2391ea>`() const;
	
		std::string
		:ref:`commandPath<doxid-class_poco_1_1_util_1_1_application_1af8a8218cc269c709a006df103e2acc6e>`() const;
	
		:ref:`LayeredConfiguration<doxid-class_poco_1_1_util_1_1_layered_configuration>`&
		:ref:`config<doxid-class_poco_1_1_util_1_1_application_1a4c619b854bdce613aec5fd6a991fb529>`() const;
	
		:ref:`Poco::Logger<doxid-class_poco_1_1_logger>`&
		:ref:`logger<doxid-class_poco_1_1_util_1_1_application_1a036849fa3db313f52b28357dcb996734>`() const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`ArgVec<doxid-class_poco_1_1_util_1_1_application_1accd143b1d2fc7c33a5d7893559a4c33d>`&
		:ref:`argv<doxid-class_poco_1_1_util_1_1_application_1a133d08bc16a0d6e99899255478f2226d>`() const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`OptionSet<doxid-class_poco_1_1_util_1_1_option_set>`&
		:ref:`options<doxid-class_poco_1_1_util_1_1_application_1aea1b5e46cdd79386a54c5e6b212bb258>`() const;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`Poco::Timestamp<doxid-class_poco_1_1_timestamp>`&
		:ref:`startTime<doxid-class_poco_1_1_util_1_1_application_1a597e5f2c20a4875a2df73e4cff616578>`() const;
	
		:ref:`Poco::Timespan<doxid-class_poco_1_1_timespan>`
		:ref:`uptime<doxid-class_poco_1_1_util_1_1_application_1abced23f1465bcb20266a7f1fc0bb8365>`() const;
	
		void
		:ref:`stopOptionsProcessing<doxid-class_poco_1_1_util_1_1_application_1a21de6c19c00499ebd7c7fb5c3683f969>`();
	
		virtual
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char*
		:ref:`name<doxid-class_poco_1_1_util_1_1_application_1ad2aa675448f563949b464c0e59d03ade>`() const;
	
		static
		:ref:`Application<doxid-class_poco_1_1_util_1_1_application>`&
		:ref:`instance<doxid-class_poco_1_1_util_1_1_application_1ab6a65f43a5f3d6e9bd228a21c838412e>`();

	protected:
		// methods
	
		virtual
		void
		:ref:`initialize<doxid-class_poco_1_1_util_1_1_subsystem_1a6382a1288ce62ab39b4cf715733e34d1>`(:ref:`Application<doxid-class_poco_1_1_util_1_1_application>`& app) = 0;
	
		virtual
		void
		:ref:`uninitialize<doxid-class_poco_1_1_util_1_1_subsystem_1a302a6967d4fc46e0b20e5a30dc854737>`() = 0;
	
		virtual
		void
		:ref:`reinitialize<doxid-class_poco_1_1_util_1_1_subsystem_1a19b564e4e05a76edd4b5d7f269042277>`(:ref:`Application<doxid-class_poco_1_1_util_1_1_application>`& app);
	
		virtual
		void
		:ref:`defineOptions<doxid-class_poco_1_1_util_1_1_subsystem_1a76c464d69ab21cc9ee4bebb5b29822fc>`(:ref:`OptionSet<doxid-class_poco_1_1_util_1_1_option_set>`& options);
	
		virtual
		void
		:ref:`initialize<doxid-class_poco_1_1_util_1_1_application_1a82f62471a68493049a7d3955f34976ca>`(:ref:`Application<doxid-class_poco_1_1_util_1_1_application>`& self);
	
		virtual
		void
		:ref:`uninitialize<doxid-class_poco_1_1_util_1_1_application_1ae441fc171418cf80cc88922cae09ce8f>`();
	
		virtual
		void
		:ref:`reinitialize<doxid-class_poco_1_1_util_1_1_application_1acf6923ae08f4345e928871b87deed928>`(:ref:`Application<doxid-class_poco_1_1_util_1_1_application>`& self);
	
		virtual
		void
		:ref:`defineOptions<doxid-class_poco_1_1_util_1_1_application_1a387af69805eec896f1938c79167186dd>`(:ref:`OptionSet<doxid-class_poco_1_1_util_1_1_option_set>`& options);
	
		virtual
		void
		:ref:`handleOption<doxid-class_poco_1_1_util_1_1_application_1a0c5eb94bff2ba0576f59be0995cbe509>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& name,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::string& value
			);
	
		void
		:ref:`setLogger<doxid-class_poco_1_1_util_1_1_application_1a232af7e85ca453825b13e78102766743>`(:ref:`Poco::Logger<doxid-class_poco_1_1_logger>`& logger);
	
		virtual
		int
		:ref:`main<doxid-class_poco_1_1_util_1_1_application_1acb65f34a4ebed4fa8b9987904a2555fc>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::vector<std::string>& args);
	
		bool
		:ref:`findFile<doxid-class_poco_1_1_util_1_1_application_1af4aca926351f19344f474b16054b4884>`(:ref:`Poco::Path<doxid-class_poco_1_1_path>`& path) const;
	
		void
		:ref:`init<doxid-class_poco_1_1_util_1_1_application_1a8227edb1b866d8397f2500bc884a8c7a>`();

.. _details-class_poco_1_1_util_1_1_server_application:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

A subclass of the :ref:`Application <doxid-class_poco_1_1_util_1_1_application>` class that is used for implementing server applications.

A :ref:`ServerApplication <doxid-class_poco_1_1_util_1_1_server_application>` allows for the application to run as a Windows service or as a Unix daemon without the need to add extra code.

For a :ref:`ServerApplication <doxid-class_poco_1_1_util_1_1_server_application>` to work both from the command line and as a daemon or service, a few rules must be met:

.. ref-code-block:: cpp

	- Subsystems must be registered in the constructor.
	- All non-trivial initializations must be made in the
	  initialize() method.
	- At the end of the main() method, waitForTerminationRequest()
	  should be called.
	- New threads must only be created in initialize() or main() or
	  methods called from there, but not in the application class'
	  constructor or in the constructor of instance variables.
	  The reason for this is that fork() will be called in order to
	  create the daemon process, and threads created prior to calling
	  fork() won't be taken over to the daemon process.
	- The main(argc, argv) function must look as follows:
	
	int main(int argc, char** argv)
	{
	    MyServerApplication app;
	    return app.run(argc, argv);
	}

The POCO_SERVER_MAIN macro can be used to implement main(argc, argv). If POCO has been built with POCO_WIN32_UTF8, POCO_SERVER_MAIN supports :ref:`Unicode <doxid-class_poco_1_1_unicode>` command line arguments.

On Windows platforms, an application built on top of the :ref:`ServerApplication <doxid-class_poco_1_1_util_1_1_server_application>` class can be run both from the command line or as a service.

To run an application as a Windows service, it must be registered with the Windows Service Control Manager (SCM). To do this, the application can be started from the command line, with the /registerService option specified. This causes the application to register itself with the SCM, and then exit. Similarly, an application registered as a service can be unregistered, by specifying the /unregisterService option. The file name of the application executable (excluding the .exe suffix) is used as the service name. Additionally, a more user-friendly name can be specified, using the /displayName option (e.g., /displayName="Demo Service") and a service description can be added with the /description option. The startup mode (automatic or manual) for the service can be specified with the /startup option.

An application can determine whether it is running as a service by checking for the "application.runAsService" configuration property.

.. ref-code-block:: cpp

	if (config().getBool("application.runAsService", false))
	{
	    // do service specific things
	}

Note that the working directory for an application running as a service is the Windows system directory (e.g., C:). Take this into account when working with relative filesystem paths. Also, services run under a different user account, so an application that works when started from the command line may fail to run as a service if it depends on a certain environment (e.g., the PATH environment variable).

An application registered as a Windows service can be started with the NET START <name> command and stopped with the NET STOP <name> command. Alternatively, the Services MMC applet can be used.

On Unix platforms, an application built on top of the :ref:`ServerApplication <doxid-class_poco_1_1_util_1_1_server_application>` class can be optionally run as a daemon by giving the daemon command line option. A daemon, when launched, immediately forks off a background process that does the actual work. After launching the background process, the foreground process exits.

After the initialization is complete, but before entering the :ref:`main() <doxid-class_poco_1_1_util_1_1_application_1acb65f34a4ebed4fa8b9987904a2555fc>` method, the current working directory for the daemon process is changed to the root directory ("/"), as it is common practice for daemon processes. Therefore, be careful when working with files, as relative paths may not point to where you expect them point to.

An application can determine whether it is running as a daemon by checking for the "application.runAsDaemon" configuration property.

.. ref-code-block:: cpp

	if (config().getBool("application.runAsDaemon", false))
	{
	    // do daemon specific things
	}

When running as a daemon, specifying the pidfile option (e.g., pidfile=/var/run/sample.pid) may be useful to record the process ID of the daemon in a file. The PID file will be removed when the daemon process terminates (but not, if it crashes).

Construction
------------

.. _doxid-class_poco_1_1_util_1_1_server_application_1a52d957b32393e488699681df1f3bd9ff:
.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	~ServerApplication()

Destroys the :ref:`ServerApplication <doxid-class_poco_1_1_util_1_1_server_application>`.

Methods
-------

.. index:: pair: function; isInteractive
.. _doxid-class_poco_1_1_util_1_1_server_application_1a71083518a647971fa29b4b57ed74d8b2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	bool
	isInteractive() const

Returns true if the application runs from the command line.

Returns false if the application runs as a Unix daemon or Windows service.

.. index:: pair: function; run
.. _doxid-class_poco_1_1_util_1_1_server_application_1ac5151930516267f08abe6d1fe1fe1951:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	run(
		int argc,
		char** argv
		)

Runs the application by performing additional initializations and calling the :ref:`main() <doxid-class_poco_1_1_util_1_1_application_1acb65f34a4ebed4fa8b9987904a2555fc>` method.

.. index:: pair: function; run
.. _doxid-class_poco_1_1_util_1_1_server_application_1adc2bc7dfff305e305385fd758eed0753:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	int
	run(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` std::vector<std::string>& args)

Runs the application by performing additional initializations and calling the :ref:`main() <doxid-class_poco_1_1_util_1_1_application_1acb65f34a4ebed4fa8b9987904a2555fc>` method.

.. index:: pair: function; terminate
.. _doxid-class_poco_1_1_util_1_1_server_application_1a42abcc7f77de41d1757a5680adcf04ea:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	static
	void
	terminate()

Sends a friendly termination request to the application.

If the application's main thread is waiting in :ref:`waitForTerminationRequest() <doxid-class_poco_1_1_util_1_1_server_application_1a17d66f7da578059c52e06a70031072e2>`, this method will return and the application can shut down.

.. index:: pair: function; run
.. _doxid-class_poco_1_1_util_1_1_server_application_1aefa48a05c28bc1eaf977a0824f3d5b58:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	int
	run()

Runs the application by performing additional (un)initializations and calling the :ref:`main() <doxid-class_poco_1_1_util_1_1_application_1acb65f34a4ebed4fa8b9987904a2555fc>` method.

First calls :ref:`initialize() <doxid-class_poco_1_1_util_1_1_application_1a82f62471a68493049a7d3955f34976ca>`, then calls :ref:`main() <doxid-class_poco_1_1_util_1_1_application_1acb65f34a4ebed4fa8b9987904a2555fc>`, and finally calls :ref:`uninitialize() <doxid-class_poco_1_1_util_1_1_application_1ae441fc171418cf80cc88922cae09ce8f>`. The latter will be called even if :ref:`main() <doxid-class_poco_1_1_util_1_1_application_1acb65f34a4ebed4fa8b9987904a2555fc>` throws an exception. If :ref:`initialize() <doxid-class_poco_1_1_util_1_1_application_1a82f62471a68493049a7d3955f34976ca>` throws an exception, :ref:`main() <doxid-class_poco_1_1_util_1_1_application_1acb65f34a4ebed4fa8b9987904a2555fc>` will not be called and the exception will be propagated to the caller. If :ref:`uninitialize() <doxid-class_poco_1_1_util_1_1_application_1ae441fc171418cf80cc88922cae09ce8f>` throws an exception, the exception will be propagated to the caller.

.. index:: pair: function; defineOptions
.. _doxid-class_poco_1_1_util_1_1_server_application_1aeb9576c971c170fa354434f1fd8d9ee4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	defineOptions(:ref:`OptionSet<doxid-class_poco_1_1_util_1_1_option_set>`& options)

Called before command line processing begins.

If a subclass wants to support command line arguments, it must override this method. The default implementation does not define any options itself, but calls :ref:`defineOptions() <doxid-class_poco_1_1_util_1_1_server_application_1aeb9576c971c170fa354434f1fd8d9ee4>` on all registered subsystems.

Overriding implementations should call the base class implementation.

