.. index:: pair: class; Poco::XML::EventTarget
.. _doxid-class_poco_1_1_x_m_l_1_1_event_target:

class Poco::XML::EventTarget
============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

The :ref:`EventTarget <doxid-class_poco_1_1_x_m_l_1_1_event_target>` interface is implemented by all Nodes in an implementation which supports the DOM :ref:`Event <doxid-class_poco_1_1_x_m_l_1_1_event>` Model. :ref:`More...<details-class_poco_1_1_x_m_l_1_1_event_target>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <EventTarget.h>
	
	class EventTarget: public :ref:`Poco::XML::DOMObject<doxid-class_poco_1_1_x_m_l_1_1_d_o_m_object>`
	{
	public:
		// methods
	
		virtual
		void
		:ref:`addEventListener<doxid-class_poco_1_1_x_m_l_1_1_event_target_1aed316ca12b247dfd31d052b186422695>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& type,
			:ref:`EventListener<doxid-class_poco_1_1_x_m_l_1_1_event_listener>`* listener,
			bool useCapture
			) = 0;
	
		virtual
		void
		:ref:`removeEventListener<doxid-class_poco_1_1_x_m_l_1_1_event_target_1adc6bca1251e799e38f0d152c58ae38ef>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& type,
			:ref:`EventListener<doxid-class_poco_1_1_x_m_l_1_1_event_listener>`* listener,
			bool useCapture
			) = 0;
	
		virtual
		bool
		:ref:`dispatchEvent<doxid-class_poco_1_1_x_m_l_1_1_event_target_1a69cdde398020d2a08d2b0b969fe9ad73>`(:ref:`Event<doxid-class_poco_1_1_x_m_l_1_1_event>`* evt) = 0;
	};

	// direct descendants

	class :ref:`Node<doxid-class_poco_1_1_x_m_l_1_1_node>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		void
		:ref:`duplicate<doxid-class_poco_1_1_x_m_l_1_1_d_o_m_object_1a492091c0d6748efda278df55b5b2311b>`() const;
	
		void
		:ref:`release<doxid-class_poco_1_1_x_m_l_1_1_d_o_m_object_1a59fcc225a5bcf0fcf7e49d06ecba249a>`() const;
	
		virtual
		void
		:ref:`autoRelease<doxid-class_poco_1_1_x_m_l_1_1_d_o_m_object_1a39f0ede64e7f87d462b79dd53d844c6c>`() = 0;

.. _details-class_poco_1_1_x_m_l_1_1_event_target:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

The :ref:`EventTarget <doxid-class_poco_1_1_x_m_l_1_1_event_target>` interface is implemented by all Nodes in an implementation which supports the DOM :ref:`Event <doxid-class_poco_1_1_x_m_l_1_1_event>` Model.

Therefore, this interface can be obtained by using binding-specific casting methods on an instance of the :ref:`Node <doxid-class_poco_1_1_x_m_l_1_1_node>` interface. The interface allows registration and removal of EventListeners on an :ref:`EventTarget <doxid-class_poco_1_1_x_m_l_1_1_event_target>` and dispatch of events to that :ref:`EventTarget <doxid-class_poco_1_1_x_m_l_1_1_event_target>`.

Methods
-------

.. index:: pair: function; addEventListener
.. _doxid-class_poco_1_1_x_m_l_1_1_event_target_1aed316ca12b247dfd31d052b186422695:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	addEventListener(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& type,
		:ref:`EventListener<doxid-class_poco_1_1_x_m_l_1_1_event_listener>`* listener,
		bool useCapture
		) = 0

This method allows the registration of event listeners on the event target.

If an :ref:`EventListener <doxid-class_poco_1_1_x_m_l_1_1_event_listener>` is added to an :ref:`EventTarget <doxid-class_poco_1_1_x_m_l_1_1_event_target>` while it is processing an event, it will not be triggered by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase. If multiple identical EventListeners are registered on the same :ref:`EventTarget <doxid-class_poco_1_1_x_m_l_1_1_event_target>` with the same parameters the duplicate instances are discarded. They do not cause the :ref:`EventListener <doxid-class_poco_1_1_x_m_l_1_1_event_listener>` to be called twice and since they are discarded they do not need to be removed with the removeEventListener method.

.. index:: pair: function; removeEventListener
.. _doxid-class_poco_1_1_x_m_l_1_1_event_target_1adc6bca1251e799e38f0d152c58ae38ef:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	removeEventListener(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& type,
		:ref:`EventListener<doxid-class_poco_1_1_x_m_l_1_1_event_listener>`* listener,
		bool useCapture
		) = 0

This method allows the removal of event listeners from the event target.

If an :ref:`EventListener <doxid-class_poco_1_1_x_m_l_1_1_event_listener>` is removed from an :ref:`EventTarget <doxid-class_poco_1_1_x_m_l_1_1_event_target>` while it is processing an event, it will not be triggered by the current actions. EventListeners can never be invoked after being removed. Calling removeEventListener with arguments which do not identify any currently registered :ref:`EventListener <doxid-class_poco_1_1_x_m_l_1_1_event_listener>` on the :ref:`EventTarget <doxid-class_poco_1_1_x_m_l_1_1_event_target>` has no effect.

.. index:: pair: function; dispatchEvent
.. _doxid-class_poco_1_1_x_m_l_1_1_event_target_1a69cdde398020d2a08d2b0b969fe9ad73:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	dispatchEvent(:ref:`Event<doxid-class_poco_1_1_x_m_l_1_1_event>`* evt) = 0

This method allows the dispatch of events into the implementations event model.

Events dispatched in this manner will have the same capturing and bubbling behavior as events dispatched directly by the implementation. The target of the event is the :ref:`EventTarget <doxid-class_poco_1_1_x_m_l_1_1_event_target>` on which dispatchEvent is called.

