.. index:: pair: class; Poco::XML::Node
.. _doxid-class_poco_1_1_x_m_l_1_1_node:

class Poco::XML::Node
=====================

.. toctree::
	:hidden:

Overview
~~~~~~~~

The :ref:`Node <doxid-class_poco_1_1_x_m_l_1_1_node>` interface is the primary datatype for the entire :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>` Object Model. :ref:`More...<details-class_poco_1_1_x_m_l_1_1_node>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <Node.h>
	
	class Node: public :ref:`Poco::XML::EventTarget<doxid-class_poco_1_1_x_m_l_1_1_event_target>`
	{
	public:
		// typedefs
	
		typedef :ref:`Poco::XML::NamespaceSupport<doxid-class_poco_1_1_x_m_l_1_1_namespace_support>` :target:`NSMap<doxid-class_poco_1_1_x_m_l_1_1_node_1a2815ffa9bf91f10808179e39a45a73b4>`;

		// enums
	
		enum
		{
		    :ref:`ELEMENT_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a5b4b9080ef8e87a5045d87fba6a75c71>`                = 1,
		    :ref:`ATTRIBUTE_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62ab527c31e6176280ebec5640f3871f1c7>`,
		    :ref:`TEXT_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62afa7c7a18abfa62c770887481f08bc7ed>`,
		    :ref:`CDATA_SECTION_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a13d9c451e861e5b39b7782674b91dbba>`,
		    :ref:`ENTITY_REFERENCE_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62aadc1cd84b6f0409432e733d11a61c49b>`,
		    :ref:`ENTITY_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62ab04b85a64716ceaa4d51a23125bfc290>`,
		    :ref:`PROCESSING_INSTRUCTION_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62ad95fca1e5b8f12c9354376565c06bd2b>`,
		    :ref:`COMMENT_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a0de725c9df1121adc76c6b4b78048dd1>`,
		    :ref:`DOCUMENT_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a370f3a35dffebdfea68f23e5d1ebc9cb>`,
		    :ref:`DOCUMENT_TYPE_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a75c909edfdad89af6f6be2abe77d40f1>`,
		    :ref:`DOCUMENT_FRAGMENT_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a228f952f9f1cff5d28bdf62f1477c9f0>`,
		    :ref:`NOTATION_NODE<doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a00773890f6dc37f69a93b83d39209d86>`,
		};

		// methods
	
		virtual
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`&
		:ref:`nodeName<doxid-class_poco_1_1_x_m_l_1_1_node_1afe41b9b2a81c5c8fcb7a05fed118b2c1>`() const = 0;
	
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`&
		:ref:`nodeValue<doxid-class_poco_1_1_x_m_l_1_1_node_1a474b8b53000fae0e2db78da47762c161>`() const;
	
		virtual
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`&
		:ref:`getNodeValue<doxid-class_poco_1_1_x_m_l_1_1_node_1a150740c9a922d383e173c1a64f3a2a05>`() const = 0;
	
		virtual
		void
		:ref:`setNodeValue<doxid-class_poco_1_1_x_m_l_1_1_node_1a713a6455bafed955dbe42853d338d5f3>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& value) = 0;
	
		virtual
		unsigned short
		:ref:`nodeType<doxid-class_poco_1_1_x_m_l_1_1_node_1ac001e1819b1eb928ca1ae6f6f90e1159>`() const = 0;
	
		virtual
		Node*
		:ref:`parentNode<doxid-class_poco_1_1_x_m_l_1_1_node_1a0707453450b575d6df379c44d1abdb30>`() const = 0;
	
		virtual
		:ref:`NodeList<doxid-class_poco_1_1_x_m_l_1_1_node_list>`*
		:ref:`childNodes<doxid-class_poco_1_1_x_m_l_1_1_node_1a4d282264c5778f7566499340fee330e4>`() const = 0;
	
		virtual
		Node*
		:ref:`firstChild<doxid-class_poco_1_1_x_m_l_1_1_node_1a9258a226b0ad962387aaf21cc4c516b0>`() const = 0;
	
		virtual
		Node*
		:ref:`lastChild<doxid-class_poco_1_1_x_m_l_1_1_node_1a9a07a3b535bdb935fcc5b3c8cbd81e55>`() const = 0;
	
		virtual
		Node*
		:ref:`previousSibling<doxid-class_poco_1_1_x_m_l_1_1_node_1a0634905c906a96d6314422ebd2c793d4>`() const = 0;
	
		virtual
		Node*
		:ref:`nextSibling<doxid-class_poco_1_1_x_m_l_1_1_node_1ac76340e69ae650c1f3c45f119a3d34dc>`() const = 0;
	
		virtual
		:ref:`NamedNodeMap<doxid-class_poco_1_1_x_m_l_1_1_named_node_map>`*
		:ref:`attributes<doxid-class_poco_1_1_x_m_l_1_1_node_1aec3394aea7bd471986fc6e967659bfa0>`() const = 0;
	
		virtual
		:ref:`Document<doxid-class_poco_1_1_x_m_l_1_1_document>`*
		:ref:`ownerDocument<doxid-class_poco_1_1_x_m_l_1_1_node_1a1522e6d5786ff24c4c4986a2713e0a35>`() const = 0;
	
		virtual
		Node*
		:ref:`insertBefore<doxid-class_poco_1_1_x_m_l_1_1_node_1a1a4133eeaf09ba8171d672f63bdffa9f>`(
			Node* newChild,
			Node* refChild
			) = 0;
	
		virtual
		Node*
		:ref:`replaceChild<doxid-class_poco_1_1_x_m_l_1_1_node_1a4326e04cb2664c0d67fc9e09b99cdd53>`(
			Node* newChild,
			Node* oldChild
			) = 0;
	
		virtual
		Node*
		:ref:`removeChild<doxid-class_poco_1_1_x_m_l_1_1_node_1a21b44b66ce48ca314061a30386fe853d>`(Node* oldChild) = 0;
	
		virtual
		Node*
		:ref:`appendChild<doxid-class_poco_1_1_x_m_l_1_1_node_1a2e28b02eecaf472ff0071bd15fae456b>`(Node* newChild) = 0;
	
		virtual
		bool
		:ref:`hasChildNodes<doxid-class_poco_1_1_x_m_l_1_1_node_1af716c1395e96eaaae6e11a9625fc033d>`() const = 0;
	
		virtual
		Node*
		:ref:`cloneNode<doxid-class_poco_1_1_x_m_l_1_1_node_1a19755cabf7c258b02ca6a77cbc1b9644>`(bool deep) const = 0;
	
		virtual
		void
		:ref:`normalize<doxid-class_poco_1_1_x_m_l_1_1_node_1ac525fd79ed7beb885e77aeab3ca78206>`() = 0;
	
		virtual
		bool
		:ref:`isSupported<doxid-class_poco_1_1_x_m_l_1_1_node_1a3c3533c41e505e7206394353b946bef9>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& feature,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& version
			) const = 0;
	
		virtual
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`&
		:ref:`namespaceURI<doxid-class_poco_1_1_x_m_l_1_1_node_1a37c21fe48c5c1182e8ccebc64a333df4>`() const = 0;
	
		virtual
		:ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`
		:ref:`prefix<doxid-class_poco_1_1_x_m_l_1_1_node_1a915538dcfeb2452e663d5104b5f9f127>`() const = 0;
	
		virtual
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`&
		:ref:`localName<doxid-class_poco_1_1_x_m_l_1_1_node_1a8a2f7100a551d0255d1cbe45c6ad5c19>`() const = 0;
	
		virtual
		bool
		:ref:`hasAttributes<doxid-class_poco_1_1_x_m_l_1_1_node_1a0fa84661e504d460b4b64959f73fa191>`() const = 0;
	
		virtual
		:ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`
		:ref:`innerText<doxid-class_poco_1_1_x_m_l_1_1_node_1ac4ba8b4a41470232f41efa78ee8e3754>`() const = 0;
	
		virtual
		Node*
		:ref:`getNodeByPath<doxid-class_poco_1_1_x_m_l_1_1_node_1adb003087b290d656baa56f750f82b441>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& path) const = 0;
	
		virtual
		Node*
		:ref:`getNodeByPathNS<doxid-class_poco_1_1_x_m_l_1_1_node_1a2ab2b32e70b3d6633bb60e60b85f10d7>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& path,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`NSMap<doxid-class_poco_1_1_x_m_l_1_1_node_1a2815ffa9bf91f10808179e39a45a73b4>`& nsMap
			) const = 0;
	};

	// direct descendants

	class :ref:`AbstractNode<doxid-class_poco_1_1_x_m_l_1_1_abstract_node>`;

Inherited Members
-----------------

.. ref-code-block:: cpp
	:class: doxyrest-overview-inherited-code-block

	public:
		// methods
	
		void
		:ref:`duplicate<doxid-class_poco_1_1_x_m_l_1_1_d_o_m_object_1a492091c0d6748efda278df55b5b2311b>`() const;
	
		void
		:ref:`release<doxid-class_poco_1_1_x_m_l_1_1_d_o_m_object_1a59fcc225a5bcf0fcf7e49d06ecba249a>`() const;
	
		virtual
		void
		:ref:`autoRelease<doxid-class_poco_1_1_x_m_l_1_1_d_o_m_object_1a39f0ede64e7f87d462b79dd53d844c6c>`() = 0;
	
		virtual
		void
		:ref:`addEventListener<doxid-class_poco_1_1_x_m_l_1_1_event_target_1aed316ca12b247dfd31d052b186422695>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& type,
			:ref:`EventListener<doxid-class_poco_1_1_x_m_l_1_1_event_listener>`* listener,
			bool useCapture
			) = 0;
	
		virtual
		void
		:ref:`removeEventListener<doxid-class_poco_1_1_x_m_l_1_1_event_target_1adc6bca1251e799e38f0d152c58ae38ef>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& type,
			:ref:`EventListener<doxid-class_poco_1_1_x_m_l_1_1_event_listener>`* listener,
			bool useCapture
			) = 0;
	
		virtual
		bool
		:ref:`dispatchEvent<doxid-class_poco_1_1_x_m_l_1_1_event_target_1a69cdde398020d2a08d2b0b969fe9ad73>`(:ref:`Event<doxid-class_poco_1_1_x_m_l_1_1_event>`* evt) = 0;

.. _details-class_poco_1_1_x_m_l_1_1_node:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

The :ref:`Node <doxid-class_poco_1_1_x_m_l_1_1_node>` interface is the primary datatype for the entire :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>` Object Model.

It represents a single node in the document tree. While all objects implementing the :ref:`Node <doxid-class_poco_1_1_x_m_l_1_1_node>` interface expose methods for dealing with children, not all objects implementing the :ref:`Node <doxid-class_poco_1_1_x_m_l_1_1_node>` interface may have children. For example, :ref:`Text <doxid-class_poco_1_1_x_m_l_1_1_text>` nodes may not have children, and adding children to such nodes results in a :ref:`DOMException <doxid-class_poco_1_1_x_m_l_1_1_d_o_m_exception>` being raised.

The attributes nodeName, nodeValue and attributes are included as a mechanism to get at node information without casting down to the specific derived interface. In cases where there is no obvious mapping of these attributes for a specific nodeType (e.g., nodeValue for an :ref:`Element <doxid-class_poco_1_1_x_m_l_1_1_element>` or attributes for a :ref:`Comment <doxid-class_poco_1_1_x_m_l_1_1_comment>`), this returns null. Note that the specialized interfaces may contain additional and more convenient mechanisms to get and set the relevant information.

This implementation differs in some ways from the W3C DOM recommendations. For example, the DOM specifies that some methods can return null strings. Instead of null strings, this implementation always returns empty strings.

Enum Values
-----------

.. index:: pair: enumvalue; ELEMENT_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a5b4b9080ef8e87a5045d87fba6a75c71:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	ELEMENT_NODE

The node is an :ref:`Element <doxid-class_poco_1_1_x_m_l_1_1_element>`.

.. index:: pair: enumvalue; ATTRIBUTE_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62ab527c31e6176280ebec5640f3871f1c7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	ATTRIBUTE_NODE

The node is an :ref:`Attr <doxid-class_poco_1_1_x_m_l_1_1_attr>`.

.. index:: pair: enumvalue; TEXT_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62afa7c7a18abfa62c770887481f08bc7ed:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	TEXT_NODE

The node is a :ref:`Text <doxid-class_poco_1_1_x_m_l_1_1_text>` node.

.. index:: pair: enumvalue; CDATA_SECTION_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a13d9c451e861e5b39b7782674b91dbba:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	CDATA_SECTION_NODE

The node is a :ref:`CDATASection <doxid-class_poco_1_1_x_m_l_1_1_c_d_a_t_a_section>`.

.. index:: pair: enumvalue; ENTITY_REFERENCE_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62aadc1cd84b6f0409432e733d11a61c49b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	ENTITY_REFERENCE_NODE

The node is an :ref:`EntityReference <doxid-class_poco_1_1_x_m_l_1_1_entity_reference>`.

.. index:: pair: enumvalue; ENTITY_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62ab04b85a64716ceaa4d51a23125bfc290:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	ENTITY_NODE

The node is an :ref:`Entity <doxid-class_poco_1_1_x_m_l_1_1_entity>`.

.. index:: pair: enumvalue; PROCESSING_INSTRUCTION_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62ad95fca1e5b8f12c9354376565c06bd2b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	PROCESSING_INSTRUCTION_NODE

The node is a :ref:`ProcessingInstruction <doxid-class_poco_1_1_x_m_l_1_1_processing_instruction>`.

.. index:: pair: enumvalue; COMMENT_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a0de725c9df1121adc76c6b4b78048dd1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	COMMENT_NODE

The node is a :ref:`Comment <doxid-class_poco_1_1_x_m_l_1_1_comment>`.

.. index:: pair: enumvalue; DOCUMENT_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a370f3a35dffebdfea68f23e5d1ebc9cb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	DOCUMENT_NODE

The node is a :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>`.

.. index:: pair: enumvalue; DOCUMENT_TYPE_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a75c909edfdad89af6f6be2abe77d40f1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	DOCUMENT_TYPE_NODE

The node is a :ref:`DocumentType <doxid-class_poco_1_1_x_m_l_1_1_document_type>`.

.. index:: pair: enumvalue; DOCUMENT_FRAGMENT_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a228f952f9f1cff5d28bdf62f1477c9f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	DOCUMENT_FRAGMENT_NODE

The node is a :ref:`DocumentFragment <doxid-class_poco_1_1_x_m_l_1_1_document_fragment>`.

.. index:: pair: enumvalue; NOTATION_NODE
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a32d960060c0e1e16773d06ad14b2ee62a00773890f6dc37f69a93b83d39209d86:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	NOTATION_NODE

The node is a :ref:`Notation <doxid-class_poco_1_1_x_m_l_1_1_notation>`.

Methods
-------

.. index:: pair: function; nodeName
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1afe41b9b2a81c5c8fcb7a05fed118b2c1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`&
	nodeName() const = 0

Returns the name of this node, depending on its type.

.. index:: pair: function; nodeValue
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a474b8b53000fae0e2db78da47762c161:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`&
	nodeValue() const

Returns the value of this node, depending on its type.

.. index:: pair: function; getNodeValue
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a150740c9a922d383e173c1a64f3a2a05:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`&
	getNodeValue() const = 0

Returns the value of this node, depending on its type.

.. index:: pair: function; setNodeValue
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a713a6455bafed955dbe42853d338d5f3:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setNodeValue(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& value) = 0

Sets the value of this node.

Throws an exception if the node is read-only.

.. index:: pair: function; nodeType
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1ac001e1819b1eb928ca1ae6f6f90e1159:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	unsigned short
	nodeType() const = 0

Returns a code representing the type of the underlying object.

.. index:: pair: function; parentNode
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a0707453450b575d6df379c44d1abdb30:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	parentNode() const = 0

The parent of this node.

All nodes, except :ref:`Attr <doxid-class_poco_1_1_x_m_l_1_1_attr>`, :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>`, :ref:`DocumentFragment <doxid-class_poco_1_1_x_m_l_1_1_document_fragment>`, :ref:`Entity <doxid-class_poco_1_1_x_m_l_1_1_entity>`, and :ref:`Notation <doxid-class_poco_1_1_x_m_l_1_1_notation>` may have a parent. However, if a node has just been created and not yet added to the tree, or if it has been removed from the tree, this is null.

.. index:: pair: function; childNodes
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a4d282264c5778f7566499340fee330e4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`NodeList<doxid-class_poco_1_1_x_m_l_1_1_node_list>`*
	childNodes() const = 0

Returns a :ref:`NodeList <doxid-class_poco_1_1_x_m_l_1_1_node_list>` containing all children of this node.

The returned :ref:`NodeList <doxid-class_poco_1_1_x_m_l_1_1_node_list>` must be released with a call to :ref:`release() <doxid-class_poco_1_1_x_m_l_1_1_d_o_m_object_1a59fcc225a5bcf0fcf7e49d06ecba249a>` when no longer needed.

.. index:: pair: function; firstChild
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a9258a226b0ad962387aaf21cc4c516b0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	firstChild() const = 0

Returns the first child of this node.

If there is no such node, this returns null.

.. index:: pair: function; lastChild
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a9a07a3b535bdb935fcc5b3c8cbd81e55:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	lastChild() const = 0

Returns the last child of this node.

If there is no such node, this returns null.

.. index:: pair: function; previousSibling
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a0634905c906a96d6314422ebd2c793d4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	previousSibling() const = 0

Returns the node immediately preceding this node.

If there is no such node, this returns null.

.. index:: pair: function; nextSibling
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1ac76340e69ae650c1f3c45f119a3d34dc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	nextSibling() const = 0

Returns the node immediately following this node.

If there is no such node, this returns null.

.. index:: pair: function; attributes
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1aec3394aea7bd471986fc6e967659bfa0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`NamedNodeMap<doxid-class_poco_1_1_x_m_l_1_1_named_node_map>`*
	attributes() const = 0

Returns a :ref:`NamedNodeMap <doxid-class_poco_1_1_x_m_l_1_1_named_node_map>` containing the attributes of this node (if it is an :ref:`Element <doxid-class_poco_1_1_x_m_l_1_1_element>`) or null otherwise.

The returned :ref:`NamedNodeMap <doxid-class_poco_1_1_x_m_l_1_1_named_node_map>` must be released with a call to :ref:`release() <doxid-class_poco_1_1_x_m_l_1_1_d_o_m_object_1a59fcc225a5bcf0fcf7e49d06ecba249a>` when no longer needed.

.. index:: pair: function; ownerDocument
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a1522e6d5786ff24c4c4986a2713e0a35:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`Document<doxid-class_poco_1_1_x_m_l_1_1_document>`*
	ownerDocument() const = 0

Returns the :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>` object associated with this node.

This is also the :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>` object used to create new nodes. When this node is a :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>`, this is null.

.. index:: pair: function; insertBefore
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a1a4133eeaf09ba8171d672f63bdffa9f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	insertBefore(
		Node* newChild,
		Node* refChild
		) = 0

Inserts the node newChild before the existing child node refChild.

If refChild is null, insert newChild at the end of the list of children. If newChild is a :ref:`DocumentFragment <doxid-class_poco_1_1_x_m_l_1_1_document_fragment>` object, all of its children are inserted in the same order, before refChild. If the newChild is already in the tree, it is first removed.

.. index:: pair: function; replaceChild
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a4326e04cb2664c0d67fc9e09b99cdd53:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	replaceChild(
		Node* newChild,
		Node* oldChild
		) = 0

Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node.

If newChild is a :ref:`DocumentFragment <doxid-class_poco_1_1_x_m_l_1_1_document_fragment>` object, oldChild is replaced by all of the :ref:`DocumentFragment <doxid-class_poco_1_1_x_m_l_1_1_document_fragment>` children, which are inserted in the same order. If the newChild is already in the tree, it is first removed.

.. index:: pair: function; removeChild
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a21b44b66ce48ca314061a30386fe853d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	removeChild(Node* oldChild) = 0

Removes the child node indicated by oldChild from the list of children and returns it.

.. index:: pair: function; appendChild
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a2e28b02eecaf472ff0071bd15fae456b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	appendChild(Node* newChild) = 0

Appends the node newChild to the end of the list of children of this node.

If newChild is already in the tree, it is first removed.

.. index:: pair: function; hasChildNodes
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1af716c1395e96eaaae6e11a9625fc033d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	hasChildNodes() const = 0

This is a convenience method to allow easy determination of whether a node has any children.

Returns true if the node has any children, false otherwise.

.. index:: pair: function; cloneNode
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a19755cabf7c258b02ca6a77cbc1b9644:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	cloneNode(bool deep) const = 0

Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes.

The duplicate node has no parent; (parentNode is null.). Cloning an :ref:`Element <doxid-class_poco_1_1_x_m_l_1_1_element>` copies all attributes and their values, including those generated by the :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` processor to represent defaulted attributes, but this method does not copy any text it contains unless it is a deep clone, since the text is contained in a child :ref:`Text <doxid-class_poco_1_1_x_m_l_1_1_text>` node. Cloning an Attribute directly, as opposed to be cloned as part of an :ref:`Element <doxid-class_poco_1_1_x_m_l_1_1_element>` cloning operation, returns a specified attribute (specified is true). Cloning any other type of node simply returns a copy of this node. Note that cloning an immutable subtree results in a mutable copy, but the children of an :ref:`EntityReference <doxid-class_poco_1_1_x_m_l_1_1_entity_reference>` clone are readonly. In addition, clones of unspecified :ref:`Attr <doxid-class_poco_1_1_x_m_l_1_1_attr>` nodes are specified. And, cloning :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>`, :ref:`DocumentType <doxid-class_poco_1_1_x_m_l_1_1_document_type>`, :ref:`Entity <doxid-class_poco_1_1_x_m_l_1_1_entity>`, and :ref:`Notation <doxid-class_poco_1_1_x_m_l_1_1_notation>` nodes is implementation dependent.

.. index:: pair: function; normalize
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1ac525fd79ed7beb885e77aeab3ca78206:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	normalize() = 0

Puts all :ref:`Text <doxid-class_poco_1_1_x_m_l_1_1_text>` nodes in the full depth of the sub-tree underneath this :ref:`Node <doxid-class_poco_1_1_x_m_l_1_1_node>`, including attribute nodes, into a "normal" form where only structure (e.g., elements, comments, processing instructions, CDATA sections, and entity references) separates :ref:`Text <doxid-class_poco_1_1_x_m_l_1_1_text>` nodes, i.e., there are neither adjacent :ref:`Text <doxid-class_poco_1_1_x_m_l_1_1_text>` nodes nor empty :ref:`Text <doxid-class_poco_1_1_x_m_l_1_1_text>` nodes.

This can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used.

Note: In cases where the document contains CDATASections, the normalize operation alone may not be sufficient, since XPointers do not differentiate between :ref:`Text <doxid-class_poco_1_1_x_m_l_1_1_text>` nodes and :ref:`CDATASection <doxid-class_poco_1_1_x_m_l_1_1_c_d_a_t_a_section>` nodes.

.. index:: pair: function; isSupported
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a3c3533c41e505e7206394353b946bef9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	isSupported(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& feature,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& version
		) const = 0

Tests whether the DOM implementation implements a specific feature and that feature is supported by this node.

.. index:: pair: function; namespaceURI
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a37c21fe48c5c1182e8ccebc64a333df4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`&
	namespaceURI() const = 0

Returns the namespace :ref:`URI <doxid-class_poco_1_1_u_r_i>` of the node.

This is not a computed value that is the result of a namespace lookup based on an examination of the namespace declarations in scope. It is merely the namespace :ref:`URI <doxid-class_poco_1_1_u_r_i>` given at creation time.

For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as createElement from the :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>` interface, this is always the empty string.

.. index:: pair: function; prefix
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a915538dcfeb2452e663d5104b5f9f127:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`
	prefix() const = 0

Returns the namespace prefix from the qualified name of the node.

.. index:: pair: function; localName
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a8a2f7100a551d0255d1cbe45c6ad5c19:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`&
	localName() const = 0

Returns the local name of the node.

.. index:: pair: function; hasAttributes
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a0fa84661e504d460b4b64959f73fa191:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	hasAttributes() const = 0

Returns whether this node (if it is an element) has any attributes.

.. index:: pair: function; innerText
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1ac4ba8b4a41470232f41efa78ee8e3754:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`
	innerText() const = 0

Returns a string containing the concatenated values of the node and all its child nodes.

This method is not part of the W3C :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>` Object Model.

.. index:: pair: function; getNodeByPath
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1adb003087b290d656baa56f750f82b441:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	getNodeByPath(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& path) const = 0

Searches a node (element or attribute) based on a simplified XPath expression.

Only simple XPath expressions are supported. These are the slash notation for specifying paths to elements, and the square bracket expression for finding elements by their index, by attribute value, or finding attributes by names.

The slash at the beginning is optional, the evaluation always starts at this element. A double-slash at the beginning recursively searches the entire subtree for the first element.

Examples:

.. ref-code-block:: cpp

	elem1/elem2/elem3
	/elem1/elem2/elem3
	/elem1/elem2[1]
	/elem1/elem2[@attr1]
	/elem1/elem2[@attr1='value']
	//elem2[@attr1='value']
	//[@attr1='value']

This method is an extension to the W3C :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>` Object Model.

.. index:: pair: function; getNodeByPathNS
.. _doxid-class_poco_1_1_x_m_l_1_1_node_1a2ab2b32e70b3d6633bb60e60b85f10d7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	Node*
	getNodeByPathNS(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& path,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`NSMap<doxid-class_poco_1_1_x_m_l_1_1_node_1a2815ffa9bf91f10808179e39a45a73b4>`& nsMap
		) const = 0

Searches a node (element or attribute) based on a simplified XPath expression.

The given NSMap must contain mappings from namespace prefixes to namespace URIs for all namespace prefixes used in the path expression.

Only simple XPath expressions are supported. These are the slash notation for specifying paths to elements, and the square bracket expression for finding elements by their index, by attribute value, or finding attributes by names.

The slash at the beginning is optional, the evaluation always starts at this element. A double-slash at the beginning recursively searches the entire subtree for the first element.

Examples:

.. ref-code-block:: cpp

	/ns1:elem1/ns2:elem2/ns2:elem3
	/ns1:elem1/ns2:elem2[1]
	/ns1:elem1/ns2:elem2[@attr1]
	/ns1:elem1/ns2:elem2[@attr1='value']
	//ns2:elem2[@ns1:attr1='value']
	//[@ns1:attr1='value']

This method is an extension to the W3C :ref:`Document <doxid-class_poco_1_1_x_m_l_1_1_document>` Object Model.

