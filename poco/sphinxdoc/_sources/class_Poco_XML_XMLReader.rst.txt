.. index:: pair: class; Poco::XML::XMLReader
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader:

class Poco::XML::XMLReader
==========================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Interface for reading an :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` document using callbacks. :ref:`More...<details-class_poco_1_1_x_m_l_1_1_x_m_l_reader>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <XMLReader.h>
	
	class XMLReader
	{
	public:
		// fields
	
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>` :target:`FEATURE_VALIDATION<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a409533ed91cbe32eca02f5d80bb85204>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>` :target:`FEATURE_NAMESPACES<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a4712a78fb584e07bc5ac8d67f6345641>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>` :target:`FEATURE_NAMESPACE_PREFIXES<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a4f2680eb4db6ddd479e1ac43947e4a0e>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>` :target:`FEATURE_EXTERNAL_GENERAL_ENTITIES<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a9d85a3a45aef3bc06aa784a2a0770a3e>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>` :target:`FEATURE_EXTERNAL_PARAMETER_ENTITIES<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aae78087b4f3631e0df06043a1e800aef>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>` :target:`FEATURE_STRING_INTERNING<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a3271fb502bb5627cf90c98a5afc078d8>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>` :target:`PROPERTY_DECLARATION_HANDLER<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a28b31397aae3ae16f63fda1a97103b68>`;
		static :ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>` :target:`PROPERTY_LEXICAL_HANDLER<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1abc62e144aade8271efc1b2b2e0897725>`;

		// methods
	
		virtual
		void
		:ref:`setEntityResolver<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a3522d5bf823a6b4046579a5f658c46ad>`(:ref:`EntityResolver<doxid-class_poco_1_1_x_m_l_1_1_entity_resolver>`* pResolver) = 0;
	
		virtual
		:ref:`EntityResolver<doxid-class_poco_1_1_x_m_l_1_1_entity_resolver>`*
		:ref:`getEntityResolver<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a54d0689fc32d4921148dde326bbebaeb>`() const = 0;
	
		virtual
		void
		:ref:`setDTDHandler<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a785d035abaff5ff0d36cacb471e677eb>`(:ref:`DTDHandler<doxid-class_poco_1_1_x_m_l_1_1_d_t_d_handler>`* pDTDHandler) = 0;
	
		virtual
		:ref:`DTDHandler<doxid-class_poco_1_1_x_m_l_1_1_d_t_d_handler>`*
		:ref:`getDTDHandler<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a867310897d242f0f0ff448142e2607e1>`() const = 0;
	
		virtual
		void
		:ref:`setContentHandler<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aadacd358e57071fbfbb3671bed4f1f61>`(:ref:`ContentHandler<doxid-class_poco_1_1_x_m_l_1_1_content_handler>`* pContentHandler) = 0;
	
		virtual
		:ref:`ContentHandler<doxid-class_poco_1_1_x_m_l_1_1_content_handler>`*
		:ref:`getContentHandler<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a3712bc89e526df945aec6ca77c190292>`() const = 0;
	
		virtual
		void
		:ref:`setErrorHandler<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a869666d9022d918cc4d9f2159864a6ac>`(:ref:`ErrorHandler<doxid-class_poco_1_1_x_m_l_1_1_error_handler>`* pErrorHandler) = 0;
	
		virtual
		:ref:`ErrorHandler<doxid-class_poco_1_1_x_m_l_1_1_error_handler>`*
		:ref:`getErrorHandler<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aec99f805755edec6890b1ab1dbc489c9>`() const = 0;
	
		virtual
		void
		:ref:`setFeature<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a55e0134e8925f3869c2c591cd05afac5>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& featureId,
			bool state
			) = 0;
	
		virtual
		bool
		:ref:`getFeature<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aa0ca0c14599632508d6a09f8d50f2b2e>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& featureId) const = 0;
	
		virtual
		void
		:ref:`setProperty<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a904688bc750abb8cb8fb18e24a89a7ab>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& propertyId,
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& value
			) = 0;
	
		virtual
		void
		:ref:`setProperty<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a9947ad99fd9da1bbbafb5780982f5d89>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& propertyId,
			void* value
			) = 0;
	
		virtual
		void*
		:ref:`getProperty<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1afe7fc11527a67f5871098cf7a9d897b6>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& propertyId) const = 0;
	
		virtual
		void
		:ref:`parse<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aafa45ffeb18d9d9ebe9c7859bb413a37>`(:ref:`InputSource<doxid-class_poco_1_1_x_m_l_1_1_input_source>`* pSource) = 0;
	
		virtual
		void
		:ref:`parse<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a0dda21988ed95a12a1135ae5b5425f84>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& systemId) = 0;
	
		virtual
		void
		:ref:`parseMemoryNP<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a81e5710a93ebee6105f0788f0a3bc9c8>`(
			:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* xml,
			std::size_t size
			) = 0;
	};

	// direct descendants

	class :ref:`DOMSerializer<doxid-class_poco_1_1_x_m_l_1_1_d_o_m_serializer>`;
	class :ref:`SAXParser<doxid-class_poco_1_1_x_m_l_1_1_s_a_x_parser>`;
	class :ref:`XMLFilter<doxid-class_poco_1_1_x_m_l_1_1_x_m_l_filter>`;
.. _details-class_poco_1_1_x_m_l_1_1_x_m_l_reader:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Interface for reading an :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` document using callbacks.

:ref:`XMLReader <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader>` is the interface that an :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` parser's SAX2 driver must implement. This interface allows an application to set and query features and properties in the parser, to register event handlers for document processing, and to initiate a document parse. All SAX interfaces are assumed to be synchronous: the parse methods must not return until parsing is complete, and readers must wait for an event-handler callback to return before reporting the next event.

Methods
-------

.. index:: pair: function; setEntityResolver
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a3522d5bf823a6b4046579a5f658c46ad:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setEntityResolver(:ref:`EntityResolver<doxid-class_poco_1_1_x_m_l_1_1_entity_resolver>`* pResolver) = 0

Allow an application to register an entity resolver.

If the application does not register an entity resolver, the :ref:`XMLReader <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader>` will perform its own default resolution.

Applications may register a new or different resolver in the middle of a parse, and the SAX parser must begin using the new resolver immediately.

.. index:: pair: function; getEntityResolver
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a54d0689fc32d4921148dde326bbebaeb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`EntityResolver<doxid-class_poco_1_1_x_m_l_1_1_entity_resolver>`*
	getEntityResolver() const = 0

Return the current entity resolver.

.. index:: pair: function; setDTDHandler
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a785d035abaff5ff0d36cacb471e677eb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setDTDHandler(:ref:`DTDHandler<doxid-class_poco_1_1_x_m_l_1_1_d_t_d_handler>`* pDTDHandler) = 0

Allow an application to register a DTD event handler.

If the application does not register a DTD handler, all DTD events reported by the SAX parser will be silently ignored.

Applications may register a new or different handler in the middle of a parse, and the SAX parser must begin using the new handler immediately.

.. index:: pair: function; getDTDHandler
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a867310897d242f0f0ff448142e2607e1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`DTDHandler<doxid-class_poco_1_1_x_m_l_1_1_d_t_d_handler>`*
	getDTDHandler() const = 0

Return the current DTD handler.

.. index:: pair: function; setContentHandler
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aadacd358e57071fbfbb3671bed4f1f61:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setContentHandler(:ref:`ContentHandler<doxid-class_poco_1_1_x_m_l_1_1_content_handler>`* pContentHandler) = 0

Allow an application to register a content event handler.

If the application does not register a content handler, all content events reported by the SAX parser will be silently ignored.

Applications may register a new or different handler in the middle of a parse, and the SAX parser must begin using the new handler immediately.

.. index:: pair: function; getContentHandler
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a3712bc89e526df945aec6ca77c190292:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`ContentHandler<doxid-class_poco_1_1_x_m_l_1_1_content_handler>`*
	getContentHandler() const = 0

Return the current content handler.

.. index:: pair: function; setErrorHandler
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a869666d9022d918cc4d9f2159864a6ac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setErrorHandler(:ref:`ErrorHandler<doxid-class_poco_1_1_x_m_l_1_1_error_handler>`* pErrorHandler) = 0

Allow an application to register an error event handler.

If the application does not register an error handler, all error events reported by the SAX parser will be silently ignored; however, normal processing may not continue. It is highly recommended that all SAX applications implement an error handler to avoid unexpected bugs.

Applications may register a new or different handler in the middle of a parse, and the SAX parser must begin using the new handler immediately.

.. index:: pair: function; getErrorHandler
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aec99f805755edec6890b1ab1dbc489c9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	:ref:`ErrorHandler<doxid-class_poco_1_1_x_m_l_1_1_error_handler>`*
	getErrorHandler() const = 0

Return the current error handler.

.. index:: pair: function; setFeature
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a55e0134e8925f3869c2c591cd05afac5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setFeature(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& featureId,
		bool state
		) = 0

Set the state of a feature.

The feature name is any fully-qualified :ref:`URI <doxid-class_poco_1_1_u_r_i>`. It is possible for an :ref:`XMLReader <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader>` to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a parse.

All XMLReaders are required to support setting `http://xml.org/sax/features/namespaces <http://xml.org/sax/features/namespaces>`__ to true and `http://xml.org/sax/features/namespace-prefixes <http://xml.org/sax/features/namespace-prefixes>`__ to false.

.. index:: pair: function; getFeature
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aa0ca0c14599632508d6a09f8d50f2b2e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	bool
	getFeature(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& featureId) const = 0

Look up the value of a feature.

The feature name is any fully-qualified :ref:`URI <doxid-class_poco_1_1_u_r_i>`. It is possible for an :ref:`XMLReader <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader>` to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a parse. Also, some feature values may not be programmatically accessible. (In the case of an adapter for SAX1 Parser, there is no implementation-independent way to expose whether the underlying parser is performing validation, expanding external entities, and so forth.)

All XMLReaders are required to recognize the `http://xml.org/sax/features/namespaces <http://xml.org/sax/features/namespaces>`__ and the `http://xml.org/sax/features/namespace-prefixes <http://xml.org/sax/features/namespace-prefixes>`__ feature names. Implementors are free (and encouraged) to invent their own features, using names built on their own URIs.

.. index:: pair: function; setProperty
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a904688bc750abb8cb8fb18e24a89a7ab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setProperty(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& propertyId,
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& value
		) = 0

Set the value of a property.

The property name is any fully-qualified :ref:`URI <doxid-class_poco_1_1_u_r_i>`. It is possible for an :ref:`XMLReader <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader>` to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a parse.

XMLReaders are not required to recognize setting any specific property names, though a core set is defined by SAX2.

This method is also the standard mechanism for setting extended handlers.

.. index:: pair: function; setProperty
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a9947ad99fd9da1bbbafb5780982f5d89:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	setProperty(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& propertyId,
		void* value
		) = 0

Set the value of a property.

See also :ref:`setProperty(const XMLString&, const XMLString&) <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a904688bc750abb8cb8fb18e24a89a7ab>`.

.. index:: pair: function; getProperty
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1afe7fc11527a67f5871098cf7a9d897b6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void*
	getProperty(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& propertyId) const = 0

Look up the value of a property.

String values are returned as XMLChar\* The property name is any fully-qualified :ref:`URI <doxid-class_poco_1_1_u_r_i>`. It is possible for an :ref:`XMLReader <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader>` to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a parse.

XMLReaders are not required to recognize any specific property names, though an initial core set is documented for SAX2.

Implementors are free (and encouraged) to invent their own properties, using names built on their own URIs.

.. index:: pair: function; parse
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aafa45ffeb18d9d9ebe9c7859bb413a37:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	parse(:ref:`InputSource<doxid-class_poco_1_1_x_m_l_1_1_input_source>`* pSource) = 0

Parse an :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` document.

The application can use this method to instruct the :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` reader to begin parsing an :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` document from any valid input source (a character stream, a byte stream, or a :ref:`URI <doxid-class_poco_1_1_u_r_i>`).

Applications may not invoke this method while a parse is in progress (they should create a new :ref:`XMLReader <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader>` instead for each nested :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` document). Once a parse is complete, an application may reuse the same :ref:`XMLReader <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader>` object, possibly with a different input source. Configuration of the :ref:`XMLReader <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader>` object (such as handler bindings and values established for feature flags and properties) is unchanged by completion of a parse, unless the definition of that aspect of the configuration explicitly specifies other behavior. (For example, feature flags or properties exposing characteristics of the document being parsed.)

During the parse, the :ref:`XMLReader <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader>` will provide information about the :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` document through the registered event handlers.

This method is synchronous: it will not return until parsing has ended. If a client application wants to terminate parsing early, it should throw an exception.

.. index:: pair: function; parse
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a0dda21988ed95a12a1135ae5b5425f84:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	parse(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` :ref:`XMLString<doxid-namespace_poco_1_1_x_m_l_1a288dd5005eea5f995c0169e0688593ae>`& systemId) = 0

Parse an :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` document from a system identifier.

See also :ref:`parse(InputSource\*) <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aafa45ffeb18d9d9ebe9c7859bb413a37>`.

.. index:: pair: function; parseMemoryNP
.. _doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1a81e5710a93ebee6105f0788f0a3bc9c8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	virtual
	void
	parseMemoryNP(
		:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` char* xml,
		std::size_t size
		) = 0

Parse an :ref:`XML <doxid-namespace_poco_1_1_x_m_l>` document from memory.

See also :ref:`parse(InputSource\*) <doxid-class_poco_1_1_x_m_l_1_1_x_m_l_reader_1aafa45ffeb18d9d9ebe9c7859bb413a37>`.

