.. index:: pair: struct; Poco::AlignOf
.. _doxid-struct_poco_1_1_align_of:

template struct Poco::AlignOf
=============================

.. toctree::
	:hidden:

Overview
~~~~~~~~

A templated class that contains an enum value representing the alignment of the template argument. :ref:`More...<details-struct_poco_1_1_align_of>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <Alignment.h>
	
	template <typename T>
	struct AlignOf
	{
		// enums
	
		enum
		{
		    :target:`Alignment<doxid-struct_poco_1_1_align_of_1ad215c3baa9dbc20c785e4144cac11371ac6623e7d6bd6dbf0dcb112f45e4e00c2>` = static_cast<unsigned int>(sizeof(AlignmentCalcImpl<T>) - sizeof(T)),
		};
	};
.. _details-struct_poco_1_1_align_of:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

A templated class that contains an enum value representing the alignment of the template argument.

For example, :ref:`AlignOf\<int>::Alignment <doxid-struct_poco_1_1_align_of_1ad215c3baa9dbc20c785e4144cac11371ac6623e7d6bd6dbf0dcb112f45e4e00c2>` represents the alignment of type "int". The alignment calculated is the minimum alignment, and not necessarily the "desired" alignment returned by GCC's **alignof** (for example). Note that because the alignment is an enum value, it can be used as a compile-time constant (e.g., for template instantiation).

