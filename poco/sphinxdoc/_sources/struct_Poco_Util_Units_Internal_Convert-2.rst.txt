.. index:: pair: struct; Poco::Util::Units::Internal::Convert
.. _doxid-struct_poco_1_1_util_1_1_units_1_1_internal_1_1_convert:

template struct Poco::Util::Units::Internal::Convert
====================================================

.. toctree::
	:hidden:

Overview
~~~~~~~~

Converts T1 to T2. :ref:`More...<details-struct_poco_1_1_util_1_1_units_1_1_internal_1_1_convert>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	#include <Units.h>
	
	template <
		typename T1,
		typename T2
		>
	struct Convert
	{
		// methods
	
		:target:`poco_static_assert<doxid-struct_poco_1_1_util_1_1_units_1_1_internal_1_1_convert_1a5263c4e28b7b03ef3ce2cf5717fad6a5>`((:ref:`Convertible<doxid-struct_poco_1_1_util_1_1_units_1_1_internal_1_1_convertible>`<T1, T2>:::ref:`Value<doxid-class_poco_1_1_util_1_1_units_1_1_value>`));
	
		template <typename V>
		static
		V
		:target:`fn<doxid-struct_poco_1_1_util_1_1_units_1_1_internal_1_1_convert_1a7429e794cef495514a9631ee7fc042e4>`(:ref:`const<doxid-zconf_8h_1a2c212835823e3c54a8ab6d95c652660e>` V& v);
	};
.. _details-struct_poco_1_1_util_1_1_units_1_1_internal_1_1_convert:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

Converts T1 to T2.

If you really want to implement your own conversion routine, specialize this template. The default implementation falls through to :ref:`Convert2 <doxid-struct_poco_1_1_util_1_1_units_1_1_internal_1_1_convert2>`. If this fails, then T1 is not :ref:`Convertible <doxid-struct_poco_1_1_util_1_1_units_1_1_internal_1_1_convertible>` to T2:

